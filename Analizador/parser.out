Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    Comentario
    False
    True
    llaveA
    llaveC

Grammar

Rule 0     S' -> init
Rule 1     init -> INSTRUCCIONES
Rule 2     INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION
Rule 3     INSTRUCCIONES -> INSTRUCCION
Rule 4     INSTRUCCION -> DECLARACION
Rule 5     DECLARACION -> Let Id igual EXPRESION ptComa
Rule 6     DECLARACION -> Let Id dosPuntos I64 igual EXPRESION ptComa
Rule 7     DECLARACION -> Let Id dosPuntos F64 igual EXPRESION ptComa
Rule 8     DECLARACION -> Let Id dosPuntos StrA igual EXPRESION ptComa
Rule 9     DECLARACION -> Let Id dosPuntos Str igual EXPRESION ptComa
Rule 10    DECLARACION -> Let Id dosPuntos Bool igual EXPRESION ptComa
Rule 11    DECLARACION -> Let Id dosPuntos CharAux igual EXPRESION ptComa
Rule 12    DECLARACION -> Let Mut Id igual EXPRESION ptComa
Rule 13    DECLARACION -> Let Mut Id dosPuntos I64 igual EXPRESION ptComa
Rule 14    DECLARACION -> Let Mut Id dosPuntos F64 igual EXPRESION ptComa
Rule 15    DECLARACION -> Let Mut Id dosPuntos StrA igual EXPRESION ptComa
Rule 16    DECLARACION -> Let Mut Id dosPuntos Str igual EXPRESION ptComa
Rule 17    DECLARACION -> Let Mut Id dosPuntos Bool igual EXPRESION ptComa
Rule 18    DECLARACION -> Let Mut Id dosPuntos CharAux igual EXPRESION ptComa
Rule 19    DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
Rule 20    DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
Rule 21    DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
Rule 22    DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
Rule 23    DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
Rule 24    DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
Rule 25    DECLARACION -> Let Id igual vec not CorA COMASEX CorC ptComa
Rule 26    DECLARACION -> Let Id igual vec not CorA EXPRESION ptComa EXPRESION CorC ptComa
Rule 27    DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
Rule 28    DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
Rule 29    DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
Rule 30    DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
Rule 31    DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
Rule 32    DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
Rule 33    DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
Rule 34    DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
Rule 35    DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
Rule 36    DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
Rule 37    DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
Rule 38    DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
Rule 39    DECLARACION -> Let Mut Id igual vec not CorA COMASEX CorC ptComa
Rule 40    DECLARACION -> Let Mut Id igual vec not CorA EXPRESION ptComa EXPRESION CorC ptComa
Rule 41    DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
Rule 42    DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
Rule 43    DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
Rule 44    DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
Rule 45    DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
Rule 46    DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
Rule 47    INSTRUCCION -> ASIGNACION
Rule 48    ASIGNACION -> Id igual EXPRESION ptComa
Rule 49    INSTRUCCION -> IMPRIMIR
Rule 50    IMPRIMIR -> PrintLn not ParA String ParC ptComa
Rule 51    IMPRIMIR -> PrintLn not ParA String Coma COMASEX ParC ptComa
Rule 52    COMASEX -> COMASEX Coma EXPRESION
Rule 53    COMASEX -> EXPRESION
Rule 54    EXPRESION -> EXPRESION mas EXPRESION
Rule 55    EXPRESION -> EXPRESION menos EXPRESION
Rule 56    EXPRESION -> EXPRESION por EXPRESION
Rule 57    EXPRESION -> EXPRESION dividido EXPRESION
Rule 58    EXPRESION -> EXPRESION modulo EXPRESION
Rule 59    EXPRESION -> menos EXPRESION
Rule 60    EXPRESION -> ParA EXPRESION ParC
Rule 61    EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
Rule 62    EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
Rule 63    EXPRESION -> EXPRESION menorQue EXPRESION
Rule 64    EXPRESION -> EXPRESION mayorQue EXPRESION
Rule 65    EXPRESION -> EXPRESION menorIgual EXPRESION
Rule 66    EXPRESION -> EXPRESION mayorIgual EXPRESION
Rule 67    EXPRESION -> EXPRESION dobleIgual EXPRESION
Rule 68    EXPRESION -> EXPRESION diferenteQue EXPRESION
Rule 69    EXPRESION -> EXPRESION And EXPRESION
Rule 70    EXPRESION -> EXPRESION Or EXPRESION
Rule 71    EXPRESION -> not EXPRESION
Rule 72    EXPRESION -> EXPRESION AS I64
Rule 73    EXPRESION -> EXPRESION AS F64
Rule 74    EXPRESION -> Float
Rule 75    EXPRESION -> Entero
Rule 76    EXPRESION -> Booleano
Rule 77    EXPRESION -> String
Rule 78    EXPRESION -> Char
Rule 79    EXPRESION -> Id

Terminals, with rules where they appear

AS                   : 72 73
And                  : 69
Bool                 : 10 17 23 31 37 45
Booleano             : 76
Capacidad            : 27 28 29 30 31 32 41 42 43 44 45 46
Char                 : 78
CharAux              : 11 18 24 32 38 46
Coma                 : 51 52 61 62
Comentario           : 
CorA                 : 25 26 39 40
CorC                 : 25 26 39 40
Entero               : 75
F64                  : 7 14 20 28 34 42 62 73
False                : 
Float                : 74
I64                  : 6 13 19 27 33 41 61 72
Id                   : 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 48 79
Let                  : 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46
Mut                  : 12 13 14 15 16 17 18 33 34 35 36 37 38 39 40 41 42 43 44 45 46
New                  : 19 20 21 22 23 24 33 34 35 36 37 38
Or                   : 70
ParA                 : 19 20 21 22 23 24 27 28 29 30 31 32 33 34 35 36 37 38 41 42 43 44 45 46 50 51 60 61 62
ParC                 : 19 20 21 22 23 24 27 28 29 30 31 32 33 34 35 36 37 38 41 42 43 44 45 46 50 51 60 61 62
Powf                 : 62
Powi                 : 61
PrintLn              : 50 51
Str                  : 9 16 22 30 36 44
StrA                 : 8 15 21 29 35 43
String               : 50 51 77
True                 : 
VEC                  : 19 19 20 20 21 21 22 22 23 23 24 24 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 41 41 42 42 43 43 44 44 45 45 46 46
diferenteQue         : 68
dividido             : 57
dobleIgual           : 67
dosPuntos            : 6 7 8 9 10 11 13 14 15 16 17 18 19 19 19 20 20 20 21 21 21 22 22 22 23 23 23 24 24 24 27 27 27 28 28 28 29 29 29 30 30 30 31 31 31 32 32 32 33 33 33 34 34 34 35 35 35 36 36 36 37 37 37 38 38 38 41 41 41 42 42 42 43 43 43 44 44 44 45 45 45 46 46 46 61 61 62 62
error                : 
igual                : 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 48
llaveA               : 
llaveC               : 
mas                  : 54
mayorIgual           : 66
mayorQue             : 19 20 21 22 23 24 27 28 29 30 31 32 33 34 35 36 37 38 41 42 43 44 45 46 64
menorIgual           : 65
menorQue             : 19 20 21 22 23 24 27 28 29 30 31 32 33 34 35 36 37 38 41 42 43 44 45 46 63
menos                : 55 59
modulo               : 58
not                  : 25 26 39 40 50 51 71
por                  : 56
ptComa               : 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 40 41 42 43 44 45 46 48 50 51
vec                  : 25 26 39 40

Nonterminals, with rules where they appear

ASIGNACION           : 47
COMASEX              : 25 39 51 52
DECLARACION          : 4
EXPRESION            : 5 6 7 8 9 10 11 12 13 14 15 16 17 18 26 26 27 28 29 30 31 32 40 40 41 42 43 44 45 46 48 52 53 54 54 55 55 56 56 57 57 58 58 59 60 61 61 62 62 63 63 64 64 65 65 66 66 67 67 68 68 69 69 70 70 71 72 73
IMPRIMIR             : 49
INSTRUCCION          : 2 3
INSTRUCCIONES        : 1 2
init                 : 0

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . INSTRUCCIONES
    (2) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (3) INSTRUCCIONES -> . INSTRUCCION
    (4) INSTRUCCION -> . DECLARACION
    (47) INSTRUCCION -> . ASIGNACION
    (49) INSTRUCCION -> . IMPRIMIR
    (5) DECLARACION -> . Let Id igual EXPRESION ptComa
    (6) DECLARACION -> . Let Id dosPuntos I64 igual EXPRESION ptComa
    (7) DECLARACION -> . Let Id dosPuntos F64 igual EXPRESION ptComa
    (8) DECLARACION -> . Let Id dosPuntos StrA igual EXPRESION ptComa
    (9) DECLARACION -> . Let Id dosPuntos Str igual EXPRESION ptComa
    (10) DECLARACION -> . Let Id dosPuntos Bool igual EXPRESION ptComa
    (11) DECLARACION -> . Let Id dosPuntos CharAux igual EXPRESION ptComa
    (12) DECLARACION -> . Let Mut Id igual EXPRESION ptComa
    (13) DECLARACION -> . Let Mut Id dosPuntos I64 igual EXPRESION ptComa
    (14) DECLARACION -> . Let Mut Id dosPuntos F64 igual EXPRESION ptComa
    (15) DECLARACION -> . Let Mut Id dosPuntos StrA igual EXPRESION ptComa
    (16) DECLARACION -> . Let Mut Id dosPuntos Str igual EXPRESION ptComa
    (17) DECLARACION -> . Let Mut Id dosPuntos Bool igual EXPRESION ptComa
    (18) DECLARACION -> . Let Mut Id dosPuntos CharAux igual EXPRESION ptComa
    (19) DECLARACION -> . Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (20) DECLARACION -> . Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (21) DECLARACION -> . Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (22) DECLARACION -> . Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (23) DECLARACION -> . Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (24) DECLARACION -> . Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (25) DECLARACION -> . Let Id igual vec not CorA COMASEX CorC ptComa
    (26) DECLARACION -> . Let Id igual vec not CorA EXPRESION ptComa EXPRESION CorC ptComa
    (27) DECLARACION -> . Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (28) DECLARACION -> . Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (29) DECLARACION -> . Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (30) DECLARACION -> . Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (31) DECLARACION -> . Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (32) DECLARACION -> . Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (33) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (34) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (35) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (36) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (37) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (38) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (39) DECLARACION -> . Let Mut Id igual vec not CorA COMASEX CorC ptComa
    (40) DECLARACION -> . Let Mut Id igual vec not CorA EXPRESION ptComa EXPRESION CorC ptComa
    (41) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (42) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (43) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (44) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (45) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (46) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (48) ASIGNACION -> . Id igual EXPRESION ptComa
    (50) IMPRIMIR -> . PrintLn not ParA String ParC ptComa
    (51) IMPRIMIR -> . PrintLn not ParA String Coma COMASEX ParC ptComa

    Let             shift and go to state 7
    Id              shift and go to state 8
    PrintLn         shift and go to state 9

    init                           shift and go to state 1
    INSTRUCCIONES                  shift and go to state 2
    INSTRUCCION                    shift and go to state 3
    DECLARACION                    shift and go to state 4
    ASIGNACION                     shift and go to state 5
    IMPRIMIR                       shift and go to state 6

state 1

    (0) S' -> init .



state 2

    (1) init -> INSTRUCCIONES .
    (2) INSTRUCCIONES -> INSTRUCCIONES . INSTRUCCION
    (4) INSTRUCCION -> . DECLARACION
    (47) INSTRUCCION -> . ASIGNACION
    (49) INSTRUCCION -> . IMPRIMIR
    (5) DECLARACION -> . Let Id igual EXPRESION ptComa
    (6) DECLARACION -> . Let Id dosPuntos I64 igual EXPRESION ptComa
    (7) DECLARACION -> . Let Id dosPuntos F64 igual EXPRESION ptComa
    (8) DECLARACION -> . Let Id dosPuntos StrA igual EXPRESION ptComa
    (9) DECLARACION -> . Let Id dosPuntos Str igual EXPRESION ptComa
    (10) DECLARACION -> . Let Id dosPuntos Bool igual EXPRESION ptComa
    (11) DECLARACION -> . Let Id dosPuntos CharAux igual EXPRESION ptComa
    (12) DECLARACION -> . Let Mut Id igual EXPRESION ptComa
    (13) DECLARACION -> . Let Mut Id dosPuntos I64 igual EXPRESION ptComa
    (14) DECLARACION -> . Let Mut Id dosPuntos F64 igual EXPRESION ptComa
    (15) DECLARACION -> . Let Mut Id dosPuntos StrA igual EXPRESION ptComa
    (16) DECLARACION -> . Let Mut Id dosPuntos Str igual EXPRESION ptComa
    (17) DECLARACION -> . Let Mut Id dosPuntos Bool igual EXPRESION ptComa
    (18) DECLARACION -> . Let Mut Id dosPuntos CharAux igual EXPRESION ptComa
    (19) DECLARACION -> . Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (20) DECLARACION -> . Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (21) DECLARACION -> . Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (22) DECLARACION -> . Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (23) DECLARACION -> . Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (24) DECLARACION -> . Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (25) DECLARACION -> . Let Id igual vec not CorA COMASEX CorC ptComa
    (26) DECLARACION -> . Let Id igual vec not CorA EXPRESION ptComa EXPRESION CorC ptComa
    (27) DECLARACION -> . Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (28) DECLARACION -> . Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (29) DECLARACION -> . Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (30) DECLARACION -> . Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (31) DECLARACION -> . Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (32) DECLARACION -> . Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (33) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (34) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (35) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (36) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (37) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (38) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (39) DECLARACION -> . Let Mut Id igual vec not CorA COMASEX CorC ptComa
    (40) DECLARACION -> . Let Mut Id igual vec not CorA EXPRESION ptComa EXPRESION CorC ptComa
    (41) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (42) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (43) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (44) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (45) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (46) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (48) ASIGNACION -> . Id igual EXPRESION ptComa
    (50) IMPRIMIR -> . PrintLn not ParA String ParC ptComa
    (51) IMPRIMIR -> . PrintLn not ParA String Coma COMASEX ParC ptComa

    $end            reduce using rule 1 (init -> INSTRUCCIONES .)
    Let             shift and go to state 7
    Id              shift and go to state 8
    PrintLn         shift and go to state 9

    INSTRUCCION                    shift and go to state 10
    DECLARACION                    shift and go to state 4
    ASIGNACION                     shift and go to state 5
    IMPRIMIR                       shift and go to state 6

state 3

    (3) INSTRUCCIONES -> INSTRUCCION .

    Let             reduce using rule 3 (INSTRUCCIONES -> INSTRUCCION .)
    Id              reduce using rule 3 (INSTRUCCIONES -> INSTRUCCION .)
    PrintLn         reduce using rule 3 (INSTRUCCIONES -> INSTRUCCION .)
    $end            reduce using rule 3 (INSTRUCCIONES -> INSTRUCCION .)


state 4

    (4) INSTRUCCION -> DECLARACION .

    Let             reduce using rule 4 (INSTRUCCION -> DECLARACION .)
    Id              reduce using rule 4 (INSTRUCCION -> DECLARACION .)
    PrintLn         reduce using rule 4 (INSTRUCCION -> DECLARACION .)
    $end            reduce using rule 4 (INSTRUCCION -> DECLARACION .)


state 5

    (47) INSTRUCCION -> ASIGNACION .

    Let             reduce using rule 47 (INSTRUCCION -> ASIGNACION .)
    Id              reduce using rule 47 (INSTRUCCION -> ASIGNACION .)
    PrintLn         reduce using rule 47 (INSTRUCCION -> ASIGNACION .)
    $end            reduce using rule 47 (INSTRUCCION -> ASIGNACION .)


state 6

    (49) INSTRUCCION -> IMPRIMIR .

    Let             reduce using rule 49 (INSTRUCCION -> IMPRIMIR .)
    Id              reduce using rule 49 (INSTRUCCION -> IMPRIMIR .)
    PrintLn         reduce using rule 49 (INSTRUCCION -> IMPRIMIR .)
    $end            reduce using rule 49 (INSTRUCCION -> IMPRIMIR .)


state 7

    (5) DECLARACION -> Let . Id igual EXPRESION ptComa
    (6) DECLARACION -> Let . Id dosPuntos I64 igual EXPRESION ptComa
    (7) DECLARACION -> Let . Id dosPuntos F64 igual EXPRESION ptComa
    (8) DECLARACION -> Let . Id dosPuntos StrA igual EXPRESION ptComa
    (9) DECLARACION -> Let . Id dosPuntos Str igual EXPRESION ptComa
    (10) DECLARACION -> Let . Id dosPuntos Bool igual EXPRESION ptComa
    (11) DECLARACION -> Let . Id dosPuntos CharAux igual EXPRESION ptComa
    (12) DECLARACION -> Let . Mut Id igual EXPRESION ptComa
    (13) DECLARACION -> Let . Mut Id dosPuntos I64 igual EXPRESION ptComa
    (14) DECLARACION -> Let . Mut Id dosPuntos F64 igual EXPRESION ptComa
    (15) DECLARACION -> Let . Mut Id dosPuntos StrA igual EXPRESION ptComa
    (16) DECLARACION -> Let . Mut Id dosPuntos Str igual EXPRESION ptComa
    (17) DECLARACION -> Let . Mut Id dosPuntos Bool igual EXPRESION ptComa
    (18) DECLARACION -> Let . Mut Id dosPuntos CharAux igual EXPRESION ptComa
    (19) DECLARACION -> Let . Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (20) DECLARACION -> Let . Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (21) DECLARACION -> Let . Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (22) DECLARACION -> Let . Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (23) DECLARACION -> Let . Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (24) DECLARACION -> Let . Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (25) DECLARACION -> Let . Id igual vec not CorA COMASEX CorC ptComa
    (26) DECLARACION -> Let . Id igual vec not CorA EXPRESION ptComa EXPRESION CorC ptComa
    (27) DECLARACION -> Let . Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (28) DECLARACION -> Let . Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (29) DECLARACION -> Let . Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (30) DECLARACION -> Let . Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (31) DECLARACION -> Let . Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (32) DECLARACION -> Let . Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (33) DECLARACION -> Let . Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (34) DECLARACION -> Let . Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (35) DECLARACION -> Let . Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (36) DECLARACION -> Let . Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (37) DECLARACION -> Let . Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (38) DECLARACION -> Let . Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (39) DECLARACION -> Let . Mut Id igual vec not CorA COMASEX CorC ptComa
    (40) DECLARACION -> Let . Mut Id igual vec not CorA EXPRESION ptComa EXPRESION CorC ptComa
    (41) DECLARACION -> Let . Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (42) DECLARACION -> Let . Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (43) DECLARACION -> Let . Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (44) DECLARACION -> Let . Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (45) DECLARACION -> Let . Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (46) DECLARACION -> Let . Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    Id              shift and go to state 11
    Mut             shift and go to state 12


state 8

    (48) ASIGNACION -> Id . igual EXPRESION ptComa

    igual           shift and go to state 13


state 9

    (50) IMPRIMIR -> PrintLn . not ParA String ParC ptComa
    (51) IMPRIMIR -> PrintLn . not ParA String Coma COMASEX ParC ptComa

    not             shift and go to state 14


state 10

    (2) INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .

    Let             reduce using rule 2 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    Id              reduce using rule 2 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    PrintLn         reduce using rule 2 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    $end            reduce using rule 2 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)


state 11

    (5) DECLARACION -> Let Id . igual EXPRESION ptComa
    (6) DECLARACION -> Let Id . dosPuntos I64 igual EXPRESION ptComa
    (7) DECLARACION -> Let Id . dosPuntos F64 igual EXPRESION ptComa
    (8) DECLARACION -> Let Id . dosPuntos StrA igual EXPRESION ptComa
    (9) DECLARACION -> Let Id . dosPuntos Str igual EXPRESION ptComa
    (10) DECLARACION -> Let Id . dosPuntos Bool igual EXPRESION ptComa
    (11) DECLARACION -> Let Id . dosPuntos CharAux igual EXPRESION ptComa
    (19) DECLARACION -> Let Id . dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (20) DECLARACION -> Let Id . dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (21) DECLARACION -> Let Id . dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (22) DECLARACION -> Let Id . dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (23) DECLARACION -> Let Id . dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (24) DECLARACION -> Let Id . dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (25) DECLARACION -> Let Id . igual vec not CorA COMASEX CorC ptComa
    (26) DECLARACION -> Let Id . igual vec not CorA EXPRESION ptComa EXPRESION CorC ptComa
    (27) DECLARACION -> Let Id . dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (28) DECLARACION -> Let Id . dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (29) DECLARACION -> Let Id . dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (30) DECLARACION -> Let Id . dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (31) DECLARACION -> Let Id . dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (32) DECLARACION -> Let Id . dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 15
    dosPuntos       shift and go to state 16


state 12

    (12) DECLARACION -> Let Mut . Id igual EXPRESION ptComa
    (13) DECLARACION -> Let Mut . Id dosPuntos I64 igual EXPRESION ptComa
    (14) DECLARACION -> Let Mut . Id dosPuntos F64 igual EXPRESION ptComa
    (15) DECLARACION -> Let Mut . Id dosPuntos StrA igual EXPRESION ptComa
    (16) DECLARACION -> Let Mut . Id dosPuntos Str igual EXPRESION ptComa
    (17) DECLARACION -> Let Mut . Id dosPuntos Bool igual EXPRESION ptComa
    (18) DECLARACION -> Let Mut . Id dosPuntos CharAux igual EXPRESION ptComa
    (33) DECLARACION -> Let Mut . Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (34) DECLARACION -> Let Mut . Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (35) DECLARACION -> Let Mut . Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (36) DECLARACION -> Let Mut . Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (37) DECLARACION -> Let Mut . Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (38) DECLARACION -> Let Mut . Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (39) DECLARACION -> Let Mut . Id igual vec not CorA COMASEX CorC ptComa
    (40) DECLARACION -> Let Mut . Id igual vec not CorA EXPRESION ptComa EXPRESION CorC ptComa
    (41) DECLARACION -> Let Mut . Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (42) DECLARACION -> Let Mut . Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (43) DECLARACION -> Let Mut . Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (44) DECLARACION -> Let Mut . Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (45) DECLARACION -> Let Mut . Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (46) DECLARACION -> Let Mut . Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    Id              shift and go to state 17


state 13

    (48) ASIGNACION -> Id igual . EXPRESION ptComa
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 19

state 14

    (50) IMPRIMIR -> PrintLn not . ParA String ParC ptComa
    (51) IMPRIMIR -> PrintLn not . ParA String Coma COMASEX ParC ptComa

    ParA            shift and go to state 30


state 15

    (5) DECLARACION -> Let Id igual . EXPRESION ptComa
    (25) DECLARACION -> Let Id igual . vec not CorA COMASEX CorC ptComa
    (26) DECLARACION -> Let Id igual . vec not CorA EXPRESION ptComa EXPRESION CorC ptComa
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    vec             shift and go to state 32
    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 31

state 16

    (6) DECLARACION -> Let Id dosPuntos . I64 igual EXPRESION ptComa
    (7) DECLARACION -> Let Id dosPuntos . F64 igual EXPRESION ptComa
    (8) DECLARACION -> Let Id dosPuntos . StrA igual EXPRESION ptComa
    (9) DECLARACION -> Let Id dosPuntos . Str igual EXPRESION ptComa
    (10) DECLARACION -> Let Id dosPuntos . Bool igual EXPRESION ptComa
    (11) DECLARACION -> Let Id dosPuntos . CharAux igual EXPRESION ptComa
    (19) DECLARACION -> Let Id dosPuntos . VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (20) DECLARACION -> Let Id dosPuntos . VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (21) DECLARACION -> Let Id dosPuntos . VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (22) DECLARACION -> Let Id dosPuntos . VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (23) DECLARACION -> Let Id dosPuntos . VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (24) DECLARACION -> Let Id dosPuntos . VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (27) DECLARACION -> Let Id dosPuntos . VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (28) DECLARACION -> Let Id dosPuntos . VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (29) DECLARACION -> Let Id dosPuntos . VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (30) DECLARACION -> Let Id dosPuntos . VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (31) DECLARACION -> Let Id dosPuntos . VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (32) DECLARACION -> Let Id dosPuntos . VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    I64             shift and go to state 33
    F64             shift and go to state 34
    StrA            shift and go to state 35
    Str             shift and go to state 36
    Bool            shift and go to state 37
    CharAux         shift and go to state 38
    VEC             shift and go to state 39


state 17

    (12) DECLARACION -> Let Mut Id . igual EXPRESION ptComa
    (13) DECLARACION -> Let Mut Id . dosPuntos I64 igual EXPRESION ptComa
    (14) DECLARACION -> Let Mut Id . dosPuntos F64 igual EXPRESION ptComa
    (15) DECLARACION -> Let Mut Id . dosPuntos StrA igual EXPRESION ptComa
    (16) DECLARACION -> Let Mut Id . dosPuntos Str igual EXPRESION ptComa
    (17) DECLARACION -> Let Mut Id . dosPuntos Bool igual EXPRESION ptComa
    (18) DECLARACION -> Let Mut Id . dosPuntos CharAux igual EXPRESION ptComa
    (33) DECLARACION -> Let Mut Id . dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (34) DECLARACION -> Let Mut Id . dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (35) DECLARACION -> Let Mut Id . dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (36) DECLARACION -> Let Mut Id . dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (37) DECLARACION -> Let Mut Id . dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (38) DECLARACION -> Let Mut Id . dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (39) DECLARACION -> Let Mut Id . igual vec not CorA COMASEX CorC ptComa
    (40) DECLARACION -> Let Mut Id . igual vec not CorA EXPRESION ptComa EXPRESION CorC ptComa
    (41) DECLARACION -> Let Mut Id . dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (42) DECLARACION -> Let Mut Id . dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (43) DECLARACION -> Let Mut Id . dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (44) DECLARACION -> Let Mut Id . dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (45) DECLARACION -> Let Mut Id . dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (46) DECLARACION -> Let Mut Id . dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 40
    dosPuntos       shift and go to state 41


state 18

    (79) EXPRESION -> Id .

    ptComa          reduce using rule 79 (EXPRESION -> Id .)
    mas             reduce using rule 79 (EXPRESION -> Id .)
    menos           reduce using rule 79 (EXPRESION -> Id .)
    por             reduce using rule 79 (EXPRESION -> Id .)
    dividido        reduce using rule 79 (EXPRESION -> Id .)
    modulo          reduce using rule 79 (EXPRESION -> Id .)
    menorQue        reduce using rule 79 (EXPRESION -> Id .)
    mayorQue        reduce using rule 79 (EXPRESION -> Id .)
    menorIgual      reduce using rule 79 (EXPRESION -> Id .)
    mayorIgual      reduce using rule 79 (EXPRESION -> Id .)
    dobleIgual      reduce using rule 79 (EXPRESION -> Id .)
    diferenteQue    reduce using rule 79 (EXPRESION -> Id .)
    And             reduce using rule 79 (EXPRESION -> Id .)
    Or              reduce using rule 79 (EXPRESION -> Id .)
    AS              reduce using rule 79 (EXPRESION -> Id .)
    ParC            reduce using rule 79 (EXPRESION -> Id .)
    Coma            reduce using rule 79 (EXPRESION -> Id .)
    CorC            reduce using rule 79 (EXPRESION -> Id .)


state 19

    (48) ASIGNACION -> Id igual EXPRESION . ptComa
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    ptComa          shift and go to state 42
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 20

    (59) EXPRESION -> menos . EXPRESION
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 57

state 21

    (60) EXPRESION -> ParA . EXPRESION ParC
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 58

state 22

    (61) EXPRESION -> I64 . dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC

    dosPuntos       shift and go to state 59


state 23

    (62) EXPRESION -> F64 . dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC

    dosPuntos       shift and go to state 60


state 24

    (71) EXPRESION -> not . EXPRESION
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 61

state 25

    (74) EXPRESION -> Float .

    ptComa          reduce using rule 74 (EXPRESION -> Float .)
    mas             reduce using rule 74 (EXPRESION -> Float .)
    menos           reduce using rule 74 (EXPRESION -> Float .)
    por             reduce using rule 74 (EXPRESION -> Float .)
    dividido        reduce using rule 74 (EXPRESION -> Float .)
    modulo          reduce using rule 74 (EXPRESION -> Float .)
    menorQue        reduce using rule 74 (EXPRESION -> Float .)
    mayorQue        reduce using rule 74 (EXPRESION -> Float .)
    menorIgual      reduce using rule 74 (EXPRESION -> Float .)
    mayorIgual      reduce using rule 74 (EXPRESION -> Float .)
    dobleIgual      reduce using rule 74 (EXPRESION -> Float .)
    diferenteQue    reduce using rule 74 (EXPRESION -> Float .)
    And             reduce using rule 74 (EXPRESION -> Float .)
    Or              reduce using rule 74 (EXPRESION -> Float .)
    AS              reduce using rule 74 (EXPRESION -> Float .)
    ParC            reduce using rule 74 (EXPRESION -> Float .)
    Coma            reduce using rule 74 (EXPRESION -> Float .)
    CorC            reduce using rule 74 (EXPRESION -> Float .)


state 26

    (75) EXPRESION -> Entero .

    ptComa          reduce using rule 75 (EXPRESION -> Entero .)
    mas             reduce using rule 75 (EXPRESION -> Entero .)
    menos           reduce using rule 75 (EXPRESION -> Entero .)
    por             reduce using rule 75 (EXPRESION -> Entero .)
    dividido        reduce using rule 75 (EXPRESION -> Entero .)
    modulo          reduce using rule 75 (EXPRESION -> Entero .)
    menorQue        reduce using rule 75 (EXPRESION -> Entero .)
    mayorQue        reduce using rule 75 (EXPRESION -> Entero .)
    menorIgual      reduce using rule 75 (EXPRESION -> Entero .)
    mayorIgual      reduce using rule 75 (EXPRESION -> Entero .)
    dobleIgual      reduce using rule 75 (EXPRESION -> Entero .)
    diferenteQue    reduce using rule 75 (EXPRESION -> Entero .)
    And             reduce using rule 75 (EXPRESION -> Entero .)
    Or              reduce using rule 75 (EXPRESION -> Entero .)
    AS              reduce using rule 75 (EXPRESION -> Entero .)
    ParC            reduce using rule 75 (EXPRESION -> Entero .)
    Coma            reduce using rule 75 (EXPRESION -> Entero .)
    CorC            reduce using rule 75 (EXPRESION -> Entero .)


state 27

    (76) EXPRESION -> Booleano .

    ptComa          reduce using rule 76 (EXPRESION -> Booleano .)
    mas             reduce using rule 76 (EXPRESION -> Booleano .)
    menos           reduce using rule 76 (EXPRESION -> Booleano .)
    por             reduce using rule 76 (EXPRESION -> Booleano .)
    dividido        reduce using rule 76 (EXPRESION -> Booleano .)
    modulo          reduce using rule 76 (EXPRESION -> Booleano .)
    menorQue        reduce using rule 76 (EXPRESION -> Booleano .)
    mayorQue        reduce using rule 76 (EXPRESION -> Booleano .)
    menorIgual      reduce using rule 76 (EXPRESION -> Booleano .)
    mayorIgual      reduce using rule 76 (EXPRESION -> Booleano .)
    dobleIgual      reduce using rule 76 (EXPRESION -> Booleano .)
    diferenteQue    reduce using rule 76 (EXPRESION -> Booleano .)
    And             reduce using rule 76 (EXPRESION -> Booleano .)
    Or              reduce using rule 76 (EXPRESION -> Booleano .)
    AS              reduce using rule 76 (EXPRESION -> Booleano .)
    ParC            reduce using rule 76 (EXPRESION -> Booleano .)
    Coma            reduce using rule 76 (EXPRESION -> Booleano .)
    CorC            reduce using rule 76 (EXPRESION -> Booleano .)


state 28

    (77) EXPRESION -> String .

    ptComa          reduce using rule 77 (EXPRESION -> String .)
    mas             reduce using rule 77 (EXPRESION -> String .)
    menos           reduce using rule 77 (EXPRESION -> String .)
    por             reduce using rule 77 (EXPRESION -> String .)
    dividido        reduce using rule 77 (EXPRESION -> String .)
    modulo          reduce using rule 77 (EXPRESION -> String .)
    menorQue        reduce using rule 77 (EXPRESION -> String .)
    mayorQue        reduce using rule 77 (EXPRESION -> String .)
    menorIgual      reduce using rule 77 (EXPRESION -> String .)
    mayorIgual      reduce using rule 77 (EXPRESION -> String .)
    dobleIgual      reduce using rule 77 (EXPRESION -> String .)
    diferenteQue    reduce using rule 77 (EXPRESION -> String .)
    And             reduce using rule 77 (EXPRESION -> String .)
    Or              reduce using rule 77 (EXPRESION -> String .)
    AS              reduce using rule 77 (EXPRESION -> String .)
    ParC            reduce using rule 77 (EXPRESION -> String .)
    Coma            reduce using rule 77 (EXPRESION -> String .)
    CorC            reduce using rule 77 (EXPRESION -> String .)


state 29

    (78) EXPRESION -> Char .

    ptComa          reduce using rule 78 (EXPRESION -> Char .)
    mas             reduce using rule 78 (EXPRESION -> Char .)
    menos           reduce using rule 78 (EXPRESION -> Char .)
    por             reduce using rule 78 (EXPRESION -> Char .)
    dividido        reduce using rule 78 (EXPRESION -> Char .)
    modulo          reduce using rule 78 (EXPRESION -> Char .)
    menorQue        reduce using rule 78 (EXPRESION -> Char .)
    mayorQue        reduce using rule 78 (EXPRESION -> Char .)
    menorIgual      reduce using rule 78 (EXPRESION -> Char .)
    mayorIgual      reduce using rule 78 (EXPRESION -> Char .)
    dobleIgual      reduce using rule 78 (EXPRESION -> Char .)
    diferenteQue    reduce using rule 78 (EXPRESION -> Char .)
    And             reduce using rule 78 (EXPRESION -> Char .)
    Or              reduce using rule 78 (EXPRESION -> Char .)
    AS              reduce using rule 78 (EXPRESION -> Char .)
    ParC            reduce using rule 78 (EXPRESION -> Char .)
    Coma            reduce using rule 78 (EXPRESION -> Char .)
    CorC            reduce using rule 78 (EXPRESION -> Char .)


state 30

    (50) IMPRIMIR -> PrintLn not ParA . String ParC ptComa
    (51) IMPRIMIR -> PrintLn not ParA . String Coma COMASEX ParC ptComa

    String          shift and go to state 62


state 31

    (5) DECLARACION -> Let Id igual EXPRESION . ptComa
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    ptComa          shift and go to state 63
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 32

    (25) DECLARACION -> Let Id igual vec . not CorA COMASEX CorC ptComa
    (26) DECLARACION -> Let Id igual vec . not CorA EXPRESION ptComa EXPRESION CorC ptComa

    not             shift and go to state 64


state 33

    (6) DECLARACION -> Let Id dosPuntos I64 . igual EXPRESION ptComa

    igual           shift and go to state 65


state 34

    (7) DECLARACION -> Let Id dosPuntos F64 . igual EXPRESION ptComa

    igual           shift and go to state 66


state 35

    (8) DECLARACION -> Let Id dosPuntos StrA . igual EXPRESION ptComa

    igual           shift and go to state 67


state 36

    (9) DECLARACION -> Let Id dosPuntos Str . igual EXPRESION ptComa

    igual           shift and go to state 68


state 37

    (10) DECLARACION -> Let Id dosPuntos Bool . igual EXPRESION ptComa

    igual           shift and go to state 69


state 38

    (11) DECLARACION -> Let Id dosPuntos CharAux . igual EXPRESION ptComa

    igual           shift and go to state 70


state 39

    (19) DECLARACION -> Let Id dosPuntos VEC . menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (20) DECLARACION -> Let Id dosPuntos VEC . menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (21) DECLARACION -> Let Id dosPuntos VEC . menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (22) DECLARACION -> Let Id dosPuntos VEC . menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (23) DECLARACION -> Let Id dosPuntos VEC . menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (24) DECLARACION -> Let Id dosPuntos VEC . menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (27) DECLARACION -> Let Id dosPuntos VEC . menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (28) DECLARACION -> Let Id dosPuntos VEC . menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (29) DECLARACION -> Let Id dosPuntos VEC . menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (30) DECLARACION -> Let Id dosPuntos VEC . menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (31) DECLARACION -> Let Id dosPuntos VEC . menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (32) DECLARACION -> Let Id dosPuntos VEC . menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    menorQue        shift and go to state 71


state 40

    (12) DECLARACION -> Let Mut Id igual . EXPRESION ptComa
    (39) DECLARACION -> Let Mut Id igual . vec not CorA COMASEX CorC ptComa
    (40) DECLARACION -> Let Mut Id igual . vec not CorA EXPRESION ptComa EXPRESION CorC ptComa
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    vec             shift and go to state 73
    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 72

state 41

    (13) DECLARACION -> Let Mut Id dosPuntos . I64 igual EXPRESION ptComa
    (14) DECLARACION -> Let Mut Id dosPuntos . F64 igual EXPRESION ptComa
    (15) DECLARACION -> Let Mut Id dosPuntos . StrA igual EXPRESION ptComa
    (16) DECLARACION -> Let Mut Id dosPuntos . Str igual EXPRESION ptComa
    (17) DECLARACION -> Let Mut Id dosPuntos . Bool igual EXPRESION ptComa
    (18) DECLARACION -> Let Mut Id dosPuntos . CharAux igual EXPRESION ptComa
    (33) DECLARACION -> Let Mut Id dosPuntos . VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (34) DECLARACION -> Let Mut Id dosPuntos . VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (35) DECLARACION -> Let Mut Id dosPuntos . VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (36) DECLARACION -> Let Mut Id dosPuntos . VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (37) DECLARACION -> Let Mut Id dosPuntos . VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (38) DECLARACION -> Let Mut Id dosPuntos . VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (41) DECLARACION -> Let Mut Id dosPuntos . VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (42) DECLARACION -> Let Mut Id dosPuntos . VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (43) DECLARACION -> Let Mut Id dosPuntos . VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (44) DECLARACION -> Let Mut Id dosPuntos . VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (45) DECLARACION -> Let Mut Id dosPuntos . VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (46) DECLARACION -> Let Mut Id dosPuntos . VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    I64             shift and go to state 74
    F64             shift and go to state 75
    StrA            shift and go to state 76
    Str             shift and go to state 77
    Bool            shift and go to state 78
    CharAux         shift and go to state 79
    VEC             shift and go to state 80


state 42

    (48) ASIGNACION -> Id igual EXPRESION ptComa .

    Let             reduce using rule 48 (ASIGNACION -> Id igual EXPRESION ptComa .)
    Id              reduce using rule 48 (ASIGNACION -> Id igual EXPRESION ptComa .)
    PrintLn         reduce using rule 48 (ASIGNACION -> Id igual EXPRESION ptComa .)
    $end            reduce using rule 48 (ASIGNACION -> Id igual EXPRESION ptComa .)


state 43

    (54) EXPRESION -> EXPRESION mas . EXPRESION
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 81

state 44

    (55) EXPRESION -> EXPRESION menos . EXPRESION
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 82

state 45

    (56) EXPRESION -> EXPRESION por . EXPRESION
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 83

state 46

    (57) EXPRESION -> EXPRESION dividido . EXPRESION
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 84

state 47

    (58) EXPRESION -> EXPRESION modulo . EXPRESION
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 85

state 48

    (63) EXPRESION -> EXPRESION menorQue . EXPRESION
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 86

state 49

    (64) EXPRESION -> EXPRESION mayorQue . EXPRESION
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 87

state 50

    (65) EXPRESION -> EXPRESION menorIgual . EXPRESION
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 88

state 51

    (66) EXPRESION -> EXPRESION mayorIgual . EXPRESION
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 89

state 52

    (67) EXPRESION -> EXPRESION dobleIgual . EXPRESION
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 90

state 53

    (68) EXPRESION -> EXPRESION diferenteQue . EXPRESION
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 91

state 54

    (69) EXPRESION -> EXPRESION And . EXPRESION
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 92

state 55

    (70) EXPRESION -> EXPRESION Or . EXPRESION
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 93

state 56

    (72) EXPRESION -> EXPRESION AS . I64
    (73) EXPRESION -> EXPRESION AS . F64

    I64             shift and go to state 94
    F64             shift and go to state 95


state 57

    (59) EXPRESION -> menos EXPRESION .
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    ptComa          reduce using rule 59 (EXPRESION -> menos EXPRESION .)
    mas             reduce using rule 59 (EXPRESION -> menos EXPRESION .)
    menos           reduce using rule 59 (EXPRESION -> menos EXPRESION .)
    por             reduce using rule 59 (EXPRESION -> menos EXPRESION .)
    dividido        reduce using rule 59 (EXPRESION -> menos EXPRESION .)
    modulo          reduce using rule 59 (EXPRESION -> menos EXPRESION .)
    menorQue        reduce using rule 59 (EXPRESION -> menos EXPRESION .)
    mayorQue        reduce using rule 59 (EXPRESION -> menos EXPRESION .)
    menorIgual      reduce using rule 59 (EXPRESION -> menos EXPRESION .)
    mayorIgual      reduce using rule 59 (EXPRESION -> menos EXPRESION .)
    dobleIgual      reduce using rule 59 (EXPRESION -> menos EXPRESION .)
    diferenteQue    reduce using rule 59 (EXPRESION -> menos EXPRESION .)
    And             reduce using rule 59 (EXPRESION -> menos EXPRESION .)
    Or              reduce using rule 59 (EXPRESION -> menos EXPRESION .)
    AS              reduce using rule 59 (EXPRESION -> menos EXPRESION .)
    ParC            reduce using rule 59 (EXPRESION -> menos EXPRESION .)
    Coma            reduce using rule 59 (EXPRESION -> menos EXPRESION .)
    CorC            reduce using rule 59 (EXPRESION -> menos EXPRESION .)

  ! mas             [ shift and go to state 43 ]
  ! menos           [ shift and go to state 44 ]
  ! por             [ shift and go to state 45 ]
  ! dividido        [ shift and go to state 46 ]
  ! modulo          [ shift and go to state 47 ]
  ! menorQue        [ shift and go to state 48 ]
  ! mayorQue        [ shift and go to state 49 ]
  ! menorIgual      [ shift and go to state 50 ]
  ! mayorIgual      [ shift and go to state 51 ]
  ! dobleIgual      [ shift and go to state 52 ]
  ! diferenteQue    [ shift and go to state 53 ]
  ! And             [ shift and go to state 54 ]
  ! Or              [ shift and go to state 55 ]
  ! AS              [ shift and go to state 56 ]


state 58

    (60) EXPRESION -> ParA EXPRESION . ParC
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    ParC            shift and go to state 96
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 59

    (61) EXPRESION -> I64 dosPuntos . dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC

    dosPuntos       shift and go to state 97


state 60

    (62) EXPRESION -> F64 dosPuntos . dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC

    dosPuntos       shift and go to state 98


state 61

    (71) EXPRESION -> not EXPRESION .
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    ptComa          reduce using rule 71 (EXPRESION -> not EXPRESION .)
    mas             reduce using rule 71 (EXPRESION -> not EXPRESION .)
    menos           reduce using rule 71 (EXPRESION -> not EXPRESION .)
    por             reduce using rule 71 (EXPRESION -> not EXPRESION .)
    dividido        reduce using rule 71 (EXPRESION -> not EXPRESION .)
    modulo          reduce using rule 71 (EXPRESION -> not EXPRESION .)
    menorQue        reduce using rule 71 (EXPRESION -> not EXPRESION .)
    mayorQue        reduce using rule 71 (EXPRESION -> not EXPRESION .)
    menorIgual      reduce using rule 71 (EXPRESION -> not EXPRESION .)
    mayorIgual      reduce using rule 71 (EXPRESION -> not EXPRESION .)
    dobleIgual      reduce using rule 71 (EXPRESION -> not EXPRESION .)
    diferenteQue    reduce using rule 71 (EXPRESION -> not EXPRESION .)
    And             reduce using rule 71 (EXPRESION -> not EXPRESION .)
    Or              reduce using rule 71 (EXPRESION -> not EXPRESION .)
    AS              reduce using rule 71 (EXPRESION -> not EXPRESION .)
    ParC            reduce using rule 71 (EXPRESION -> not EXPRESION .)
    Coma            reduce using rule 71 (EXPRESION -> not EXPRESION .)
    CorC            reduce using rule 71 (EXPRESION -> not EXPRESION .)

  ! mas             [ shift and go to state 43 ]
  ! menos           [ shift and go to state 44 ]
  ! por             [ shift and go to state 45 ]
  ! dividido        [ shift and go to state 46 ]
  ! modulo          [ shift and go to state 47 ]
  ! menorQue        [ shift and go to state 48 ]
  ! mayorQue        [ shift and go to state 49 ]
  ! menorIgual      [ shift and go to state 50 ]
  ! mayorIgual      [ shift and go to state 51 ]
  ! dobleIgual      [ shift and go to state 52 ]
  ! diferenteQue    [ shift and go to state 53 ]
  ! And             [ shift and go to state 54 ]
  ! Or              [ shift and go to state 55 ]
  ! AS              [ shift and go to state 56 ]


state 62

    (50) IMPRIMIR -> PrintLn not ParA String . ParC ptComa
    (51) IMPRIMIR -> PrintLn not ParA String . Coma COMASEX ParC ptComa

    ParC            shift and go to state 99
    Coma            shift and go to state 100


state 63

    (5) DECLARACION -> Let Id igual EXPRESION ptComa .

    Let             reduce using rule 5 (DECLARACION -> Let Id igual EXPRESION ptComa .)
    Id              reduce using rule 5 (DECLARACION -> Let Id igual EXPRESION ptComa .)
    PrintLn         reduce using rule 5 (DECLARACION -> Let Id igual EXPRESION ptComa .)
    $end            reduce using rule 5 (DECLARACION -> Let Id igual EXPRESION ptComa .)


state 64

    (25) DECLARACION -> Let Id igual vec not . CorA COMASEX CorC ptComa
    (26) DECLARACION -> Let Id igual vec not . CorA EXPRESION ptComa EXPRESION CorC ptComa

    CorA            shift and go to state 101


state 65

    (6) DECLARACION -> Let Id dosPuntos I64 igual . EXPRESION ptComa
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 102

state 66

    (7) DECLARACION -> Let Id dosPuntos F64 igual . EXPRESION ptComa
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 103

state 67

    (8) DECLARACION -> Let Id dosPuntos StrA igual . EXPRESION ptComa
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 104

state 68

    (9) DECLARACION -> Let Id dosPuntos Str igual . EXPRESION ptComa
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 105

state 69

    (10) DECLARACION -> Let Id dosPuntos Bool igual . EXPRESION ptComa
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 106

state 70

    (11) DECLARACION -> Let Id dosPuntos CharAux igual . EXPRESION ptComa
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 107

state 71

    (19) DECLARACION -> Let Id dosPuntos VEC menorQue . I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (20) DECLARACION -> Let Id dosPuntos VEC menorQue . F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (21) DECLARACION -> Let Id dosPuntos VEC menorQue . StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (22) DECLARACION -> Let Id dosPuntos VEC menorQue . Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (23) DECLARACION -> Let Id dosPuntos VEC menorQue . Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (24) DECLARACION -> Let Id dosPuntos VEC menorQue . CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (27) DECLARACION -> Let Id dosPuntos VEC menorQue . I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (28) DECLARACION -> Let Id dosPuntos VEC menorQue . F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (29) DECLARACION -> Let Id dosPuntos VEC menorQue . StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (30) DECLARACION -> Let Id dosPuntos VEC menorQue . Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (31) DECLARACION -> Let Id dosPuntos VEC menorQue . Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (32) DECLARACION -> Let Id dosPuntos VEC menorQue . CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    I64             shift and go to state 108
    F64             shift and go to state 109
    StrA            shift and go to state 110
    Str             shift and go to state 111
    Bool            shift and go to state 112
    CharAux         shift and go to state 113


state 72

    (12) DECLARACION -> Let Mut Id igual EXPRESION . ptComa
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    ptComa          shift and go to state 114
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 73

    (39) DECLARACION -> Let Mut Id igual vec . not CorA COMASEX CorC ptComa
    (40) DECLARACION -> Let Mut Id igual vec . not CorA EXPRESION ptComa EXPRESION CorC ptComa

    not             shift and go to state 115


state 74

    (13) DECLARACION -> Let Mut Id dosPuntos I64 . igual EXPRESION ptComa

    igual           shift and go to state 116


state 75

    (14) DECLARACION -> Let Mut Id dosPuntos F64 . igual EXPRESION ptComa

    igual           shift and go to state 117


state 76

    (15) DECLARACION -> Let Mut Id dosPuntos StrA . igual EXPRESION ptComa

    igual           shift and go to state 118


state 77

    (16) DECLARACION -> Let Mut Id dosPuntos Str . igual EXPRESION ptComa

    igual           shift and go to state 119


state 78

    (17) DECLARACION -> Let Mut Id dosPuntos Bool . igual EXPRESION ptComa

    igual           shift and go to state 120


state 79

    (18) DECLARACION -> Let Mut Id dosPuntos CharAux . igual EXPRESION ptComa

    igual           shift and go to state 121


state 80

    (33) DECLARACION -> Let Mut Id dosPuntos VEC . menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (34) DECLARACION -> Let Mut Id dosPuntos VEC . menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (35) DECLARACION -> Let Mut Id dosPuntos VEC . menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (36) DECLARACION -> Let Mut Id dosPuntos VEC . menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (37) DECLARACION -> Let Mut Id dosPuntos VEC . menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (38) DECLARACION -> Let Mut Id dosPuntos VEC . menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (41) DECLARACION -> Let Mut Id dosPuntos VEC . menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (42) DECLARACION -> Let Mut Id dosPuntos VEC . menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (43) DECLARACION -> Let Mut Id dosPuntos VEC . menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (44) DECLARACION -> Let Mut Id dosPuntos VEC . menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (45) DECLARACION -> Let Mut Id dosPuntos VEC . menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (46) DECLARACION -> Let Mut Id dosPuntos VEC . menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    menorQue        shift and go to state 122


state 81

    (54) EXPRESION -> EXPRESION mas EXPRESION .
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    ptComa          reduce using rule 54 (EXPRESION -> EXPRESION mas EXPRESION .)
    mas             reduce using rule 54 (EXPRESION -> EXPRESION mas EXPRESION .)
    menos           reduce using rule 54 (EXPRESION -> EXPRESION mas EXPRESION .)
    And             reduce using rule 54 (EXPRESION -> EXPRESION mas EXPRESION .)
    Or              reduce using rule 54 (EXPRESION -> EXPRESION mas EXPRESION .)
    AS              reduce using rule 54 (EXPRESION -> EXPRESION mas EXPRESION .)
    ParC            reduce using rule 54 (EXPRESION -> EXPRESION mas EXPRESION .)
    Coma            reduce using rule 54 (EXPRESION -> EXPRESION mas EXPRESION .)
    CorC            reduce using rule 54 (EXPRESION -> EXPRESION mas EXPRESION .)
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53

  ! por             [ reduce using rule 54 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! dividido        [ reduce using rule 54 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! modulo          [ reduce using rule 54 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! menorQue        [ reduce using rule 54 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! mayorQue        [ reduce using rule 54 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! menorIgual      [ reduce using rule 54 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! mayorIgual      [ reduce using rule 54 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! dobleIgual      [ reduce using rule 54 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! diferenteQue    [ reduce using rule 54 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! mas             [ shift and go to state 43 ]
  ! menos           [ shift and go to state 44 ]
  ! And             [ shift and go to state 54 ]
  ! Or              [ shift and go to state 55 ]
  ! AS              [ shift and go to state 56 ]


state 82

    (55) EXPRESION -> EXPRESION menos EXPRESION .
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    ptComa          reduce using rule 55 (EXPRESION -> EXPRESION menos EXPRESION .)
    mas             reduce using rule 55 (EXPRESION -> EXPRESION menos EXPRESION .)
    menos           reduce using rule 55 (EXPRESION -> EXPRESION menos EXPRESION .)
    And             reduce using rule 55 (EXPRESION -> EXPRESION menos EXPRESION .)
    Or              reduce using rule 55 (EXPRESION -> EXPRESION menos EXPRESION .)
    AS              reduce using rule 55 (EXPRESION -> EXPRESION menos EXPRESION .)
    ParC            reduce using rule 55 (EXPRESION -> EXPRESION menos EXPRESION .)
    Coma            reduce using rule 55 (EXPRESION -> EXPRESION menos EXPRESION .)
    CorC            reduce using rule 55 (EXPRESION -> EXPRESION menos EXPRESION .)
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53

  ! por             [ reduce using rule 55 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! dividido        [ reduce using rule 55 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! modulo          [ reduce using rule 55 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! menorQue        [ reduce using rule 55 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! mayorQue        [ reduce using rule 55 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! menorIgual      [ reduce using rule 55 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! mayorIgual      [ reduce using rule 55 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! dobleIgual      [ reduce using rule 55 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! diferenteQue    [ reduce using rule 55 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! mas             [ shift and go to state 43 ]
  ! menos           [ shift and go to state 44 ]
  ! And             [ shift and go to state 54 ]
  ! Or              [ shift and go to state 55 ]
  ! AS              [ shift and go to state 56 ]


state 83

    (56) EXPRESION -> EXPRESION por EXPRESION .
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    ptComa          reduce using rule 56 (EXPRESION -> EXPRESION por EXPRESION .)
    mas             reduce using rule 56 (EXPRESION -> EXPRESION por EXPRESION .)
    menos           reduce using rule 56 (EXPRESION -> EXPRESION por EXPRESION .)
    por             reduce using rule 56 (EXPRESION -> EXPRESION por EXPRESION .)
    dividido        reduce using rule 56 (EXPRESION -> EXPRESION por EXPRESION .)
    modulo          reduce using rule 56 (EXPRESION -> EXPRESION por EXPRESION .)
    menorQue        reduce using rule 56 (EXPRESION -> EXPRESION por EXPRESION .)
    mayorQue        reduce using rule 56 (EXPRESION -> EXPRESION por EXPRESION .)
    menorIgual      reduce using rule 56 (EXPRESION -> EXPRESION por EXPRESION .)
    mayorIgual      reduce using rule 56 (EXPRESION -> EXPRESION por EXPRESION .)
    dobleIgual      reduce using rule 56 (EXPRESION -> EXPRESION por EXPRESION .)
    diferenteQue    reduce using rule 56 (EXPRESION -> EXPRESION por EXPRESION .)
    And             reduce using rule 56 (EXPRESION -> EXPRESION por EXPRESION .)
    Or              reduce using rule 56 (EXPRESION -> EXPRESION por EXPRESION .)
    AS              reduce using rule 56 (EXPRESION -> EXPRESION por EXPRESION .)
    ParC            reduce using rule 56 (EXPRESION -> EXPRESION por EXPRESION .)
    Coma            reduce using rule 56 (EXPRESION -> EXPRESION por EXPRESION .)
    CorC            reduce using rule 56 (EXPRESION -> EXPRESION por EXPRESION .)

  ! mas             [ shift and go to state 43 ]
  ! menos           [ shift and go to state 44 ]
  ! por             [ shift and go to state 45 ]
  ! dividido        [ shift and go to state 46 ]
  ! modulo          [ shift and go to state 47 ]
  ! menorQue        [ shift and go to state 48 ]
  ! mayorQue        [ shift and go to state 49 ]
  ! menorIgual      [ shift and go to state 50 ]
  ! mayorIgual      [ shift and go to state 51 ]
  ! dobleIgual      [ shift and go to state 52 ]
  ! diferenteQue    [ shift and go to state 53 ]
  ! And             [ shift and go to state 54 ]
  ! Or              [ shift and go to state 55 ]
  ! AS              [ shift and go to state 56 ]


state 84

    (57) EXPRESION -> EXPRESION dividido EXPRESION .
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    ptComa          reduce using rule 57 (EXPRESION -> EXPRESION dividido EXPRESION .)
    mas             reduce using rule 57 (EXPRESION -> EXPRESION dividido EXPRESION .)
    menos           reduce using rule 57 (EXPRESION -> EXPRESION dividido EXPRESION .)
    por             reduce using rule 57 (EXPRESION -> EXPRESION dividido EXPRESION .)
    dividido        reduce using rule 57 (EXPRESION -> EXPRESION dividido EXPRESION .)
    modulo          reduce using rule 57 (EXPRESION -> EXPRESION dividido EXPRESION .)
    menorQue        reduce using rule 57 (EXPRESION -> EXPRESION dividido EXPRESION .)
    mayorQue        reduce using rule 57 (EXPRESION -> EXPRESION dividido EXPRESION .)
    menorIgual      reduce using rule 57 (EXPRESION -> EXPRESION dividido EXPRESION .)
    mayorIgual      reduce using rule 57 (EXPRESION -> EXPRESION dividido EXPRESION .)
    dobleIgual      reduce using rule 57 (EXPRESION -> EXPRESION dividido EXPRESION .)
    diferenteQue    reduce using rule 57 (EXPRESION -> EXPRESION dividido EXPRESION .)
    And             reduce using rule 57 (EXPRESION -> EXPRESION dividido EXPRESION .)
    Or              reduce using rule 57 (EXPRESION -> EXPRESION dividido EXPRESION .)
    AS              reduce using rule 57 (EXPRESION -> EXPRESION dividido EXPRESION .)
    ParC            reduce using rule 57 (EXPRESION -> EXPRESION dividido EXPRESION .)
    Coma            reduce using rule 57 (EXPRESION -> EXPRESION dividido EXPRESION .)
    CorC            reduce using rule 57 (EXPRESION -> EXPRESION dividido EXPRESION .)

  ! mas             [ shift and go to state 43 ]
  ! menos           [ shift and go to state 44 ]
  ! por             [ shift and go to state 45 ]
  ! dividido        [ shift and go to state 46 ]
  ! modulo          [ shift and go to state 47 ]
  ! menorQue        [ shift and go to state 48 ]
  ! mayorQue        [ shift and go to state 49 ]
  ! menorIgual      [ shift and go to state 50 ]
  ! mayorIgual      [ shift and go to state 51 ]
  ! dobleIgual      [ shift and go to state 52 ]
  ! diferenteQue    [ shift and go to state 53 ]
  ! And             [ shift and go to state 54 ]
  ! Or              [ shift and go to state 55 ]
  ! AS              [ shift and go to state 56 ]


state 85

    (58) EXPRESION -> EXPRESION modulo EXPRESION .
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    ptComa          reduce using rule 58 (EXPRESION -> EXPRESION modulo EXPRESION .)
    mas             reduce using rule 58 (EXPRESION -> EXPRESION modulo EXPRESION .)
    menos           reduce using rule 58 (EXPRESION -> EXPRESION modulo EXPRESION .)
    por             reduce using rule 58 (EXPRESION -> EXPRESION modulo EXPRESION .)
    dividido        reduce using rule 58 (EXPRESION -> EXPRESION modulo EXPRESION .)
    modulo          reduce using rule 58 (EXPRESION -> EXPRESION modulo EXPRESION .)
    menorQue        reduce using rule 58 (EXPRESION -> EXPRESION modulo EXPRESION .)
    mayorQue        reduce using rule 58 (EXPRESION -> EXPRESION modulo EXPRESION .)
    menorIgual      reduce using rule 58 (EXPRESION -> EXPRESION modulo EXPRESION .)
    mayorIgual      reduce using rule 58 (EXPRESION -> EXPRESION modulo EXPRESION .)
    dobleIgual      reduce using rule 58 (EXPRESION -> EXPRESION modulo EXPRESION .)
    diferenteQue    reduce using rule 58 (EXPRESION -> EXPRESION modulo EXPRESION .)
    And             reduce using rule 58 (EXPRESION -> EXPRESION modulo EXPRESION .)
    Or              reduce using rule 58 (EXPRESION -> EXPRESION modulo EXPRESION .)
    AS              reduce using rule 58 (EXPRESION -> EXPRESION modulo EXPRESION .)
    ParC            reduce using rule 58 (EXPRESION -> EXPRESION modulo EXPRESION .)
    Coma            reduce using rule 58 (EXPRESION -> EXPRESION modulo EXPRESION .)
    CorC            reduce using rule 58 (EXPRESION -> EXPRESION modulo EXPRESION .)

  ! mas             [ shift and go to state 43 ]
  ! menos           [ shift and go to state 44 ]
  ! por             [ shift and go to state 45 ]
  ! dividido        [ shift and go to state 46 ]
  ! modulo          [ shift and go to state 47 ]
  ! menorQue        [ shift and go to state 48 ]
  ! mayorQue        [ shift and go to state 49 ]
  ! menorIgual      [ shift and go to state 50 ]
  ! mayorIgual      [ shift and go to state 51 ]
  ! dobleIgual      [ shift and go to state 52 ]
  ! diferenteQue    [ shift and go to state 53 ]
  ! And             [ shift and go to state 54 ]
  ! Or              [ shift and go to state 55 ]
  ! AS              [ shift and go to state 56 ]


state 86

    (63) EXPRESION -> EXPRESION menorQue EXPRESION .
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    ptComa          reduce using rule 63 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    mas             reduce using rule 63 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    menos           reduce using rule 63 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    menorQue        reduce using rule 63 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    mayorQue        reduce using rule 63 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    menorIgual      reduce using rule 63 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    mayorIgual      reduce using rule 63 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    dobleIgual      reduce using rule 63 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    diferenteQue    reduce using rule 63 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    And             reduce using rule 63 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    Or              reduce using rule 63 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    AS              reduce using rule 63 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    ParC            reduce using rule 63 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    Coma            reduce using rule 63 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    CorC            reduce using rule 63 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47

  ! por             [ reduce using rule 63 (EXPRESION -> EXPRESION menorQue EXPRESION .) ]
  ! dividido        [ reduce using rule 63 (EXPRESION -> EXPRESION menorQue EXPRESION .) ]
  ! modulo          [ reduce using rule 63 (EXPRESION -> EXPRESION menorQue EXPRESION .) ]
  ! mas             [ shift and go to state 43 ]
  ! menos           [ shift and go to state 44 ]
  ! menorQue        [ shift and go to state 48 ]
  ! mayorQue        [ shift and go to state 49 ]
  ! menorIgual      [ shift and go to state 50 ]
  ! mayorIgual      [ shift and go to state 51 ]
  ! dobleIgual      [ shift and go to state 52 ]
  ! diferenteQue    [ shift and go to state 53 ]
  ! And             [ shift and go to state 54 ]
  ! Or              [ shift and go to state 55 ]
  ! AS              [ shift and go to state 56 ]


state 87

    (64) EXPRESION -> EXPRESION mayorQue EXPRESION .
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    ptComa          reduce using rule 64 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    mas             reduce using rule 64 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    menos           reduce using rule 64 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    menorQue        reduce using rule 64 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    mayorQue        reduce using rule 64 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    menorIgual      reduce using rule 64 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    mayorIgual      reduce using rule 64 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    dobleIgual      reduce using rule 64 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    diferenteQue    reduce using rule 64 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    And             reduce using rule 64 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    Or              reduce using rule 64 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    AS              reduce using rule 64 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    ParC            reduce using rule 64 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    Coma            reduce using rule 64 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    CorC            reduce using rule 64 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47

  ! por             [ reduce using rule 64 (EXPRESION -> EXPRESION mayorQue EXPRESION .) ]
  ! dividido        [ reduce using rule 64 (EXPRESION -> EXPRESION mayorQue EXPRESION .) ]
  ! modulo          [ reduce using rule 64 (EXPRESION -> EXPRESION mayorQue EXPRESION .) ]
  ! mas             [ shift and go to state 43 ]
  ! menos           [ shift and go to state 44 ]
  ! menorQue        [ shift and go to state 48 ]
  ! mayorQue        [ shift and go to state 49 ]
  ! menorIgual      [ shift and go to state 50 ]
  ! mayorIgual      [ shift and go to state 51 ]
  ! dobleIgual      [ shift and go to state 52 ]
  ! diferenteQue    [ shift and go to state 53 ]
  ! And             [ shift and go to state 54 ]
  ! Or              [ shift and go to state 55 ]
  ! AS              [ shift and go to state 56 ]


state 88

    (65) EXPRESION -> EXPRESION menorIgual EXPRESION .
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    ptComa          reduce using rule 65 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    mas             reduce using rule 65 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    menos           reduce using rule 65 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    menorQue        reduce using rule 65 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    mayorQue        reduce using rule 65 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    menorIgual      reduce using rule 65 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    mayorIgual      reduce using rule 65 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    dobleIgual      reduce using rule 65 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    diferenteQue    reduce using rule 65 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    And             reduce using rule 65 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    Or              reduce using rule 65 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    AS              reduce using rule 65 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    ParC            reduce using rule 65 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    Coma            reduce using rule 65 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    CorC            reduce using rule 65 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47

  ! por             [ reduce using rule 65 (EXPRESION -> EXPRESION menorIgual EXPRESION .) ]
  ! dividido        [ reduce using rule 65 (EXPRESION -> EXPRESION menorIgual EXPRESION .) ]
  ! modulo          [ reduce using rule 65 (EXPRESION -> EXPRESION menorIgual EXPRESION .) ]
  ! mas             [ shift and go to state 43 ]
  ! menos           [ shift and go to state 44 ]
  ! menorQue        [ shift and go to state 48 ]
  ! mayorQue        [ shift and go to state 49 ]
  ! menorIgual      [ shift and go to state 50 ]
  ! mayorIgual      [ shift and go to state 51 ]
  ! dobleIgual      [ shift and go to state 52 ]
  ! diferenteQue    [ shift and go to state 53 ]
  ! And             [ shift and go to state 54 ]
  ! Or              [ shift and go to state 55 ]
  ! AS              [ shift and go to state 56 ]


state 89

    (66) EXPRESION -> EXPRESION mayorIgual EXPRESION .
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    ptComa          reduce using rule 66 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    mas             reduce using rule 66 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    menos           reduce using rule 66 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    menorQue        reduce using rule 66 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    mayorQue        reduce using rule 66 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    menorIgual      reduce using rule 66 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    mayorIgual      reduce using rule 66 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    dobleIgual      reduce using rule 66 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    diferenteQue    reduce using rule 66 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    And             reduce using rule 66 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    Or              reduce using rule 66 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    AS              reduce using rule 66 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    ParC            reduce using rule 66 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    Coma            reduce using rule 66 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    CorC            reduce using rule 66 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47

  ! por             [ reduce using rule 66 (EXPRESION -> EXPRESION mayorIgual EXPRESION .) ]
  ! dividido        [ reduce using rule 66 (EXPRESION -> EXPRESION mayorIgual EXPRESION .) ]
  ! modulo          [ reduce using rule 66 (EXPRESION -> EXPRESION mayorIgual EXPRESION .) ]
  ! mas             [ shift and go to state 43 ]
  ! menos           [ shift and go to state 44 ]
  ! menorQue        [ shift and go to state 48 ]
  ! mayorQue        [ shift and go to state 49 ]
  ! menorIgual      [ shift and go to state 50 ]
  ! mayorIgual      [ shift and go to state 51 ]
  ! dobleIgual      [ shift and go to state 52 ]
  ! diferenteQue    [ shift and go to state 53 ]
  ! And             [ shift and go to state 54 ]
  ! Or              [ shift and go to state 55 ]
  ! AS              [ shift and go to state 56 ]


state 90

    (67) EXPRESION -> EXPRESION dobleIgual EXPRESION .
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    ptComa          reduce using rule 67 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    mas             reduce using rule 67 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    menos           reduce using rule 67 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    menorQue        reduce using rule 67 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    mayorQue        reduce using rule 67 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    menorIgual      reduce using rule 67 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    mayorIgual      reduce using rule 67 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    dobleIgual      reduce using rule 67 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    diferenteQue    reduce using rule 67 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    And             reduce using rule 67 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    Or              reduce using rule 67 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    AS              reduce using rule 67 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    ParC            reduce using rule 67 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    Coma            reduce using rule 67 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    CorC            reduce using rule 67 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47

  ! por             [ reduce using rule 67 (EXPRESION -> EXPRESION dobleIgual EXPRESION .) ]
  ! dividido        [ reduce using rule 67 (EXPRESION -> EXPRESION dobleIgual EXPRESION .) ]
  ! modulo          [ reduce using rule 67 (EXPRESION -> EXPRESION dobleIgual EXPRESION .) ]
  ! mas             [ shift and go to state 43 ]
  ! menos           [ shift and go to state 44 ]
  ! menorQue        [ shift and go to state 48 ]
  ! mayorQue        [ shift and go to state 49 ]
  ! menorIgual      [ shift and go to state 50 ]
  ! mayorIgual      [ shift and go to state 51 ]
  ! dobleIgual      [ shift and go to state 52 ]
  ! diferenteQue    [ shift and go to state 53 ]
  ! And             [ shift and go to state 54 ]
  ! Or              [ shift and go to state 55 ]
  ! AS              [ shift and go to state 56 ]


state 91

    (68) EXPRESION -> EXPRESION diferenteQue EXPRESION .
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    ptComa          reduce using rule 68 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    mas             reduce using rule 68 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    menos           reduce using rule 68 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    menorQue        reduce using rule 68 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    mayorQue        reduce using rule 68 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    menorIgual      reduce using rule 68 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    mayorIgual      reduce using rule 68 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    dobleIgual      reduce using rule 68 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    diferenteQue    reduce using rule 68 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    And             reduce using rule 68 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    Or              reduce using rule 68 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    AS              reduce using rule 68 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    ParC            reduce using rule 68 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    Coma            reduce using rule 68 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    CorC            reduce using rule 68 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47

  ! por             [ reduce using rule 68 (EXPRESION -> EXPRESION diferenteQue EXPRESION .) ]
  ! dividido        [ reduce using rule 68 (EXPRESION -> EXPRESION diferenteQue EXPRESION .) ]
  ! modulo          [ reduce using rule 68 (EXPRESION -> EXPRESION diferenteQue EXPRESION .) ]
  ! mas             [ shift and go to state 43 ]
  ! menos           [ shift and go to state 44 ]
  ! menorQue        [ shift and go to state 48 ]
  ! mayorQue        [ shift and go to state 49 ]
  ! menorIgual      [ shift and go to state 50 ]
  ! mayorIgual      [ shift and go to state 51 ]
  ! dobleIgual      [ shift and go to state 52 ]
  ! diferenteQue    [ shift and go to state 53 ]
  ! And             [ shift and go to state 54 ]
  ! Or              [ shift and go to state 55 ]
  ! AS              [ shift and go to state 56 ]


state 92

    (69) EXPRESION -> EXPRESION And EXPRESION .
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    ptComa          reduce using rule 69 (EXPRESION -> EXPRESION And EXPRESION .)
    And             reduce using rule 69 (EXPRESION -> EXPRESION And EXPRESION .)
    Or              reduce using rule 69 (EXPRESION -> EXPRESION And EXPRESION .)
    AS              reduce using rule 69 (EXPRESION -> EXPRESION And EXPRESION .)
    ParC            reduce using rule 69 (EXPRESION -> EXPRESION And EXPRESION .)
    Coma            reduce using rule 69 (EXPRESION -> EXPRESION And EXPRESION .)
    CorC            reduce using rule 69 (EXPRESION -> EXPRESION And EXPRESION .)
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53

  ! mas             [ reduce using rule 69 (EXPRESION -> EXPRESION And EXPRESION .) ]
  ! menos           [ reduce using rule 69 (EXPRESION -> EXPRESION And EXPRESION .) ]
  ! por             [ reduce using rule 69 (EXPRESION -> EXPRESION And EXPRESION .) ]
  ! dividido        [ reduce using rule 69 (EXPRESION -> EXPRESION And EXPRESION .) ]
  ! modulo          [ reduce using rule 69 (EXPRESION -> EXPRESION And EXPRESION .) ]
  ! menorQue        [ reduce using rule 69 (EXPRESION -> EXPRESION And EXPRESION .) ]
  ! mayorQue        [ reduce using rule 69 (EXPRESION -> EXPRESION And EXPRESION .) ]
  ! menorIgual      [ reduce using rule 69 (EXPRESION -> EXPRESION And EXPRESION .) ]
  ! mayorIgual      [ reduce using rule 69 (EXPRESION -> EXPRESION And EXPRESION .) ]
  ! dobleIgual      [ reduce using rule 69 (EXPRESION -> EXPRESION And EXPRESION .) ]
  ! diferenteQue    [ reduce using rule 69 (EXPRESION -> EXPRESION And EXPRESION .) ]
  ! And             [ shift and go to state 54 ]
  ! Or              [ shift and go to state 55 ]
  ! AS              [ shift and go to state 56 ]


state 93

    (70) EXPRESION -> EXPRESION Or EXPRESION .
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    ptComa          reduce using rule 70 (EXPRESION -> EXPRESION Or EXPRESION .)
    Or              reduce using rule 70 (EXPRESION -> EXPRESION Or EXPRESION .)
    AS              reduce using rule 70 (EXPRESION -> EXPRESION Or EXPRESION .)
    ParC            reduce using rule 70 (EXPRESION -> EXPRESION Or EXPRESION .)
    Coma            reduce using rule 70 (EXPRESION -> EXPRESION Or EXPRESION .)
    CorC            reduce using rule 70 (EXPRESION -> EXPRESION Or EXPRESION .)
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54

  ! mas             [ reduce using rule 70 (EXPRESION -> EXPRESION Or EXPRESION .) ]
  ! menos           [ reduce using rule 70 (EXPRESION -> EXPRESION Or EXPRESION .) ]
  ! por             [ reduce using rule 70 (EXPRESION -> EXPRESION Or EXPRESION .) ]
  ! dividido        [ reduce using rule 70 (EXPRESION -> EXPRESION Or EXPRESION .) ]
  ! modulo          [ reduce using rule 70 (EXPRESION -> EXPRESION Or EXPRESION .) ]
  ! menorQue        [ reduce using rule 70 (EXPRESION -> EXPRESION Or EXPRESION .) ]
  ! mayorQue        [ reduce using rule 70 (EXPRESION -> EXPRESION Or EXPRESION .) ]
  ! menorIgual      [ reduce using rule 70 (EXPRESION -> EXPRESION Or EXPRESION .) ]
  ! mayorIgual      [ reduce using rule 70 (EXPRESION -> EXPRESION Or EXPRESION .) ]
  ! dobleIgual      [ reduce using rule 70 (EXPRESION -> EXPRESION Or EXPRESION .) ]
  ! diferenteQue    [ reduce using rule 70 (EXPRESION -> EXPRESION Or EXPRESION .) ]
  ! And             [ reduce using rule 70 (EXPRESION -> EXPRESION Or EXPRESION .) ]
  ! Or              [ shift and go to state 55 ]
  ! AS              [ shift and go to state 56 ]


state 94

    (72) EXPRESION -> EXPRESION AS I64 .

    ptComa          reduce using rule 72 (EXPRESION -> EXPRESION AS I64 .)
    mas             reduce using rule 72 (EXPRESION -> EXPRESION AS I64 .)
    menos           reduce using rule 72 (EXPRESION -> EXPRESION AS I64 .)
    por             reduce using rule 72 (EXPRESION -> EXPRESION AS I64 .)
    dividido        reduce using rule 72 (EXPRESION -> EXPRESION AS I64 .)
    modulo          reduce using rule 72 (EXPRESION -> EXPRESION AS I64 .)
    menorQue        reduce using rule 72 (EXPRESION -> EXPRESION AS I64 .)
    mayorQue        reduce using rule 72 (EXPRESION -> EXPRESION AS I64 .)
    menorIgual      reduce using rule 72 (EXPRESION -> EXPRESION AS I64 .)
    mayorIgual      reduce using rule 72 (EXPRESION -> EXPRESION AS I64 .)
    dobleIgual      reduce using rule 72 (EXPRESION -> EXPRESION AS I64 .)
    diferenteQue    reduce using rule 72 (EXPRESION -> EXPRESION AS I64 .)
    And             reduce using rule 72 (EXPRESION -> EXPRESION AS I64 .)
    Or              reduce using rule 72 (EXPRESION -> EXPRESION AS I64 .)
    AS              reduce using rule 72 (EXPRESION -> EXPRESION AS I64 .)
    ParC            reduce using rule 72 (EXPRESION -> EXPRESION AS I64 .)
    Coma            reduce using rule 72 (EXPRESION -> EXPRESION AS I64 .)
    CorC            reduce using rule 72 (EXPRESION -> EXPRESION AS I64 .)


state 95

    (73) EXPRESION -> EXPRESION AS F64 .

    ptComa          reduce using rule 73 (EXPRESION -> EXPRESION AS F64 .)
    mas             reduce using rule 73 (EXPRESION -> EXPRESION AS F64 .)
    menos           reduce using rule 73 (EXPRESION -> EXPRESION AS F64 .)
    por             reduce using rule 73 (EXPRESION -> EXPRESION AS F64 .)
    dividido        reduce using rule 73 (EXPRESION -> EXPRESION AS F64 .)
    modulo          reduce using rule 73 (EXPRESION -> EXPRESION AS F64 .)
    menorQue        reduce using rule 73 (EXPRESION -> EXPRESION AS F64 .)
    mayorQue        reduce using rule 73 (EXPRESION -> EXPRESION AS F64 .)
    menorIgual      reduce using rule 73 (EXPRESION -> EXPRESION AS F64 .)
    mayorIgual      reduce using rule 73 (EXPRESION -> EXPRESION AS F64 .)
    dobleIgual      reduce using rule 73 (EXPRESION -> EXPRESION AS F64 .)
    diferenteQue    reduce using rule 73 (EXPRESION -> EXPRESION AS F64 .)
    And             reduce using rule 73 (EXPRESION -> EXPRESION AS F64 .)
    Or              reduce using rule 73 (EXPRESION -> EXPRESION AS F64 .)
    AS              reduce using rule 73 (EXPRESION -> EXPRESION AS F64 .)
    ParC            reduce using rule 73 (EXPRESION -> EXPRESION AS F64 .)
    Coma            reduce using rule 73 (EXPRESION -> EXPRESION AS F64 .)
    CorC            reduce using rule 73 (EXPRESION -> EXPRESION AS F64 .)


state 96

    (60) EXPRESION -> ParA EXPRESION ParC .

    ptComa          reduce using rule 60 (EXPRESION -> ParA EXPRESION ParC .)
    mas             reduce using rule 60 (EXPRESION -> ParA EXPRESION ParC .)
    menos           reduce using rule 60 (EXPRESION -> ParA EXPRESION ParC .)
    por             reduce using rule 60 (EXPRESION -> ParA EXPRESION ParC .)
    dividido        reduce using rule 60 (EXPRESION -> ParA EXPRESION ParC .)
    modulo          reduce using rule 60 (EXPRESION -> ParA EXPRESION ParC .)
    menorQue        reduce using rule 60 (EXPRESION -> ParA EXPRESION ParC .)
    mayorQue        reduce using rule 60 (EXPRESION -> ParA EXPRESION ParC .)
    menorIgual      reduce using rule 60 (EXPRESION -> ParA EXPRESION ParC .)
    mayorIgual      reduce using rule 60 (EXPRESION -> ParA EXPRESION ParC .)
    dobleIgual      reduce using rule 60 (EXPRESION -> ParA EXPRESION ParC .)
    diferenteQue    reduce using rule 60 (EXPRESION -> ParA EXPRESION ParC .)
    And             reduce using rule 60 (EXPRESION -> ParA EXPRESION ParC .)
    Or              reduce using rule 60 (EXPRESION -> ParA EXPRESION ParC .)
    AS              reduce using rule 60 (EXPRESION -> ParA EXPRESION ParC .)
    ParC            reduce using rule 60 (EXPRESION -> ParA EXPRESION ParC .)
    Coma            reduce using rule 60 (EXPRESION -> ParA EXPRESION ParC .)
    CorC            reduce using rule 60 (EXPRESION -> ParA EXPRESION ParC .)


state 97

    (61) EXPRESION -> I64 dosPuntos dosPuntos . Powi ParA EXPRESION Coma EXPRESION ParC

    Powi            shift and go to state 123


state 98

    (62) EXPRESION -> F64 dosPuntos dosPuntos . Powf ParA EXPRESION Coma EXPRESION ParC

    Powf            shift and go to state 124


state 99

    (50) IMPRIMIR -> PrintLn not ParA String ParC . ptComa

    ptComa          shift and go to state 125


state 100

    (51) IMPRIMIR -> PrintLn not ParA String Coma . COMASEX ParC ptComa
    (52) COMASEX -> . COMASEX Coma EXPRESION
    (53) COMASEX -> . EXPRESION
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    COMASEX                        shift and go to state 126
    EXPRESION                      shift and go to state 127

state 101

    (25) DECLARACION -> Let Id igual vec not CorA . COMASEX CorC ptComa
    (26) DECLARACION -> Let Id igual vec not CorA . EXPRESION ptComa EXPRESION CorC ptComa
    (52) COMASEX -> . COMASEX Coma EXPRESION
    (53) COMASEX -> . EXPRESION
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    COMASEX                        shift and go to state 128
    EXPRESION                      shift and go to state 129

state 102

    (6) DECLARACION -> Let Id dosPuntos I64 igual EXPRESION . ptComa
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    ptComa          shift and go to state 130
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 103

    (7) DECLARACION -> Let Id dosPuntos F64 igual EXPRESION . ptComa
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    ptComa          shift and go to state 131
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 104

    (8) DECLARACION -> Let Id dosPuntos StrA igual EXPRESION . ptComa
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    ptComa          shift and go to state 132
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 105

    (9) DECLARACION -> Let Id dosPuntos Str igual EXPRESION . ptComa
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    ptComa          shift and go to state 133
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 106

    (10) DECLARACION -> Let Id dosPuntos Bool igual EXPRESION . ptComa
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    ptComa          shift and go to state 134
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 107

    (11) DECLARACION -> Let Id dosPuntos CharAux igual EXPRESION . ptComa
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    ptComa          shift and go to state 135
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 108

    (19) DECLARACION -> Let Id dosPuntos VEC menorQue I64 . mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (27) DECLARACION -> Let Id dosPuntos VEC menorQue I64 . mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    mayorQue        shift and go to state 136


state 109

    (20) DECLARACION -> Let Id dosPuntos VEC menorQue F64 . mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (28) DECLARACION -> Let Id dosPuntos VEC menorQue F64 . mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    mayorQue        shift and go to state 137


state 110

    (21) DECLARACION -> Let Id dosPuntos VEC menorQue StrA . mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (29) DECLARACION -> Let Id dosPuntos VEC menorQue StrA . mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    mayorQue        shift and go to state 138


state 111

    (22) DECLARACION -> Let Id dosPuntos VEC menorQue Str . mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (30) DECLARACION -> Let Id dosPuntos VEC menorQue Str . mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    mayorQue        shift and go to state 139


state 112

    (23) DECLARACION -> Let Id dosPuntos VEC menorQue Bool . mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (31) DECLARACION -> Let Id dosPuntos VEC menorQue Bool . mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    mayorQue        shift and go to state 140


state 113

    (24) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux . mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (32) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux . mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    mayorQue        shift and go to state 141


state 114

    (12) DECLARACION -> Let Mut Id igual EXPRESION ptComa .

    Let             reduce using rule 12 (DECLARACION -> Let Mut Id igual EXPRESION ptComa .)
    Id              reduce using rule 12 (DECLARACION -> Let Mut Id igual EXPRESION ptComa .)
    PrintLn         reduce using rule 12 (DECLARACION -> Let Mut Id igual EXPRESION ptComa .)
    $end            reduce using rule 12 (DECLARACION -> Let Mut Id igual EXPRESION ptComa .)


state 115

    (39) DECLARACION -> Let Mut Id igual vec not . CorA COMASEX CorC ptComa
    (40) DECLARACION -> Let Mut Id igual vec not . CorA EXPRESION ptComa EXPRESION CorC ptComa

    CorA            shift and go to state 142


state 116

    (13) DECLARACION -> Let Mut Id dosPuntos I64 igual . EXPRESION ptComa
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 143

state 117

    (14) DECLARACION -> Let Mut Id dosPuntos F64 igual . EXPRESION ptComa
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 144

state 118

    (15) DECLARACION -> Let Mut Id dosPuntos StrA igual . EXPRESION ptComa
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 145

state 119

    (16) DECLARACION -> Let Mut Id dosPuntos Str igual . EXPRESION ptComa
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 146

state 120

    (17) DECLARACION -> Let Mut Id dosPuntos Bool igual . EXPRESION ptComa
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 147

state 121

    (18) DECLARACION -> Let Mut Id dosPuntos CharAux igual . EXPRESION ptComa
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 148

state 122

    (33) DECLARACION -> Let Mut Id dosPuntos VEC menorQue . I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (34) DECLARACION -> Let Mut Id dosPuntos VEC menorQue . F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (35) DECLARACION -> Let Mut Id dosPuntos VEC menorQue . StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (36) DECLARACION -> Let Mut Id dosPuntos VEC menorQue . Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (37) DECLARACION -> Let Mut Id dosPuntos VEC menorQue . Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (38) DECLARACION -> Let Mut Id dosPuntos VEC menorQue . CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (41) DECLARACION -> Let Mut Id dosPuntos VEC menorQue . I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (42) DECLARACION -> Let Mut Id dosPuntos VEC menorQue . F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (43) DECLARACION -> Let Mut Id dosPuntos VEC menorQue . StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (44) DECLARACION -> Let Mut Id dosPuntos VEC menorQue . Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (45) DECLARACION -> Let Mut Id dosPuntos VEC menorQue . Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (46) DECLARACION -> Let Mut Id dosPuntos VEC menorQue . CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    I64             shift and go to state 149
    F64             shift and go to state 150
    StrA            shift and go to state 151
    Str             shift and go to state 152
    Bool            shift and go to state 153
    CharAux         shift and go to state 154


state 123

    (61) EXPRESION -> I64 dosPuntos dosPuntos Powi . ParA EXPRESION Coma EXPRESION ParC

    ParA            shift and go to state 155


state 124

    (62) EXPRESION -> F64 dosPuntos dosPuntos Powf . ParA EXPRESION Coma EXPRESION ParC

    ParA            shift and go to state 156


state 125

    (50) IMPRIMIR -> PrintLn not ParA String ParC ptComa .

    Let             reduce using rule 50 (IMPRIMIR -> PrintLn not ParA String ParC ptComa .)
    Id              reduce using rule 50 (IMPRIMIR -> PrintLn not ParA String ParC ptComa .)
    PrintLn         reduce using rule 50 (IMPRIMIR -> PrintLn not ParA String ParC ptComa .)
    $end            reduce using rule 50 (IMPRIMIR -> PrintLn not ParA String ParC ptComa .)


state 126

    (51) IMPRIMIR -> PrintLn not ParA String Coma COMASEX . ParC ptComa
    (52) COMASEX -> COMASEX . Coma EXPRESION

    ParC            shift and go to state 158
    Coma            shift and go to state 157


state 127

    (53) COMASEX -> EXPRESION .
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    ParC            reduce using rule 53 (COMASEX -> EXPRESION .)
    Coma            reduce using rule 53 (COMASEX -> EXPRESION .)
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 128

    (25) DECLARACION -> Let Id igual vec not CorA COMASEX . CorC ptComa
    (52) COMASEX -> COMASEX . Coma EXPRESION

    CorC            shift and go to state 159
    Coma            shift and go to state 157


state 129

    (26) DECLARACION -> Let Id igual vec not CorA EXPRESION . ptComa EXPRESION CorC ptComa
    (53) COMASEX -> EXPRESION .
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    ptComa          shift and go to state 160
    CorC            reduce using rule 53 (COMASEX -> EXPRESION .)
    Coma            reduce using rule 53 (COMASEX -> EXPRESION .)
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 130

    (6) DECLARACION -> Let Id dosPuntos I64 igual EXPRESION ptComa .

    Let             reduce using rule 6 (DECLARACION -> Let Id dosPuntos I64 igual EXPRESION ptComa .)
    Id              reduce using rule 6 (DECLARACION -> Let Id dosPuntos I64 igual EXPRESION ptComa .)
    PrintLn         reduce using rule 6 (DECLARACION -> Let Id dosPuntos I64 igual EXPRESION ptComa .)
    $end            reduce using rule 6 (DECLARACION -> Let Id dosPuntos I64 igual EXPRESION ptComa .)


state 131

    (7) DECLARACION -> Let Id dosPuntos F64 igual EXPRESION ptComa .

    Let             reduce using rule 7 (DECLARACION -> Let Id dosPuntos F64 igual EXPRESION ptComa .)
    Id              reduce using rule 7 (DECLARACION -> Let Id dosPuntos F64 igual EXPRESION ptComa .)
    PrintLn         reduce using rule 7 (DECLARACION -> Let Id dosPuntos F64 igual EXPRESION ptComa .)
    $end            reduce using rule 7 (DECLARACION -> Let Id dosPuntos F64 igual EXPRESION ptComa .)


state 132

    (8) DECLARACION -> Let Id dosPuntos StrA igual EXPRESION ptComa .

    Let             reduce using rule 8 (DECLARACION -> Let Id dosPuntos StrA igual EXPRESION ptComa .)
    Id              reduce using rule 8 (DECLARACION -> Let Id dosPuntos StrA igual EXPRESION ptComa .)
    PrintLn         reduce using rule 8 (DECLARACION -> Let Id dosPuntos StrA igual EXPRESION ptComa .)
    $end            reduce using rule 8 (DECLARACION -> Let Id dosPuntos StrA igual EXPRESION ptComa .)


state 133

    (9) DECLARACION -> Let Id dosPuntos Str igual EXPRESION ptComa .

    Let             reduce using rule 9 (DECLARACION -> Let Id dosPuntos Str igual EXPRESION ptComa .)
    Id              reduce using rule 9 (DECLARACION -> Let Id dosPuntos Str igual EXPRESION ptComa .)
    PrintLn         reduce using rule 9 (DECLARACION -> Let Id dosPuntos Str igual EXPRESION ptComa .)
    $end            reduce using rule 9 (DECLARACION -> Let Id dosPuntos Str igual EXPRESION ptComa .)


state 134

    (10) DECLARACION -> Let Id dosPuntos Bool igual EXPRESION ptComa .

    Let             reduce using rule 10 (DECLARACION -> Let Id dosPuntos Bool igual EXPRESION ptComa .)
    Id              reduce using rule 10 (DECLARACION -> Let Id dosPuntos Bool igual EXPRESION ptComa .)
    PrintLn         reduce using rule 10 (DECLARACION -> Let Id dosPuntos Bool igual EXPRESION ptComa .)
    $end            reduce using rule 10 (DECLARACION -> Let Id dosPuntos Bool igual EXPRESION ptComa .)


state 135

    (11) DECLARACION -> Let Id dosPuntos CharAux igual EXPRESION ptComa .

    Let             reduce using rule 11 (DECLARACION -> Let Id dosPuntos CharAux igual EXPRESION ptComa .)
    Id              reduce using rule 11 (DECLARACION -> Let Id dosPuntos CharAux igual EXPRESION ptComa .)
    PrintLn         reduce using rule 11 (DECLARACION -> Let Id dosPuntos CharAux igual EXPRESION ptComa .)
    $end            reduce using rule 11 (DECLARACION -> Let Id dosPuntos CharAux igual EXPRESION ptComa .)


state 136

    (19) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue . igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (27) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue . igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 161


state 137

    (20) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue . igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (28) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue . igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 162


state 138

    (21) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue . igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (29) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue . igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 163


state 139

    (22) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue . igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (30) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue . igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 164


state 140

    (23) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue . igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (31) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue . igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 165


state 141

    (24) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue . igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (32) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue . igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 166


state 142

    (39) DECLARACION -> Let Mut Id igual vec not CorA . COMASEX CorC ptComa
    (40) DECLARACION -> Let Mut Id igual vec not CorA . EXPRESION ptComa EXPRESION CorC ptComa
    (52) COMASEX -> . COMASEX Coma EXPRESION
    (53) COMASEX -> . EXPRESION
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    COMASEX                        shift and go to state 167
    EXPRESION                      shift and go to state 168

state 143

    (13) DECLARACION -> Let Mut Id dosPuntos I64 igual EXPRESION . ptComa
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    ptComa          shift and go to state 169
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 144

    (14) DECLARACION -> Let Mut Id dosPuntos F64 igual EXPRESION . ptComa
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    ptComa          shift and go to state 170
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 145

    (15) DECLARACION -> Let Mut Id dosPuntos StrA igual EXPRESION . ptComa
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    ptComa          shift and go to state 171
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 146

    (16) DECLARACION -> Let Mut Id dosPuntos Str igual EXPRESION . ptComa
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    ptComa          shift and go to state 172
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 147

    (17) DECLARACION -> Let Mut Id dosPuntos Bool igual EXPRESION . ptComa
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    ptComa          shift and go to state 173
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 148

    (18) DECLARACION -> Let Mut Id dosPuntos CharAux igual EXPRESION . ptComa
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    ptComa          shift and go to state 174
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 149

    (33) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 . mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (41) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 . mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    mayorQue        shift and go to state 175


state 150

    (34) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 . mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (42) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 . mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    mayorQue        shift and go to state 176


state 151

    (35) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA . mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (43) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA . mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    mayorQue        shift and go to state 177


state 152

    (36) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str . mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (44) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str . mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    mayorQue        shift and go to state 178


state 153

    (37) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool . mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (45) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool . mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    mayorQue        shift and go to state 179


state 154

    (38) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux . mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (46) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux . mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    mayorQue        shift and go to state 180


state 155

    (61) EXPRESION -> I64 dosPuntos dosPuntos Powi ParA . EXPRESION Coma EXPRESION ParC
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 181

state 156

    (62) EXPRESION -> F64 dosPuntos dosPuntos Powf ParA . EXPRESION Coma EXPRESION ParC
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 182

state 157

    (52) COMASEX -> COMASEX Coma . EXPRESION
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 183

state 158

    (51) IMPRIMIR -> PrintLn not ParA String Coma COMASEX ParC . ptComa

    ptComa          shift and go to state 184


state 159

    (25) DECLARACION -> Let Id igual vec not CorA COMASEX CorC . ptComa

    ptComa          shift and go to state 185


state 160

    (26) DECLARACION -> Let Id igual vec not CorA EXPRESION ptComa . EXPRESION CorC ptComa
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 186

state 161

    (19) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual . VEC dosPuntos dosPuntos New ParA ParC ptComa
    (27) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual . VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    VEC             shift and go to state 187


state 162

    (20) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual . VEC dosPuntos dosPuntos New ParA ParC ptComa
    (28) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual . VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    VEC             shift and go to state 188


state 163

    (21) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual . VEC dosPuntos dosPuntos New ParA ParC ptComa
    (29) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual . VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    VEC             shift and go to state 189


state 164

    (22) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual . VEC dosPuntos dosPuntos New ParA ParC ptComa
    (30) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual . VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    VEC             shift and go to state 190


state 165

    (23) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual . VEC dosPuntos dosPuntos New ParA ParC ptComa
    (31) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual . VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    VEC             shift and go to state 191


state 166

    (24) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual . VEC dosPuntos dosPuntos New ParA ParC ptComa
    (32) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual . VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    VEC             shift and go to state 192


state 167

    (39) DECLARACION -> Let Mut Id igual vec not CorA COMASEX . CorC ptComa
    (52) COMASEX -> COMASEX . Coma EXPRESION

    CorC            shift and go to state 193
    Coma            shift and go to state 157


state 168

    (40) DECLARACION -> Let Mut Id igual vec not CorA EXPRESION . ptComa EXPRESION CorC ptComa
    (53) COMASEX -> EXPRESION .
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    ptComa          shift and go to state 194
    CorC            reduce using rule 53 (COMASEX -> EXPRESION .)
    Coma            reduce using rule 53 (COMASEX -> EXPRESION .)
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 169

    (13) DECLARACION -> Let Mut Id dosPuntos I64 igual EXPRESION ptComa .

    Let             reduce using rule 13 (DECLARACION -> Let Mut Id dosPuntos I64 igual EXPRESION ptComa .)
    Id              reduce using rule 13 (DECLARACION -> Let Mut Id dosPuntos I64 igual EXPRESION ptComa .)
    PrintLn         reduce using rule 13 (DECLARACION -> Let Mut Id dosPuntos I64 igual EXPRESION ptComa .)
    $end            reduce using rule 13 (DECLARACION -> Let Mut Id dosPuntos I64 igual EXPRESION ptComa .)


state 170

    (14) DECLARACION -> Let Mut Id dosPuntos F64 igual EXPRESION ptComa .

    Let             reduce using rule 14 (DECLARACION -> Let Mut Id dosPuntos F64 igual EXPRESION ptComa .)
    Id              reduce using rule 14 (DECLARACION -> Let Mut Id dosPuntos F64 igual EXPRESION ptComa .)
    PrintLn         reduce using rule 14 (DECLARACION -> Let Mut Id dosPuntos F64 igual EXPRESION ptComa .)
    $end            reduce using rule 14 (DECLARACION -> Let Mut Id dosPuntos F64 igual EXPRESION ptComa .)


state 171

    (15) DECLARACION -> Let Mut Id dosPuntos StrA igual EXPRESION ptComa .

    Let             reduce using rule 15 (DECLARACION -> Let Mut Id dosPuntos StrA igual EXPRESION ptComa .)
    Id              reduce using rule 15 (DECLARACION -> Let Mut Id dosPuntos StrA igual EXPRESION ptComa .)
    PrintLn         reduce using rule 15 (DECLARACION -> Let Mut Id dosPuntos StrA igual EXPRESION ptComa .)
    $end            reduce using rule 15 (DECLARACION -> Let Mut Id dosPuntos StrA igual EXPRESION ptComa .)


state 172

    (16) DECLARACION -> Let Mut Id dosPuntos Str igual EXPRESION ptComa .

    Let             reduce using rule 16 (DECLARACION -> Let Mut Id dosPuntos Str igual EXPRESION ptComa .)
    Id              reduce using rule 16 (DECLARACION -> Let Mut Id dosPuntos Str igual EXPRESION ptComa .)
    PrintLn         reduce using rule 16 (DECLARACION -> Let Mut Id dosPuntos Str igual EXPRESION ptComa .)
    $end            reduce using rule 16 (DECLARACION -> Let Mut Id dosPuntos Str igual EXPRESION ptComa .)


state 173

    (17) DECLARACION -> Let Mut Id dosPuntos Bool igual EXPRESION ptComa .

    Let             reduce using rule 17 (DECLARACION -> Let Mut Id dosPuntos Bool igual EXPRESION ptComa .)
    Id              reduce using rule 17 (DECLARACION -> Let Mut Id dosPuntos Bool igual EXPRESION ptComa .)
    PrintLn         reduce using rule 17 (DECLARACION -> Let Mut Id dosPuntos Bool igual EXPRESION ptComa .)
    $end            reduce using rule 17 (DECLARACION -> Let Mut Id dosPuntos Bool igual EXPRESION ptComa .)


state 174

    (18) DECLARACION -> Let Mut Id dosPuntos CharAux igual EXPRESION ptComa .

    Let             reduce using rule 18 (DECLARACION -> Let Mut Id dosPuntos CharAux igual EXPRESION ptComa .)
    Id              reduce using rule 18 (DECLARACION -> Let Mut Id dosPuntos CharAux igual EXPRESION ptComa .)
    PrintLn         reduce using rule 18 (DECLARACION -> Let Mut Id dosPuntos CharAux igual EXPRESION ptComa .)
    $end            reduce using rule 18 (DECLARACION -> Let Mut Id dosPuntos CharAux igual EXPRESION ptComa .)


state 175

    (33) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue . igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (41) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue . igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 195


state 176

    (34) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue . igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (42) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue . igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 196


state 177

    (35) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue . igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (43) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue . igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 197


state 178

    (36) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue . igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (44) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue . igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 198


state 179

    (37) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue . igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (45) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue . igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 199


state 180

    (38) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue . igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (46) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue . igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 200


state 181

    (61) EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION . Coma EXPRESION ParC
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    Coma            shift and go to state 201
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 182

    (62) EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION . Coma EXPRESION ParC
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    Coma            shift and go to state 202
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 183

    (52) COMASEX -> COMASEX Coma EXPRESION .
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    ParC            reduce using rule 52 (COMASEX -> COMASEX Coma EXPRESION .)
    Coma            reduce using rule 52 (COMASEX -> COMASEX Coma EXPRESION .)
    CorC            reduce using rule 52 (COMASEX -> COMASEX Coma EXPRESION .)
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 184

    (51) IMPRIMIR -> PrintLn not ParA String Coma COMASEX ParC ptComa .

    Let             reduce using rule 51 (IMPRIMIR -> PrintLn not ParA String Coma COMASEX ParC ptComa .)
    Id              reduce using rule 51 (IMPRIMIR -> PrintLn not ParA String Coma COMASEX ParC ptComa .)
    PrintLn         reduce using rule 51 (IMPRIMIR -> PrintLn not ParA String Coma COMASEX ParC ptComa .)
    $end            reduce using rule 51 (IMPRIMIR -> PrintLn not ParA String Coma COMASEX ParC ptComa .)


state 185

    (25) DECLARACION -> Let Id igual vec not CorA COMASEX CorC ptComa .

    Let             reduce using rule 25 (DECLARACION -> Let Id igual vec not CorA COMASEX CorC ptComa .)
    Id              reduce using rule 25 (DECLARACION -> Let Id igual vec not CorA COMASEX CorC ptComa .)
    PrintLn         reduce using rule 25 (DECLARACION -> Let Id igual vec not CorA COMASEX CorC ptComa .)
    $end            reduce using rule 25 (DECLARACION -> Let Id igual vec not CorA COMASEX CorC ptComa .)


state 186

    (26) DECLARACION -> Let Id igual vec not CorA EXPRESION ptComa EXPRESION . CorC ptComa
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    CorC            shift and go to state 203
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 187

    (19) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC . dosPuntos dosPuntos New ParA ParC ptComa
    (27) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC . dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 204


state 188

    (20) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC . dosPuntos dosPuntos New ParA ParC ptComa
    (28) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC . dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 205


state 189

    (21) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC . dosPuntos dosPuntos New ParA ParC ptComa
    (29) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC . dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 206


state 190

    (22) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC . dosPuntos dosPuntos New ParA ParC ptComa
    (30) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC . dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 207


state 191

    (23) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC . dosPuntos dosPuntos New ParA ParC ptComa
    (31) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC . dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 208


state 192

    (24) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC . dosPuntos dosPuntos New ParA ParC ptComa
    (32) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC . dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 209


state 193

    (39) DECLARACION -> Let Mut Id igual vec not CorA COMASEX CorC . ptComa

    ptComa          shift and go to state 210


state 194

    (40) DECLARACION -> Let Mut Id igual vec not CorA EXPRESION ptComa . EXPRESION CorC ptComa
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 211

state 195

    (33) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual . VEC dosPuntos dosPuntos New ParA ParC ptComa
    (41) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual . VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    VEC             shift and go to state 212


state 196

    (34) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual . VEC dosPuntos dosPuntos New ParA ParC ptComa
    (42) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual . VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    VEC             shift and go to state 213


state 197

    (35) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual . VEC dosPuntos dosPuntos New ParA ParC ptComa
    (43) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual . VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    VEC             shift and go to state 214


state 198

    (36) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual . VEC dosPuntos dosPuntos New ParA ParC ptComa
    (44) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual . VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    VEC             shift and go to state 215


state 199

    (37) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual . VEC dosPuntos dosPuntos New ParA ParC ptComa
    (45) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual . VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    VEC             shift and go to state 216


state 200

    (38) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual . VEC dosPuntos dosPuntos New ParA ParC ptComa
    (46) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual . VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    VEC             shift and go to state 217


state 201

    (61) EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma . EXPRESION ParC
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 218

state 202

    (62) EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma . EXPRESION ParC
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 219

state 203

    (26) DECLARACION -> Let Id igual vec not CorA EXPRESION ptComa EXPRESION CorC . ptComa

    ptComa          shift and go to state 220


state 204

    (19) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos . dosPuntos New ParA ParC ptComa
    (27) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos . dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 221


state 205

    (20) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos . dosPuntos New ParA ParC ptComa
    (28) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos . dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 222


state 206

    (21) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos . dosPuntos New ParA ParC ptComa
    (29) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos . dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 223


state 207

    (22) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos . dosPuntos New ParA ParC ptComa
    (30) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos . dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 224


state 208

    (23) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos . dosPuntos New ParA ParC ptComa
    (31) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos . dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 225


state 209

    (24) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos . dosPuntos New ParA ParC ptComa
    (32) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos . dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 226


state 210

    (39) DECLARACION -> Let Mut Id igual vec not CorA COMASEX CorC ptComa .

    Let             reduce using rule 39 (DECLARACION -> Let Mut Id igual vec not CorA COMASEX CorC ptComa .)
    Id              reduce using rule 39 (DECLARACION -> Let Mut Id igual vec not CorA COMASEX CorC ptComa .)
    PrintLn         reduce using rule 39 (DECLARACION -> Let Mut Id igual vec not CorA COMASEX CorC ptComa .)
    $end            reduce using rule 39 (DECLARACION -> Let Mut Id igual vec not CorA COMASEX CorC ptComa .)


state 211

    (40) DECLARACION -> Let Mut Id igual vec not CorA EXPRESION ptComa EXPRESION . CorC ptComa
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    CorC            shift and go to state 227
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 212

    (33) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC . dosPuntos dosPuntos New ParA ParC ptComa
    (41) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC . dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 228


state 213

    (34) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC . dosPuntos dosPuntos New ParA ParC ptComa
    (42) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC . dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 229


state 214

    (35) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC . dosPuntos dosPuntos New ParA ParC ptComa
    (43) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC . dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 230


state 215

    (36) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC . dosPuntos dosPuntos New ParA ParC ptComa
    (44) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC . dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 231


state 216

    (37) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC . dosPuntos dosPuntos New ParA ParC ptComa
    (45) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC . dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 232


state 217

    (38) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC . dosPuntos dosPuntos New ParA ParC ptComa
    (46) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC . dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 233


state 218

    (61) EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION . ParC
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    ParC            shift and go to state 234
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 219

    (62) EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION . ParC
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    ParC            shift and go to state 235
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 220

    (26) DECLARACION -> Let Id igual vec not CorA EXPRESION ptComa EXPRESION CorC ptComa .

    Let             reduce using rule 26 (DECLARACION -> Let Id igual vec not CorA EXPRESION ptComa EXPRESION CorC ptComa .)
    Id              reduce using rule 26 (DECLARACION -> Let Id igual vec not CorA EXPRESION ptComa EXPRESION CorC ptComa .)
    PrintLn         reduce using rule 26 (DECLARACION -> Let Id igual vec not CorA EXPRESION ptComa EXPRESION CorC ptComa .)
    $end            reduce using rule 26 (DECLARACION -> Let Id igual vec not CorA EXPRESION ptComa EXPRESION CorC ptComa .)


state 221

    (19) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos . New ParA ParC ptComa
    (27) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos . Capacidad ParA EXPRESION ParC ptComa

    New             shift and go to state 236
    Capacidad       shift and go to state 237


state 222

    (20) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos . New ParA ParC ptComa
    (28) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos . Capacidad ParA EXPRESION ParC ptComa

    New             shift and go to state 238
    Capacidad       shift and go to state 239


state 223

    (21) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos . New ParA ParC ptComa
    (29) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos . Capacidad ParA EXPRESION ParC ptComa

    New             shift and go to state 240
    Capacidad       shift and go to state 241


state 224

    (22) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos . New ParA ParC ptComa
    (30) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos . Capacidad ParA EXPRESION ParC ptComa

    New             shift and go to state 242
    Capacidad       shift and go to state 243


state 225

    (23) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos . New ParA ParC ptComa
    (31) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos . Capacidad ParA EXPRESION ParC ptComa

    New             shift and go to state 244
    Capacidad       shift and go to state 245


state 226

    (24) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos . New ParA ParC ptComa
    (32) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos . Capacidad ParA EXPRESION ParC ptComa

    New             shift and go to state 246
    Capacidad       shift and go to state 247


state 227

    (40) DECLARACION -> Let Mut Id igual vec not CorA EXPRESION ptComa EXPRESION CorC . ptComa

    ptComa          shift and go to state 248


state 228

    (33) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos . dosPuntos New ParA ParC ptComa
    (41) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos . dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 249


state 229

    (34) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos . dosPuntos New ParA ParC ptComa
    (42) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos . dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 250


state 230

    (35) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos . dosPuntos New ParA ParC ptComa
    (43) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos . dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 251


state 231

    (36) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos . dosPuntos New ParA ParC ptComa
    (44) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos . dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 252


state 232

    (37) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos . dosPuntos New ParA ParC ptComa
    (45) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos . dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 253


state 233

    (38) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos . dosPuntos New ParA ParC ptComa
    (46) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos . dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 254


state 234

    (61) EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .

    ptComa          reduce using rule 61 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    mas             reduce using rule 61 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    menos           reduce using rule 61 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    por             reduce using rule 61 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    dividido        reduce using rule 61 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    modulo          reduce using rule 61 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    menorQue        reduce using rule 61 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    mayorQue        reduce using rule 61 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    menorIgual      reduce using rule 61 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    mayorIgual      reduce using rule 61 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    dobleIgual      reduce using rule 61 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    diferenteQue    reduce using rule 61 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    And             reduce using rule 61 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    Or              reduce using rule 61 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    AS              reduce using rule 61 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    ParC            reduce using rule 61 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    Coma            reduce using rule 61 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    CorC            reduce using rule 61 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)


state 235

    (62) EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .

    ptComa          reduce using rule 62 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    mas             reduce using rule 62 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    menos           reduce using rule 62 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    por             reduce using rule 62 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    dividido        reduce using rule 62 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    modulo          reduce using rule 62 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    menorQue        reduce using rule 62 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    mayorQue        reduce using rule 62 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    menorIgual      reduce using rule 62 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    mayorIgual      reduce using rule 62 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    dobleIgual      reduce using rule 62 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    diferenteQue    reduce using rule 62 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    And             reduce using rule 62 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    Or              reduce using rule 62 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    AS              reduce using rule 62 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    ParC            reduce using rule 62 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    Coma            reduce using rule 62 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    CorC            reduce using rule 62 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)


state 236

    (19) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New . ParA ParC ptComa

    ParA            shift and go to state 255


state 237

    (27) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad . ParA EXPRESION ParC ptComa

    ParA            shift and go to state 256


state 238

    (20) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New . ParA ParC ptComa

    ParA            shift and go to state 257


state 239

    (28) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad . ParA EXPRESION ParC ptComa

    ParA            shift and go to state 258


state 240

    (21) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New . ParA ParC ptComa

    ParA            shift and go to state 259


state 241

    (29) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad . ParA EXPRESION ParC ptComa

    ParA            shift and go to state 260


state 242

    (22) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New . ParA ParC ptComa

    ParA            shift and go to state 261


state 243

    (30) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad . ParA EXPRESION ParC ptComa

    ParA            shift and go to state 262


state 244

    (23) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New . ParA ParC ptComa

    ParA            shift and go to state 263


state 245

    (31) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad . ParA EXPRESION ParC ptComa

    ParA            shift and go to state 264


state 246

    (24) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New . ParA ParC ptComa

    ParA            shift and go to state 265


state 247

    (32) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad . ParA EXPRESION ParC ptComa

    ParA            shift and go to state 266


state 248

    (40) DECLARACION -> Let Mut Id igual vec not CorA EXPRESION ptComa EXPRESION CorC ptComa .

    Let             reduce using rule 40 (DECLARACION -> Let Mut Id igual vec not CorA EXPRESION ptComa EXPRESION CorC ptComa .)
    Id              reduce using rule 40 (DECLARACION -> Let Mut Id igual vec not CorA EXPRESION ptComa EXPRESION CorC ptComa .)
    PrintLn         reduce using rule 40 (DECLARACION -> Let Mut Id igual vec not CorA EXPRESION ptComa EXPRESION CorC ptComa .)
    $end            reduce using rule 40 (DECLARACION -> Let Mut Id igual vec not CorA EXPRESION ptComa EXPRESION CorC ptComa .)


state 249

    (33) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos . New ParA ParC ptComa
    (41) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos . Capacidad ParA EXPRESION ParC ptComa

    New             shift and go to state 267
    Capacidad       shift and go to state 268


state 250

    (34) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos . New ParA ParC ptComa
    (42) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos . Capacidad ParA EXPRESION ParC ptComa

    New             shift and go to state 269
    Capacidad       shift and go to state 270


state 251

    (35) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos . New ParA ParC ptComa
    (43) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos . Capacidad ParA EXPRESION ParC ptComa

    New             shift and go to state 271
    Capacidad       shift and go to state 272


state 252

    (36) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos . New ParA ParC ptComa
    (44) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos . Capacidad ParA EXPRESION ParC ptComa

    New             shift and go to state 273
    Capacidad       shift and go to state 274


state 253

    (37) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos . New ParA ParC ptComa
    (45) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos . Capacidad ParA EXPRESION ParC ptComa

    New             shift and go to state 275
    Capacidad       shift and go to state 276


state 254

    (38) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos . New ParA ParC ptComa
    (46) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos . Capacidad ParA EXPRESION ParC ptComa

    New             shift and go to state 277
    Capacidad       shift and go to state 278


state 255

    (19) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA . ParC ptComa

    ParC            shift and go to state 279


state 256

    (27) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA . EXPRESION ParC ptComa
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 280

state 257

    (20) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA . ParC ptComa

    ParC            shift and go to state 281


state 258

    (28) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA . EXPRESION ParC ptComa
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 282

state 259

    (21) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA . ParC ptComa

    ParC            shift and go to state 283


state 260

    (29) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA . EXPRESION ParC ptComa
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 284

state 261

    (22) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA . ParC ptComa

    ParC            shift and go to state 285


state 262

    (30) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA . EXPRESION ParC ptComa
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 286

state 263

    (23) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA . ParC ptComa

    ParC            shift and go to state 287


state 264

    (31) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA . EXPRESION ParC ptComa
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 288

state 265

    (24) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA . ParC ptComa

    ParC            shift and go to state 289


state 266

    (32) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA . EXPRESION ParC ptComa
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 290

state 267

    (33) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New . ParA ParC ptComa

    ParA            shift and go to state 291


state 268

    (41) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad . ParA EXPRESION ParC ptComa

    ParA            shift and go to state 292


state 269

    (34) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New . ParA ParC ptComa

    ParA            shift and go to state 293


state 270

    (42) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad . ParA EXPRESION ParC ptComa

    ParA            shift and go to state 294


state 271

    (35) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New . ParA ParC ptComa

    ParA            shift and go to state 295


state 272

    (43) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad . ParA EXPRESION ParC ptComa

    ParA            shift and go to state 296


state 273

    (36) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New . ParA ParC ptComa

    ParA            shift and go to state 297


state 274

    (44) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad . ParA EXPRESION ParC ptComa

    ParA            shift and go to state 298


state 275

    (37) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New . ParA ParC ptComa

    ParA            shift and go to state 299


state 276

    (45) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad . ParA EXPRESION ParC ptComa

    ParA            shift and go to state 300


state 277

    (38) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New . ParA ParC ptComa

    ParA            shift and go to state 301


state 278

    (46) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad . ParA EXPRESION ParC ptComa

    ParA            shift and go to state 302


state 279

    (19) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC . ptComa

    ptComa          shift and go to state 303


state 280

    (27) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION . ParC ptComa
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    ParC            shift and go to state 304
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 281

    (20) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC . ptComa

    ptComa          shift and go to state 305


state 282

    (28) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION . ParC ptComa
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    ParC            shift and go to state 306
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 283

    (21) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC . ptComa

    ptComa          shift and go to state 307


state 284

    (29) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION . ParC ptComa
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    ParC            shift and go to state 308
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 285

    (22) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC . ptComa

    ptComa          shift and go to state 309


state 286

    (30) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION . ParC ptComa
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    ParC            shift and go to state 310
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 287

    (23) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC . ptComa

    ptComa          shift and go to state 311


state 288

    (31) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION . ParC ptComa
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    ParC            shift and go to state 312
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 289

    (24) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC . ptComa

    ptComa          shift and go to state 313


state 290

    (32) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION . ParC ptComa
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    ParC            shift and go to state 314
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 291

    (33) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA . ParC ptComa

    ParC            shift and go to state 315


state 292

    (41) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA . EXPRESION ParC ptComa
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 316

state 293

    (34) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA . ParC ptComa

    ParC            shift and go to state 317


state 294

    (42) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA . EXPRESION ParC ptComa
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 318

state 295

    (35) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA . ParC ptComa

    ParC            shift and go to state 319


state 296

    (43) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA . EXPRESION ParC ptComa
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 320

state 297

    (36) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA . ParC ptComa

    ParC            shift and go to state 321


state 298

    (44) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA . EXPRESION ParC ptComa
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 322

state 299

    (37) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA . ParC ptComa

    ParC            shift and go to state 323


state 300

    (45) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA . EXPRESION ParC ptComa
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 324

state 301

    (38) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA . ParC ptComa

    ParC            shift and go to state 325


state 302

    (46) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA . EXPRESION ParC ptComa
    (54) EXPRESION -> . EXPRESION mas EXPRESION
    (55) EXPRESION -> . EXPRESION menos EXPRESION
    (56) EXPRESION -> . EXPRESION por EXPRESION
    (57) EXPRESION -> . EXPRESION dividido EXPRESION
    (58) EXPRESION -> . EXPRESION modulo EXPRESION
    (59) EXPRESION -> . menos EXPRESION
    (60) EXPRESION -> . ParA EXPRESION ParC
    (61) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (63) EXPRESION -> . EXPRESION menorQue EXPRESION
    (64) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (65) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (67) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (68) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (69) EXPRESION -> . EXPRESION And EXPRESION
    (70) EXPRESION -> . EXPRESION Or EXPRESION
    (71) EXPRESION -> . not EXPRESION
    (72) EXPRESION -> . EXPRESION AS I64
    (73) EXPRESION -> . EXPRESION AS F64
    (74) EXPRESION -> . Float
    (75) EXPRESION -> . Entero
    (76) EXPRESION -> . Booleano
    (77) EXPRESION -> . String
    (78) EXPRESION -> . Char
    (79) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    not             shift and go to state 24
    Float           shift and go to state 25
    Entero          shift and go to state 26
    Booleano        shift and go to state 27
    String          shift and go to state 28
    Char            shift and go to state 29
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 326

state 303

    (19) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .

    Let             reduce using rule 19 (DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Id              reduce using rule 19 (DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    PrintLn         reduce using rule 19 (DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    $end            reduce using rule 19 (DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)


state 304

    (27) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 327


state 305

    (20) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .

    Let             reduce using rule 20 (DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Id              reduce using rule 20 (DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    PrintLn         reduce using rule 20 (DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    $end            reduce using rule 20 (DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)


state 306

    (28) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 328


state 307

    (21) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .

    Let             reduce using rule 21 (DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Id              reduce using rule 21 (DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    PrintLn         reduce using rule 21 (DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    $end            reduce using rule 21 (DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)


state 308

    (29) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 329


state 309

    (22) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .

    Let             reduce using rule 22 (DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Id              reduce using rule 22 (DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    PrintLn         reduce using rule 22 (DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    $end            reduce using rule 22 (DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)


state 310

    (30) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 330


state 311

    (23) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .

    Let             reduce using rule 23 (DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Id              reduce using rule 23 (DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    PrintLn         reduce using rule 23 (DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    $end            reduce using rule 23 (DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)


state 312

    (31) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 331


state 313

    (24) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .

    Let             reduce using rule 24 (DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Id              reduce using rule 24 (DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    PrintLn         reduce using rule 24 (DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    $end            reduce using rule 24 (DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)


state 314

    (32) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 332


state 315

    (33) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC . ptComa

    ptComa          shift and go to state 333


state 316

    (41) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION . ParC ptComa
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    ParC            shift and go to state 334
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 317

    (34) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC . ptComa

    ptComa          shift and go to state 335


state 318

    (42) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION . ParC ptComa
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    ParC            shift and go to state 336
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 319

    (35) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC . ptComa

    ptComa          shift and go to state 337


state 320

    (43) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION . ParC ptComa
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    ParC            shift and go to state 338
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 321

    (36) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC . ptComa

    ptComa          shift and go to state 339


state 322

    (44) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION . ParC ptComa
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    ParC            shift and go to state 340
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 323

    (37) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC . ptComa

    ptComa          shift and go to state 341


state 324

    (45) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION . ParC ptComa
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    ParC            shift and go to state 342
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 325

    (38) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC . ptComa

    ptComa          shift and go to state 343


state 326

    (46) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION . ParC ptComa
    (54) EXPRESION -> EXPRESION . mas EXPRESION
    (55) EXPRESION -> EXPRESION . menos EXPRESION
    (56) EXPRESION -> EXPRESION . por EXPRESION
    (57) EXPRESION -> EXPRESION . dividido EXPRESION
    (58) EXPRESION -> EXPRESION . modulo EXPRESION
    (63) EXPRESION -> EXPRESION . menorQue EXPRESION
    (64) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (65) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (67) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (68) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (69) EXPRESION -> EXPRESION . And EXPRESION
    (70) EXPRESION -> EXPRESION . Or EXPRESION
    (72) EXPRESION -> EXPRESION . AS I64
    (73) EXPRESION -> EXPRESION . AS F64

    ParC            shift and go to state 344
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 327

    (27) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .

    Let             reduce using rule 27 (DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 27 (DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 27 (DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    $end            reduce using rule 27 (DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)


state 328

    (28) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .

    Let             reduce using rule 28 (DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 28 (DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 28 (DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    $end            reduce using rule 28 (DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)


state 329

    (29) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .

    Let             reduce using rule 29 (DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 29 (DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 29 (DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    $end            reduce using rule 29 (DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)


state 330

    (30) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .

    Let             reduce using rule 30 (DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 30 (DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 30 (DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    $end            reduce using rule 30 (DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)


state 331

    (31) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .

    Let             reduce using rule 31 (DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 31 (DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 31 (DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    $end            reduce using rule 31 (DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)


state 332

    (32) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .

    Let             reduce using rule 32 (DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 32 (DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 32 (DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    $end            reduce using rule 32 (DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)


state 333

    (33) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .

    Let             reduce using rule 33 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Id              reduce using rule 33 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    PrintLn         reduce using rule 33 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    $end            reduce using rule 33 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)


state 334

    (41) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 345


state 335

    (34) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .

    Let             reduce using rule 34 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Id              reduce using rule 34 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    PrintLn         reduce using rule 34 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    $end            reduce using rule 34 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)


state 336

    (42) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 346


state 337

    (35) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .

    Let             reduce using rule 35 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Id              reduce using rule 35 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    PrintLn         reduce using rule 35 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    $end            reduce using rule 35 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)


state 338

    (43) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 347


state 339

    (36) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .

    Let             reduce using rule 36 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Id              reduce using rule 36 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    PrintLn         reduce using rule 36 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    $end            reduce using rule 36 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)


state 340

    (44) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 348


state 341

    (37) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .

    Let             reduce using rule 37 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Id              reduce using rule 37 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    PrintLn         reduce using rule 37 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    $end            reduce using rule 37 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)


state 342

    (45) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 349


state 343

    (38) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .

    Let             reduce using rule 38 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Id              reduce using rule 38 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    PrintLn         reduce using rule 38 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    $end            reduce using rule 38 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)


state 344

    (46) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 350


state 345

    (41) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .

    Let             reduce using rule 41 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 41 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 41 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    $end            reduce using rule 41 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)


state 346

    (42) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .

    Let             reduce using rule 42 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 42 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 42 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    $end            reduce using rule 42 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)


state 347

    (43) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .

    Let             reduce using rule 43 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 43 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 43 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    $end            reduce using rule 43 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)


state 348

    (44) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .

    Let             reduce using rule 44 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 44 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 44 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    $end            reduce using rule 44 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)


state 349

    (45) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .

    Let             reduce using rule 45 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 45 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 45 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    $end            reduce using rule 45 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)


state 350

    (46) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .

    Let             reduce using rule 46 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 46 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 46 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    $end            reduce using rule 46 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)

