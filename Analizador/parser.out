Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    Comentario
    False
    True

Grammar

Rule 0     S' -> init
Rule 1     init -> FUNCIONES
Rule 2     FUNCIONES -> FUNCIONES MAIN
Rule 3     FUNCIONES -> FUNCIONES FUNCION
Rule 4     FUNCIONES -> FUNCION
Rule 5     FUNCIONES -> MAIN
Rule 6     INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION
Rule 7     INSTRUCCIONES -> INSTRUCCION
Rule 8     MAIN -> Func Main ParA ParC BLOQUE
Rule 9     FUNCION -> Func Id ParA ParC BLOQUE
Rule 10    INSTRUCCION -> DECLARACION
Rule 11    DECLARACION -> Let Id igual EXPRESION ptComa
Rule 12    DECLARACION -> Let Id dosPuntos I64 igual EXPRESION ptComa
Rule 13    DECLARACION -> Let Id dosPuntos F64 igual EXPRESION ptComa
Rule 14    DECLARACION -> Let Id dosPuntos StrA igual EXPRESION ptComa
Rule 15    DECLARACION -> Let Id dosPuntos Str igual EXPRESION ptComa
Rule 16    DECLARACION -> Let Id dosPuntos Bool igual EXPRESION ptComa
Rule 17    DECLARACION -> Let Id dosPuntos CharAux igual EXPRESION ptComa
Rule 18    DECLARACION -> Let Mut Id igual EXPRESION ptComa
Rule 19    DECLARACION -> Let Mut Id dosPuntos I64 igual EXPRESION ptComa
Rule 20    DECLARACION -> Let Mut Id dosPuntos F64 igual EXPRESION ptComa
Rule 21    DECLARACION -> Let Mut Id dosPuntos StrA igual EXPRESION ptComa
Rule 22    DECLARACION -> Let Mut Id dosPuntos Str igual EXPRESION ptComa
Rule 23    DECLARACION -> Let Mut Id dosPuntos Bool igual EXPRESION ptComa
Rule 24    DECLARACION -> Let Mut Id dosPuntos CharAux igual EXPRESION ptComa
Rule 25    DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
Rule 26    DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
Rule 27    DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
Rule 28    DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
Rule 29    DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
Rule 30    DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
Rule 31    DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
Rule 32    DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
Rule 33    DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
Rule 34    DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
Rule 35    DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
Rule 36    DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
Rule 37    DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
Rule 38    DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
Rule 39    DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
Rule 40    DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
Rule 41    DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
Rule 42    DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
Rule 43    DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
Rule 44    DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
Rule 45    DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
Rule 46    DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
Rule 47    DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
Rule 48    DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
Rule 49    INSTRUCCION -> IF
Rule 50    IF -> If EXPRESION BLOQUE ELSEIF ELSE
Rule 51    ELSEIF -> ELSEIF Else If EXPRESION BLOQUE
Rule 52    ELSEIF -> empty
Rule 53    ELSE -> Else BLOQUE
Rule 54    ELSE -> empty
Rule 55    BLOQUE -> llaveA INSTRUCCIONES llaveC
Rule 56    INSTRUCCION -> ASIGNACION
Rule 57    ASIGNACION -> Id igual EXPRESION ptComa
Rule 58    ASIGNACION -> Id CorA EXPRESION CorC igual EXPRESION ptComa
Rule 59    INSTRUCCION -> PUSH
Rule 60    PUSH -> Id punto Push ParA EXPRESION ParC ptComa
Rule 61    INSTRUCCION -> INSERTVEC
Rule 62    INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa
Rule 63    INSTRUCCION -> IMPRIMIR
Rule 64    IMPRIMIR -> PrintLn not ParA EXPRESION ParC ptComa
Rule 65    IMPRIMIR -> PrintLn not ParA String Coma COMASEX ParC ptComa
Rule 66    COMASEX -> COMASEX Coma EXPRESION
Rule 67    COMASEX -> EXPRESION
Rule 68    EXPRESION -> EXPRESION mas EXPRESION
Rule 69    EXPRESION -> EXPRESION menos EXPRESION
Rule 70    EXPRESION -> EXPRESION por EXPRESION
Rule 71    EXPRESION -> EXPRESION dividido EXPRESION
Rule 72    EXPRESION -> EXPRESION modulo EXPRESION
Rule 73    EXPRESION -> menos EXPRESION
Rule 74    EXPRESION -> ParA EXPRESION ParC
Rule 75    EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
Rule 76    EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
Rule 77    EXPRESION -> EXPRESION menorQue EXPRESION
Rule 78    EXPRESION -> EXPRESION mayorQue EXPRESION
Rule 79    EXPRESION -> EXPRESION menorIgual EXPRESION
Rule 80    EXPRESION -> EXPRESION mayorIgual EXPRESION
Rule 81    EXPRESION -> EXPRESION dobleIgual EXPRESION
Rule 82    EXPRESION -> EXPRESION diferenteQue EXPRESION
Rule 83    EXPRESION -> EXPRESION And EXPRESION
Rule 84    EXPRESION -> EXPRESION Or EXPRESION
Rule 85    EXPRESION -> not EXPRESION
Rule 86    EXPRESION -> EXPRESION AS I64
Rule 87    EXPRESION -> EXPRESION AS F64
Rule 88    EXPRESION -> EXPRESION punto To_string ParA ParC
Rule 89    EXPRESION -> EXPRESION punto Abs ParA ParC
Rule 90    EXPRESION -> EXPRESION punto Sqrt ParA ParC
Rule 91    EXPRESION -> vec not CorA COMASEX CorC
Rule 92    EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC
Rule 93    EXPRESION -> INSERTVEC
Rule 94    EXPRESION -> Id punto Remove ParA EXPRESION ParC
Rule 95    EXPRESION -> Float
Rule 96    EXPRESION -> Entero
Rule 97    EXPRESION -> Booleano
Rule 98    EXPRESION -> String
Rule 99    EXPRESION -> Char
Rule 100   EXPRESION -> Id
Rule 101   EXPRESION -> Id CorA EXPRESION CorC
Rule 102   empty -> <empty>

Terminals, with rules where they appear

AS                   : 86 87
Abs                  : 89
And                  : 83
Bool                 : 16 23 29 35 41 47
Booleano             : 97
Capacidad            : 31 32 33 34 35 36 43 44 45 46 47 48
Char                 : 99
CharAux              : 17 24 30 36 42 48
Coma                 : 62 65 66 75 76
Comentario           : 
CorA                 : 58 91 92 101
CorC                 : 58 91 92 101
Else                 : 51 53
Entero               : 96
F64                  : 13 20 26 32 38 44 76 87
False                : 
Float                : 95
Func                 : 8 9
I64                  : 12 19 25 31 37 43 75 86
Id                   : 9 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 57 58 60 62 94 100 101
If                   : 50 51
Insert               : 62
Let                  : 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48
Main                 : 8
Mut                  : 18 19 20 21 22 23 24 37 38 39 40 41 42 43 44 45 46 47 48
New                  : 25 26 27 28 29 30 37 38 39 40 41 42
Or                   : 84
ParA                 : 8 9 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 60 62 64 65 74 75 76 88 89 90 94
ParC                 : 8 9 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 60 62 64 65 74 75 76 88 89 90 94
Powf                 : 76
Powi                 : 75
PrintLn              : 64 65
Push                 : 60
Remove               : 94
Sqrt                 : 90
Str                  : 15 22 28 34 40 46
StrA                 : 14 21 27 33 39 45
String               : 65 98
To_string            : 88
True                 : 
VEC                  : 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48 48
diferenteQue         : 82
dividido             : 71
dobleIgual           : 81
dosPuntos            : 12 13 14 15 16 17 19 20 21 22 23 24 25 25 25 26 26 26 27 27 27 28 28 28 29 29 29 30 30 30 31 31 31 32 32 32 33 33 33 34 34 34 35 35 35 36 36 36 37 37 37 38 38 38 39 39 39 40 40 40 41 41 41 42 42 42 43 43 43 44 44 44 45 45 45 46 46 46 47 47 47 48 48 48 75 75 76 76
error                : 
igual                : 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 57 58
llaveA               : 55
llaveC               : 55
mas                  : 68
mayorIgual           : 80
mayorQue             : 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 78
menorIgual           : 79
menorQue             : 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 77
menos                : 69 73
modulo               : 72
not                  : 64 65 85 91 92
por                  : 70
ptComa               : 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 57 58 60 62 64 65 92
punto                : 60 62 88 89 90 94
vec                  : 91 92

Nonterminals, with rules where they appear

ASIGNACION           : 56
BLOQUE               : 8 9 50 51 53
COMASEX              : 65 66 91
DECLARACION          : 10
ELSE                 : 50
ELSEIF               : 50 51
EXPRESION            : 11 12 13 14 15 16 17 18 19 20 21 22 23 24 31 32 33 34 35 36 43 44 45 46 47 48 50 51 57 58 58 60 62 62 64 66 67 68 68 69 69 70 70 71 71 72 72 73 74 75 75 76 76 77 77 78 78 79 79 80 80 81 81 82 82 83 83 84 84 85 86 87 88 89 90 92 92 94 101
FUNCION              : 3 4
FUNCIONES            : 1 2 3
IF                   : 49
IMPRIMIR             : 63
INSERTVEC            : 61 93
INSTRUCCION          : 6 7
INSTRUCCIONES        : 6 55
MAIN                 : 2 5
PUSH                 : 59
empty                : 52 54
init                 : 0

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . FUNCIONES
    (2) FUNCIONES -> . FUNCIONES MAIN
    (3) FUNCIONES -> . FUNCIONES FUNCION
    (4) FUNCIONES -> . FUNCION
    (5) FUNCIONES -> . MAIN
    (9) FUNCION -> . Func Id ParA ParC BLOQUE
    (8) MAIN -> . Func Main ParA ParC BLOQUE

    Func            shift and go to state 5

    init                           shift and go to state 1
    FUNCIONES                      shift and go to state 2
    MAIN                           shift and go to state 3
    FUNCION                        shift and go to state 4

state 1

    (0) S' -> init .



state 2

    (1) init -> FUNCIONES .
    (2) FUNCIONES -> FUNCIONES . MAIN
    (3) FUNCIONES -> FUNCIONES . FUNCION
    (8) MAIN -> . Func Main ParA ParC BLOQUE
    (9) FUNCION -> . Func Id ParA ParC BLOQUE

    $end            reduce using rule 1 (init -> FUNCIONES .)
    Func            shift and go to state 8

    MAIN                           shift and go to state 6
    FUNCION                        shift and go to state 7

state 3

    (5) FUNCIONES -> MAIN .

    Func            reduce using rule 5 (FUNCIONES -> MAIN .)
    $end            reduce using rule 5 (FUNCIONES -> MAIN .)


state 4

    (4) FUNCIONES -> FUNCION .

    Func            reduce using rule 4 (FUNCIONES -> FUNCION .)
    $end            reduce using rule 4 (FUNCIONES -> FUNCION .)


state 5

    (9) FUNCION -> Func . Id ParA ParC BLOQUE
    (8) MAIN -> Func . Main ParA ParC BLOQUE

    Id              shift and go to state 9
    Main            shift and go to state 10


state 6

    (2) FUNCIONES -> FUNCIONES MAIN .

    Func            reduce using rule 2 (FUNCIONES -> FUNCIONES MAIN .)
    $end            reduce using rule 2 (FUNCIONES -> FUNCIONES MAIN .)


state 7

    (3) FUNCIONES -> FUNCIONES FUNCION .

    Func            reduce using rule 3 (FUNCIONES -> FUNCIONES FUNCION .)
    $end            reduce using rule 3 (FUNCIONES -> FUNCIONES FUNCION .)


state 8

    (8) MAIN -> Func . Main ParA ParC BLOQUE
    (9) FUNCION -> Func . Id ParA ParC BLOQUE

    Main            shift and go to state 10
    Id              shift and go to state 9


state 9

    (9) FUNCION -> Func Id . ParA ParC BLOQUE

    ParA            shift and go to state 11


state 10

    (8) MAIN -> Func Main . ParA ParC BLOQUE

    ParA            shift and go to state 12


state 11

    (9) FUNCION -> Func Id ParA . ParC BLOQUE

    ParC            shift and go to state 13


state 12

    (8) MAIN -> Func Main ParA . ParC BLOQUE

    ParC            shift and go to state 14


state 13

    (9) FUNCION -> Func Id ParA ParC . BLOQUE
    (55) BLOQUE -> . llaveA INSTRUCCIONES llaveC

    llaveA          shift and go to state 16

    BLOQUE                         shift and go to state 15

state 14

    (8) MAIN -> Func Main ParA ParC . BLOQUE
    (55) BLOQUE -> . llaveA INSTRUCCIONES llaveC

    llaveA          shift and go to state 16

    BLOQUE                         shift and go to state 17

state 15

    (9) FUNCION -> Func Id ParA ParC BLOQUE .

    Func            reduce using rule 9 (FUNCION -> Func Id ParA ParC BLOQUE .)
    $end            reduce using rule 9 (FUNCION -> Func Id ParA ParC BLOQUE .)


state 16

    (55) BLOQUE -> llaveA . INSTRUCCIONES llaveC
    (6) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (7) INSTRUCCIONES -> . INSTRUCCION
    (10) INSTRUCCION -> . DECLARACION
    (49) INSTRUCCION -> . IF
    (56) INSTRUCCION -> . ASIGNACION
    (59) INSTRUCCION -> . PUSH
    (61) INSTRUCCION -> . INSERTVEC
    (63) INSTRUCCION -> . IMPRIMIR
    (11) DECLARACION -> . Let Id igual EXPRESION ptComa
    (12) DECLARACION -> . Let Id dosPuntos I64 igual EXPRESION ptComa
    (13) DECLARACION -> . Let Id dosPuntos F64 igual EXPRESION ptComa
    (14) DECLARACION -> . Let Id dosPuntos StrA igual EXPRESION ptComa
    (15) DECLARACION -> . Let Id dosPuntos Str igual EXPRESION ptComa
    (16) DECLARACION -> . Let Id dosPuntos Bool igual EXPRESION ptComa
    (17) DECLARACION -> . Let Id dosPuntos CharAux igual EXPRESION ptComa
    (18) DECLARACION -> . Let Mut Id igual EXPRESION ptComa
    (19) DECLARACION -> . Let Mut Id dosPuntos I64 igual EXPRESION ptComa
    (20) DECLARACION -> . Let Mut Id dosPuntos F64 igual EXPRESION ptComa
    (21) DECLARACION -> . Let Mut Id dosPuntos StrA igual EXPRESION ptComa
    (22) DECLARACION -> . Let Mut Id dosPuntos Str igual EXPRESION ptComa
    (23) DECLARACION -> . Let Mut Id dosPuntos Bool igual EXPRESION ptComa
    (24) DECLARACION -> . Let Mut Id dosPuntos CharAux igual EXPRESION ptComa
    (25) DECLARACION -> . Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (26) DECLARACION -> . Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (27) DECLARACION -> . Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (28) DECLARACION -> . Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (29) DECLARACION -> . Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (30) DECLARACION -> . Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (31) DECLARACION -> . Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (32) DECLARACION -> . Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (33) DECLARACION -> . Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (34) DECLARACION -> . Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (35) DECLARACION -> . Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (36) DECLARACION -> . Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (37) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (38) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (39) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (40) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (41) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (42) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (43) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (44) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (45) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (46) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (47) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (48) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (50) IF -> . If EXPRESION BLOQUE ELSEIF ELSE
    (57) ASIGNACION -> . Id igual EXPRESION ptComa
    (58) ASIGNACION -> . Id CorA EXPRESION CorC igual EXPRESION ptComa
    (60) PUSH -> . Id punto Push ParA EXPRESION ParC ptComa
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa
    (64) IMPRIMIR -> . PrintLn not ParA EXPRESION ParC ptComa
    (65) IMPRIMIR -> . PrintLn not ParA String Coma COMASEX ParC ptComa

    Let             shift and go to state 26
    If              shift and go to state 28
    Id              shift and go to state 27
    PrintLn         shift and go to state 29

    INSTRUCCIONES                  shift and go to state 18
    INSTRUCCION                    shift and go to state 19
    DECLARACION                    shift and go to state 20
    IF                             shift and go to state 21
    ASIGNACION                     shift and go to state 22
    PUSH                           shift and go to state 23
    INSERTVEC                      shift and go to state 24
    IMPRIMIR                       shift and go to state 25

state 17

    (8) MAIN -> Func Main ParA ParC BLOQUE .

    Func            reduce using rule 8 (MAIN -> Func Main ParA ParC BLOQUE .)
    $end            reduce using rule 8 (MAIN -> Func Main ParA ParC BLOQUE .)


state 18

    (55) BLOQUE -> llaveA INSTRUCCIONES . llaveC
    (6) INSTRUCCIONES -> INSTRUCCIONES . INSTRUCCION
    (10) INSTRUCCION -> . DECLARACION
    (49) INSTRUCCION -> . IF
    (56) INSTRUCCION -> . ASIGNACION
    (59) INSTRUCCION -> . PUSH
    (61) INSTRUCCION -> . INSERTVEC
    (63) INSTRUCCION -> . IMPRIMIR
    (11) DECLARACION -> . Let Id igual EXPRESION ptComa
    (12) DECLARACION -> . Let Id dosPuntos I64 igual EXPRESION ptComa
    (13) DECLARACION -> . Let Id dosPuntos F64 igual EXPRESION ptComa
    (14) DECLARACION -> . Let Id dosPuntos StrA igual EXPRESION ptComa
    (15) DECLARACION -> . Let Id dosPuntos Str igual EXPRESION ptComa
    (16) DECLARACION -> . Let Id dosPuntos Bool igual EXPRESION ptComa
    (17) DECLARACION -> . Let Id dosPuntos CharAux igual EXPRESION ptComa
    (18) DECLARACION -> . Let Mut Id igual EXPRESION ptComa
    (19) DECLARACION -> . Let Mut Id dosPuntos I64 igual EXPRESION ptComa
    (20) DECLARACION -> . Let Mut Id dosPuntos F64 igual EXPRESION ptComa
    (21) DECLARACION -> . Let Mut Id dosPuntos StrA igual EXPRESION ptComa
    (22) DECLARACION -> . Let Mut Id dosPuntos Str igual EXPRESION ptComa
    (23) DECLARACION -> . Let Mut Id dosPuntos Bool igual EXPRESION ptComa
    (24) DECLARACION -> . Let Mut Id dosPuntos CharAux igual EXPRESION ptComa
    (25) DECLARACION -> . Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (26) DECLARACION -> . Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (27) DECLARACION -> . Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (28) DECLARACION -> . Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (29) DECLARACION -> . Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (30) DECLARACION -> . Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (31) DECLARACION -> . Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (32) DECLARACION -> . Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (33) DECLARACION -> . Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (34) DECLARACION -> . Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (35) DECLARACION -> . Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (36) DECLARACION -> . Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (37) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (38) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (39) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (40) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (41) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (42) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (43) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (44) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (45) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (46) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (47) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (48) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (50) IF -> . If EXPRESION BLOQUE ELSEIF ELSE
    (57) ASIGNACION -> . Id igual EXPRESION ptComa
    (58) ASIGNACION -> . Id CorA EXPRESION CorC igual EXPRESION ptComa
    (60) PUSH -> . Id punto Push ParA EXPRESION ParC ptComa
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa
    (64) IMPRIMIR -> . PrintLn not ParA EXPRESION ParC ptComa
    (65) IMPRIMIR -> . PrintLn not ParA String Coma COMASEX ParC ptComa

    llaveC          shift and go to state 30
    Let             shift and go to state 26
    If              shift and go to state 28
    Id              shift and go to state 27
    PrintLn         shift and go to state 29

    INSTRUCCION                    shift and go to state 31
    DECLARACION                    shift and go to state 20
    IF                             shift and go to state 21
    ASIGNACION                     shift and go to state 22
    PUSH                           shift and go to state 23
    INSERTVEC                      shift and go to state 24
    IMPRIMIR                       shift and go to state 25

state 19

    (7) INSTRUCCIONES -> INSTRUCCION .

    llaveC          reduce using rule 7 (INSTRUCCIONES -> INSTRUCCION .)
    Let             reduce using rule 7 (INSTRUCCIONES -> INSTRUCCION .)
    If              reduce using rule 7 (INSTRUCCIONES -> INSTRUCCION .)
    Id              reduce using rule 7 (INSTRUCCIONES -> INSTRUCCION .)
    PrintLn         reduce using rule 7 (INSTRUCCIONES -> INSTRUCCION .)


state 20

    (10) INSTRUCCION -> DECLARACION .

    llaveC          reduce using rule 10 (INSTRUCCION -> DECLARACION .)
    Let             reduce using rule 10 (INSTRUCCION -> DECLARACION .)
    If              reduce using rule 10 (INSTRUCCION -> DECLARACION .)
    Id              reduce using rule 10 (INSTRUCCION -> DECLARACION .)
    PrintLn         reduce using rule 10 (INSTRUCCION -> DECLARACION .)


state 21

    (49) INSTRUCCION -> IF .

    llaveC          reduce using rule 49 (INSTRUCCION -> IF .)
    Let             reduce using rule 49 (INSTRUCCION -> IF .)
    If              reduce using rule 49 (INSTRUCCION -> IF .)
    Id              reduce using rule 49 (INSTRUCCION -> IF .)
    PrintLn         reduce using rule 49 (INSTRUCCION -> IF .)


state 22

    (56) INSTRUCCION -> ASIGNACION .

    llaveC          reduce using rule 56 (INSTRUCCION -> ASIGNACION .)
    Let             reduce using rule 56 (INSTRUCCION -> ASIGNACION .)
    If              reduce using rule 56 (INSTRUCCION -> ASIGNACION .)
    Id              reduce using rule 56 (INSTRUCCION -> ASIGNACION .)
    PrintLn         reduce using rule 56 (INSTRUCCION -> ASIGNACION .)


state 23

    (59) INSTRUCCION -> PUSH .

    llaveC          reduce using rule 59 (INSTRUCCION -> PUSH .)
    Let             reduce using rule 59 (INSTRUCCION -> PUSH .)
    If              reduce using rule 59 (INSTRUCCION -> PUSH .)
    Id              reduce using rule 59 (INSTRUCCION -> PUSH .)
    PrintLn         reduce using rule 59 (INSTRUCCION -> PUSH .)


state 24

    (61) INSTRUCCION -> INSERTVEC .

    llaveC          reduce using rule 61 (INSTRUCCION -> INSERTVEC .)
    Let             reduce using rule 61 (INSTRUCCION -> INSERTVEC .)
    If              reduce using rule 61 (INSTRUCCION -> INSERTVEC .)
    Id              reduce using rule 61 (INSTRUCCION -> INSERTVEC .)
    PrintLn         reduce using rule 61 (INSTRUCCION -> INSERTVEC .)


state 25

    (63) INSTRUCCION -> IMPRIMIR .

    llaveC          reduce using rule 63 (INSTRUCCION -> IMPRIMIR .)
    Let             reduce using rule 63 (INSTRUCCION -> IMPRIMIR .)
    If              reduce using rule 63 (INSTRUCCION -> IMPRIMIR .)
    Id              reduce using rule 63 (INSTRUCCION -> IMPRIMIR .)
    PrintLn         reduce using rule 63 (INSTRUCCION -> IMPRIMIR .)


state 26

    (11) DECLARACION -> Let . Id igual EXPRESION ptComa
    (12) DECLARACION -> Let . Id dosPuntos I64 igual EXPRESION ptComa
    (13) DECLARACION -> Let . Id dosPuntos F64 igual EXPRESION ptComa
    (14) DECLARACION -> Let . Id dosPuntos StrA igual EXPRESION ptComa
    (15) DECLARACION -> Let . Id dosPuntos Str igual EXPRESION ptComa
    (16) DECLARACION -> Let . Id dosPuntos Bool igual EXPRESION ptComa
    (17) DECLARACION -> Let . Id dosPuntos CharAux igual EXPRESION ptComa
    (18) DECLARACION -> Let . Mut Id igual EXPRESION ptComa
    (19) DECLARACION -> Let . Mut Id dosPuntos I64 igual EXPRESION ptComa
    (20) DECLARACION -> Let . Mut Id dosPuntos F64 igual EXPRESION ptComa
    (21) DECLARACION -> Let . Mut Id dosPuntos StrA igual EXPRESION ptComa
    (22) DECLARACION -> Let . Mut Id dosPuntos Str igual EXPRESION ptComa
    (23) DECLARACION -> Let . Mut Id dosPuntos Bool igual EXPRESION ptComa
    (24) DECLARACION -> Let . Mut Id dosPuntos CharAux igual EXPRESION ptComa
    (25) DECLARACION -> Let . Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (26) DECLARACION -> Let . Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (27) DECLARACION -> Let . Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (28) DECLARACION -> Let . Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (29) DECLARACION -> Let . Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (30) DECLARACION -> Let . Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (31) DECLARACION -> Let . Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (32) DECLARACION -> Let . Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (33) DECLARACION -> Let . Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (34) DECLARACION -> Let . Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (35) DECLARACION -> Let . Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (36) DECLARACION -> Let . Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (37) DECLARACION -> Let . Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (38) DECLARACION -> Let . Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (39) DECLARACION -> Let . Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (40) DECLARACION -> Let . Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (41) DECLARACION -> Let . Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (42) DECLARACION -> Let . Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (43) DECLARACION -> Let . Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (44) DECLARACION -> Let . Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (45) DECLARACION -> Let . Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (46) DECLARACION -> Let . Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (47) DECLARACION -> Let . Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (48) DECLARACION -> Let . Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    Id              shift and go to state 32
    Mut             shift and go to state 33


state 27

    (57) ASIGNACION -> Id . igual EXPRESION ptComa
    (58) ASIGNACION -> Id . CorA EXPRESION CorC igual EXPRESION ptComa
    (60) PUSH -> Id . punto Push ParA EXPRESION ParC ptComa
    (62) INSERTVEC -> Id . punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    igual           shift and go to state 34
    CorA            shift and go to state 35
    punto           shift and go to state 36


state 28

    (50) IF -> If . EXPRESION BLOQUE ELSEIF ELSE
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 37
    INSERTVEC                      shift and go to state 44

state 29

    (64) IMPRIMIR -> PrintLn . not ParA EXPRESION ParC ptComa
    (65) IMPRIMIR -> PrintLn . not ParA String Coma COMASEX ParC ptComa

    not             shift and go to state 51


state 30

    (55) BLOQUE -> llaveA INSTRUCCIONES llaveC .

    Func            reduce using rule 55 (BLOQUE -> llaveA INSTRUCCIONES llaveC .)
    $end            reduce using rule 55 (BLOQUE -> llaveA INSTRUCCIONES llaveC .)
    Else            reduce using rule 55 (BLOQUE -> llaveA INSTRUCCIONES llaveC .)
    llaveC          reduce using rule 55 (BLOQUE -> llaveA INSTRUCCIONES llaveC .)
    Let             reduce using rule 55 (BLOQUE -> llaveA INSTRUCCIONES llaveC .)
    If              reduce using rule 55 (BLOQUE -> llaveA INSTRUCCIONES llaveC .)
    Id              reduce using rule 55 (BLOQUE -> llaveA INSTRUCCIONES llaveC .)
    PrintLn         reduce using rule 55 (BLOQUE -> llaveA INSTRUCCIONES llaveC .)


state 31

    (6) INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .

    llaveC          reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    Let             reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    If              reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    Id              reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    PrintLn         reduce using rule 6 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)


state 32

    (11) DECLARACION -> Let Id . igual EXPRESION ptComa
    (12) DECLARACION -> Let Id . dosPuntos I64 igual EXPRESION ptComa
    (13) DECLARACION -> Let Id . dosPuntos F64 igual EXPRESION ptComa
    (14) DECLARACION -> Let Id . dosPuntos StrA igual EXPRESION ptComa
    (15) DECLARACION -> Let Id . dosPuntos Str igual EXPRESION ptComa
    (16) DECLARACION -> Let Id . dosPuntos Bool igual EXPRESION ptComa
    (17) DECLARACION -> Let Id . dosPuntos CharAux igual EXPRESION ptComa
    (25) DECLARACION -> Let Id . dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (26) DECLARACION -> Let Id . dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (27) DECLARACION -> Let Id . dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (28) DECLARACION -> Let Id . dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (29) DECLARACION -> Let Id . dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (30) DECLARACION -> Let Id . dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (31) DECLARACION -> Let Id . dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (32) DECLARACION -> Let Id . dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (33) DECLARACION -> Let Id . dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (34) DECLARACION -> Let Id . dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (35) DECLARACION -> Let Id . dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (36) DECLARACION -> Let Id . dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 52
    dosPuntos       shift and go to state 53


state 33

    (18) DECLARACION -> Let Mut . Id igual EXPRESION ptComa
    (19) DECLARACION -> Let Mut . Id dosPuntos I64 igual EXPRESION ptComa
    (20) DECLARACION -> Let Mut . Id dosPuntos F64 igual EXPRESION ptComa
    (21) DECLARACION -> Let Mut . Id dosPuntos StrA igual EXPRESION ptComa
    (22) DECLARACION -> Let Mut . Id dosPuntos Str igual EXPRESION ptComa
    (23) DECLARACION -> Let Mut . Id dosPuntos Bool igual EXPRESION ptComa
    (24) DECLARACION -> Let Mut . Id dosPuntos CharAux igual EXPRESION ptComa
    (37) DECLARACION -> Let Mut . Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (38) DECLARACION -> Let Mut . Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (39) DECLARACION -> Let Mut . Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (40) DECLARACION -> Let Mut . Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (41) DECLARACION -> Let Mut . Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (42) DECLARACION -> Let Mut . Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (43) DECLARACION -> Let Mut . Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (44) DECLARACION -> Let Mut . Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (45) DECLARACION -> Let Mut . Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (46) DECLARACION -> Let Mut . Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (47) DECLARACION -> Let Mut . Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (48) DECLARACION -> Let Mut . Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    Id              shift and go to state 54


state 34

    (57) ASIGNACION -> Id igual . EXPRESION ptComa
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 55
    INSERTVEC                      shift and go to state 44

state 35

    (58) ASIGNACION -> Id CorA . EXPRESION CorC igual EXPRESION ptComa
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 56
    INSERTVEC                      shift and go to state 44

state 36

    (60) PUSH -> Id punto . Push ParA EXPRESION ParC ptComa
    (62) INSERTVEC -> Id punto . Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    Push            shift and go to state 57
    Insert          shift and go to state 58


state 37

    (50) IF -> If EXPRESION . BLOQUE ELSEIF ELSE
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC
    (55) BLOQUE -> . llaveA INSTRUCCIONES llaveC

    mas             shift and go to state 60
    menos           shift and go to state 61
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64
    menorQue        shift and go to state 65
    mayorQue        shift and go to state 66
    menorIgual      shift and go to state 67
    mayorIgual      shift and go to state 68
    dobleIgual      shift and go to state 69
    diferenteQue    shift and go to state 70
    And             shift and go to state 71
    Or              shift and go to state 72
    AS              shift and go to state 73
    punto           shift and go to state 74
    llaveA          shift and go to state 16

    BLOQUE                         shift and go to state 59

state 38

    (73) EXPRESION -> menos . EXPRESION
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 75
    INSERTVEC                      shift and go to state 44

state 39

    (74) EXPRESION -> ParA . EXPRESION ParC
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 76
    INSERTVEC                      shift and go to state 44

state 40

    (75) EXPRESION -> I64 . dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC

    dosPuntos       shift and go to state 77


state 41

    (76) EXPRESION -> F64 . dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC

    dosPuntos       shift and go to state 78


state 42

    (85) EXPRESION -> not . EXPRESION
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 79
    INSERTVEC                      shift and go to state 44

state 43

    (91) EXPRESION -> vec . not CorA COMASEX CorC
    (92) EXPRESION -> vec . not CorA EXPRESION ptComa EXPRESION CorC

    not             shift and go to state 80


state 44

    (93) EXPRESION -> INSERTVEC .

    mas             reduce using rule 93 (EXPRESION -> INSERTVEC .)
    menos           reduce using rule 93 (EXPRESION -> INSERTVEC .)
    por             reduce using rule 93 (EXPRESION -> INSERTVEC .)
    dividido        reduce using rule 93 (EXPRESION -> INSERTVEC .)
    modulo          reduce using rule 93 (EXPRESION -> INSERTVEC .)
    menorQue        reduce using rule 93 (EXPRESION -> INSERTVEC .)
    mayorQue        reduce using rule 93 (EXPRESION -> INSERTVEC .)
    menorIgual      reduce using rule 93 (EXPRESION -> INSERTVEC .)
    mayorIgual      reduce using rule 93 (EXPRESION -> INSERTVEC .)
    dobleIgual      reduce using rule 93 (EXPRESION -> INSERTVEC .)
    diferenteQue    reduce using rule 93 (EXPRESION -> INSERTVEC .)
    And             reduce using rule 93 (EXPRESION -> INSERTVEC .)
    Or              reduce using rule 93 (EXPRESION -> INSERTVEC .)
    AS              reduce using rule 93 (EXPRESION -> INSERTVEC .)
    punto           reduce using rule 93 (EXPRESION -> INSERTVEC .)
    llaveA          reduce using rule 93 (EXPRESION -> INSERTVEC .)
    ptComa          reduce using rule 93 (EXPRESION -> INSERTVEC .)
    CorC            reduce using rule 93 (EXPRESION -> INSERTVEC .)
    ParC            reduce using rule 93 (EXPRESION -> INSERTVEC .)
    Coma            reduce using rule 93 (EXPRESION -> INSERTVEC .)


state 45

    (94) EXPRESION -> Id . punto Remove ParA EXPRESION ParC
    (100) EXPRESION -> Id .
    (101) EXPRESION -> Id . CorA EXPRESION CorC
    (62) INSERTVEC -> Id . punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

  ! shift/reduce conflict for punto resolved as shift
    punto           shift and go to state 81
    mas             reduce using rule 100 (EXPRESION -> Id .)
    menos           reduce using rule 100 (EXPRESION -> Id .)
    por             reduce using rule 100 (EXPRESION -> Id .)
    dividido        reduce using rule 100 (EXPRESION -> Id .)
    modulo          reduce using rule 100 (EXPRESION -> Id .)
    menorQue        reduce using rule 100 (EXPRESION -> Id .)
    mayorQue        reduce using rule 100 (EXPRESION -> Id .)
    menorIgual      reduce using rule 100 (EXPRESION -> Id .)
    mayorIgual      reduce using rule 100 (EXPRESION -> Id .)
    dobleIgual      reduce using rule 100 (EXPRESION -> Id .)
    diferenteQue    reduce using rule 100 (EXPRESION -> Id .)
    And             reduce using rule 100 (EXPRESION -> Id .)
    Or              reduce using rule 100 (EXPRESION -> Id .)
    AS              reduce using rule 100 (EXPRESION -> Id .)
    llaveA          reduce using rule 100 (EXPRESION -> Id .)
    ptComa          reduce using rule 100 (EXPRESION -> Id .)
    CorC            reduce using rule 100 (EXPRESION -> Id .)
    ParC            reduce using rule 100 (EXPRESION -> Id .)
    Coma            reduce using rule 100 (EXPRESION -> Id .)
    CorA            shift and go to state 82

  ! punto           [ reduce using rule 100 (EXPRESION -> Id .) ]


state 46

    (95) EXPRESION -> Float .

    mas             reduce using rule 95 (EXPRESION -> Float .)
    menos           reduce using rule 95 (EXPRESION -> Float .)
    por             reduce using rule 95 (EXPRESION -> Float .)
    dividido        reduce using rule 95 (EXPRESION -> Float .)
    modulo          reduce using rule 95 (EXPRESION -> Float .)
    menorQue        reduce using rule 95 (EXPRESION -> Float .)
    mayorQue        reduce using rule 95 (EXPRESION -> Float .)
    menorIgual      reduce using rule 95 (EXPRESION -> Float .)
    mayorIgual      reduce using rule 95 (EXPRESION -> Float .)
    dobleIgual      reduce using rule 95 (EXPRESION -> Float .)
    diferenteQue    reduce using rule 95 (EXPRESION -> Float .)
    And             reduce using rule 95 (EXPRESION -> Float .)
    Or              reduce using rule 95 (EXPRESION -> Float .)
    AS              reduce using rule 95 (EXPRESION -> Float .)
    punto           reduce using rule 95 (EXPRESION -> Float .)
    llaveA          reduce using rule 95 (EXPRESION -> Float .)
    ptComa          reduce using rule 95 (EXPRESION -> Float .)
    CorC            reduce using rule 95 (EXPRESION -> Float .)
    ParC            reduce using rule 95 (EXPRESION -> Float .)
    Coma            reduce using rule 95 (EXPRESION -> Float .)


state 47

    (96) EXPRESION -> Entero .

    mas             reduce using rule 96 (EXPRESION -> Entero .)
    menos           reduce using rule 96 (EXPRESION -> Entero .)
    por             reduce using rule 96 (EXPRESION -> Entero .)
    dividido        reduce using rule 96 (EXPRESION -> Entero .)
    modulo          reduce using rule 96 (EXPRESION -> Entero .)
    menorQue        reduce using rule 96 (EXPRESION -> Entero .)
    mayorQue        reduce using rule 96 (EXPRESION -> Entero .)
    menorIgual      reduce using rule 96 (EXPRESION -> Entero .)
    mayorIgual      reduce using rule 96 (EXPRESION -> Entero .)
    dobleIgual      reduce using rule 96 (EXPRESION -> Entero .)
    diferenteQue    reduce using rule 96 (EXPRESION -> Entero .)
    And             reduce using rule 96 (EXPRESION -> Entero .)
    Or              reduce using rule 96 (EXPRESION -> Entero .)
    AS              reduce using rule 96 (EXPRESION -> Entero .)
    punto           reduce using rule 96 (EXPRESION -> Entero .)
    llaveA          reduce using rule 96 (EXPRESION -> Entero .)
    ptComa          reduce using rule 96 (EXPRESION -> Entero .)
    CorC            reduce using rule 96 (EXPRESION -> Entero .)
    ParC            reduce using rule 96 (EXPRESION -> Entero .)
    Coma            reduce using rule 96 (EXPRESION -> Entero .)


state 48

    (97) EXPRESION -> Booleano .

    mas             reduce using rule 97 (EXPRESION -> Booleano .)
    menos           reduce using rule 97 (EXPRESION -> Booleano .)
    por             reduce using rule 97 (EXPRESION -> Booleano .)
    dividido        reduce using rule 97 (EXPRESION -> Booleano .)
    modulo          reduce using rule 97 (EXPRESION -> Booleano .)
    menorQue        reduce using rule 97 (EXPRESION -> Booleano .)
    mayorQue        reduce using rule 97 (EXPRESION -> Booleano .)
    menorIgual      reduce using rule 97 (EXPRESION -> Booleano .)
    mayorIgual      reduce using rule 97 (EXPRESION -> Booleano .)
    dobleIgual      reduce using rule 97 (EXPRESION -> Booleano .)
    diferenteQue    reduce using rule 97 (EXPRESION -> Booleano .)
    And             reduce using rule 97 (EXPRESION -> Booleano .)
    Or              reduce using rule 97 (EXPRESION -> Booleano .)
    AS              reduce using rule 97 (EXPRESION -> Booleano .)
    punto           reduce using rule 97 (EXPRESION -> Booleano .)
    llaveA          reduce using rule 97 (EXPRESION -> Booleano .)
    ptComa          reduce using rule 97 (EXPRESION -> Booleano .)
    CorC            reduce using rule 97 (EXPRESION -> Booleano .)
    ParC            reduce using rule 97 (EXPRESION -> Booleano .)
    Coma            reduce using rule 97 (EXPRESION -> Booleano .)


state 49

    (98) EXPRESION -> String .

    mas             reduce using rule 98 (EXPRESION -> String .)
    menos           reduce using rule 98 (EXPRESION -> String .)
    por             reduce using rule 98 (EXPRESION -> String .)
    dividido        reduce using rule 98 (EXPRESION -> String .)
    modulo          reduce using rule 98 (EXPRESION -> String .)
    menorQue        reduce using rule 98 (EXPRESION -> String .)
    mayorQue        reduce using rule 98 (EXPRESION -> String .)
    menorIgual      reduce using rule 98 (EXPRESION -> String .)
    mayorIgual      reduce using rule 98 (EXPRESION -> String .)
    dobleIgual      reduce using rule 98 (EXPRESION -> String .)
    diferenteQue    reduce using rule 98 (EXPRESION -> String .)
    And             reduce using rule 98 (EXPRESION -> String .)
    Or              reduce using rule 98 (EXPRESION -> String .)
    AS              reduce using rule 98 (EXPRESION -> String .)
    punto           reduce using rule 98 (EXPRESION -> String .)
    llaveA          reduce using rule 98 (EXPRESION -> String .)
    ptComa          reduce using rule 98 (EXPRESION -> String .)
    CorC            reduce using rule 98 (EXPRESION -> String .)
    ParC            reduce using rule 98 (EXPRESION -> String .)
    Coma            reduce using rule 98 (EXPRESION -> String .)


state 50

    (99) EXPRESION -> Char .

    mas             reduce using rule 99 (EXPRESION -> Char .)
    menos           reduce using rule 99 (EXPRESION -> Char .)
    por             reduce using rule 99 (EXPRESION -> Char .)
    dividido        reduce using rule 99 (EXPRESION -> Char .)
    modulo          reduce using rule 99 (EXPRESION -> Char .)
    menorQue        reduce using rule 99 (EXPRESION -> Char .)
    mayorQue        reduce using rule 99 (EXPRESION -> Char .)
    menorIgual      reduce using rule 99 (EXPRESION -> Char .)
    mayorIgual      reduce using rule 99 (EXPRESION -> Char .)
    dobleIgual      reduce using rule 99 (EXPRESION -> Char .)
    diferenteQue    reduce using rule 99 (EXPRESION -> Char .)
    And             reduce using rule 99 (EXPRESION -> Char .)
    Or              reduce using rule 99 (EXPRESION -> Char .)
    AS              reduce using rule 99 (EXPRESION -> Char .)
    punto           reduce using rule 99 (EXPRESION -> Char .)
    llaveA          reduce using rule 99 (EXPRESION -> Char .)
    ptComa          reduce using rule 99 (EXPRESION -> Char .)
    CorC            reduce using rule 99 (EXPRESION -> Char .)
    ParC            reduce using rule 99 (EXPRESION -> Char .)
    Coma            reduce using rule 99 (EXPRESION -> Char .)


state 51

    (64) IMPRIMIR -> PrintLn not . ParA EXPRESION ParC ptComa
    (65) IMPRIMIR -> PrintLn not . ParA String Coma COMASEX ParC ptComa

    ParA            shift and go to state 83


state 52

    (11) DECLARACION -> Let Id igual . EXPRESION ptComa
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 84
    INSERTVEC                      shift and go to state 44

state 53

    (12) DECLARACION -> Let Id dosPuntos . I64 igual EXPRESION ptComa
    (13) DECLARACION -> Let Id dosPuntos . F64 igual EXPRESION ptComa
    (14) DECLARACION -> Let Id dosPuntos . StrA igual EXPRESION ptComa
    (15) DECLARACION -> Let Id dosPuntos . Str igual EXPRESION ptComa
    (16) DECLARACION -> Let Id dosPuntos . Bool igual EXPRESION ptComa
    (17) DECLARACION -> Let Id dosPuntos . CharAux igual EXPRESION ptComa
    (25) DECLARACION -> Let Id dosPuntos . VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (26) DECLARACION -> Let Id dosPuntos . VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (27) DECLARACION -> Let Id dosPuntos . VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (28) DECLARACION -> Let Id dosPuntos . VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (29) DECLARACION -> Let Id dosPuntos . VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (30) DECLARACION -> Let Id dosPuntos . VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (31) DECLARACION -> Let Id dosPuntos . VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (32) DECLARACION -> Let Id dosPuntos . VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (33) DECLARACION -> Let Id dosPuntos . VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (34) DECLARACION -> Let Id dosPuntos . VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (35) DECLARACION -> Let Id dosPuntos . VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (36) DECLARACION -> Let Id dosPuntos . VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    I64             shift and go to state 85
    F64             shift and go to state 86
    StrA            shift and go to state 87
    Str             shift and go to state 88
    Bool            shift and go to state 89
    CharAux         shift and go to state 90
    VEC             shift and go to state 91


state 54

    (18) DECLARACION -> Let Mut Id . igual EXPRESION ptComa
    (19) DECLARACION -> Let Mut Id . dosPuntos I64 igual EXPRESION ptComa
    (20) DECLARACION -> Let Mut Id . dosPuntos F64 igual EXPRESION ptComa
    (21) DECLARACION -> Let Mut Id . dosPuntos StrA igual EXPRESION ptComa
    (22) DECLARACION -> Let Mut Id . dosPuntos Str igual EXPRESION ptComa
    (23) DECLARACION -> Let Mut Id . dosPuntos Bool igual EXPRESION ptComa
    (24) DECLARACION -> Let Mut Id . dosPuntos CharAux igual EXPRESION ptComa
    (37) DECLARACION -> Let Mut Id . dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (38) DECLARACION -> Let Mut Id . dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (39) DECLARACION -> Let Mut Id . dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (40) DECLARACION -> Let Mut Id . dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (41) DECLARACION -> Let Mut Id . dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (42) DECLARACION -> Let Mut Id . dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (43) DECLARACION -> Let Mut Id . dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (44) DECLARACION -> Let Mut Id . dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (45) DECLARACION -> Let Mut Id . dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (46) DECLARACION -> Let Mut Id . dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (47) DECLARACION -> Let Mut Id . dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (48) DECLARACION -> Let Mut Id . dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 92
    dosPuntos       shift and go to state 93


state 55

    (57) ASIGNACION -> Id igual EXPRESION . ptComa
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    ptComa          shift and go to state 94
    mas             shift and go to state 60
    menos           shift and go to state 61
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64
    menorQue        shift and go to state 65
    mayorQue        shift and go to state 66
    menorIgual      shift and go to state 67
    mayorIgual      shift and go to state 68
    dobleIgual      shift and go to state 69
    diferenteQue    shift and go to state 70
    And             shift and go to state 71
    Or              shift and go to state 72
    AS              shift and go to state 73
    punto           shift and go to state 74


state 56

    (58) ASIGNACION -> Id CorA EXPRESION . CorC igual EXPRESION ptComa
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    CorC            shift and go to state 95
    mas             shift and go to state 60
    menos           shift and go to state 61
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64
    menorQue        shift and go to state 65
    mayorQue        shift and go to state 66
    menorIgual      shift and go to state 67
    mayorIgual      shift and go to state 68
    dobleIgual      shift and go to state 69
    diferenteQue    shift and go to state 70
    And             shift and go to state 71
    Or              shift and go to state 72
    AS              shift and go to state 73
    punto           shift and go to state 74


state 57

    (60) PUSH -> Id punto Push . ParA EXPRESION ParC ptComa

    ParA            shift and go to state 96


state 58

    (62) INSERTVEC -> Id punto Insert . ParA EXPRESION Coma EXPRESION ParC ptComa

    ParA            shift and go to state 97


state 59

    (50) IF -> If EXPRESION BLOQUE . ELSEIF ELSE
    (51) ELSEIF -> . ELSEIF Else If EXPRESION BLOQUE
    (52) ELSEIF -> . empty
    (102) empty -> .

    Else            reduce using rule 102 (empty -> .)
    llaveC          reduce using rule 102 (empty -> .)
    Let             reduce using rule 102 (empty -> .)
    If              reduce using rule 102 (empty -> .)
    Id              reduce using rule 102 (empty -> .)
    PrintLn         reduce using rule 102 (empty -> .)

    ELSEIF                         shift and go to state 98
    empty                          shift and go to state 99

state 60

    (68) EXPRESION -> EXPRESION mas . EXPRESION
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 100
    INSERTVEC                      shift and go to state 44

state 61

    (69) EXPRESION -> EXPRESION menos . EXPRESION
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 101
    INSERTVEC                      shift and go to state 44

state 62

    (70) EXPRESION -> EXPRESION por . EXPRESION
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 102
    INSERTVEC                      shift and go to state 44

state 63

    (71) EXPRESION -> EXPRESION dividido . EXPRESION
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 103
    INSERTVEC                      shift and go to state 44

state 64

    (72) EXPRESION -> EXPRESION modulo . EXPRESION
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 104
    INSERTVEC                      shift and go to state 44

state 65

    (77) EXPRESION -> EXPRESION menorQue . EXPRESION
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 105
    INSERTVEC                      shift and go to state 44

state 66

    (78) EXPRESION -> EXPRESION mayorQue . EXPRESION
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 106
    INSERTVEC                      shift and go to state 44

state 67

    (79) EXPRESION -> EXPRESION menorIgual . EXPRESION
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 107
    INSERTVEC                      shift and go to state 44

state 68

    (80) EXPRESION -> EXPRESION mayorIgual . EXPRESION
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 108
    INSERTVEC                      shift and go to state 44

state 69

    (81) EXPRESION -> EXPRESION dobleIgual . EXPRESION
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 109
    INSERTVEC                      shift and go to state 44

state 70

    (82) EXPRESION -> EXPRESION diferenteQue . EXPRESION
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 110
    INSERTVEC                      shift and go to state 44

state 71

    (83) EXPRESION -> EXPRESION And . EXPRESION
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 111
    INSERTVEC                      shift and go to state 44

state 72

    (84) EXPRESION -> EXPRESION Or . EXPRESION
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 112
    INSERTVEC                      shift and go to state 44

state 73

    (86) EXPRESION -> EXPRESION AS . I64
    (87) EXPRESION -> EXPRESION AS . F64

    I64             shift and go to state 113
    F64             shift and go to state 114


state 74

    (88) EXPRESION -> EXPRESION punto . To_string ParA ParC
    (89) EXPRESION -> EXPRESION punto . Abs ParA ParC
    (90) EXPRESION -> EXPRESION punto . Sqrt ParA ParC

    To_string       shift and go to state 115
    Abs             shift and go to state 116
    Sqrt            shift and go to state 117


state 75

    (73) EXPRESION -> menos EXPRESION .
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    mas             reduce using rule 73 (EXPRESION -> menos EXPRESION .)
    menos           reduce using rule 73 (EXPRESION -> menos EXPRESION .)
    por             reduce using rule 73 (EXPRESION -> menos EXPRESION .)
    dividido        reduce using rule 73 (EXPRESION -> menos EXPRESION .)
    modulo          reduce using rule 73 (EXPRESION -> menos EXPRESION .)
    menorQue        reduce using rule 73 (EXPRESION -> menos EXPRESION .)
    mayorQue        reduce using rule 73 (EXPRESION -> menos EXPRESION .)
    menorIgual      reduce using rule 73 (EXPRESION -> menos EXPRESION .)
    mayorIgual      reduce using rule 73 (EXPRESION -> menos EXPRESION .)
    dobleIgual      reduce using rule 73 (EXPRESION -> menos EXPRESION .)
    diferenteQue    reduce using rule 73 (EXPRESION -> menos EXPRESION .)
    And             reduce using rule 73 (EXPRESION -> menos EXPRESION .)
    Or              reduce using rule 73 (EXPRESION -> menos EXPRESION .)
    AS              reduce using rule 73 (EXPRESION -> menos EXPRESION .)
    punto           reduce using rule 73 (EXPRESION -> menos EXPRESION .)
    llaveA          reduce using rule 73 (EXPRESION -> menos EXPRESION .)
    ptComa          reduce using rule 73 (EXPRESION -> menos EXPRESION .)
    CorC            reduce using rule 73 (EXPRESION -> menos EXPRESION .)
    ParC            reduce using rule 73 (EXPRESION -> menos EXPRESION .)
    Coma            reduce using rule 73 (EXPRESION -> menos EXPRESION .)

  ! mas             [ shift and go to state 60 ]
  ! menos           [ shift and go to state 61 ]
  ! por             [ shift and go to state 62 ]
  ! dividido        [ shift and go to state 63 ]
  ! modulo          [ shift and go to state 64 ]
  ! menorQue        [ shift and go to state 65 ]
  ! mayorQue        [ shift and go to state 66 ]
  ! menorIgual      [ shift and go to state 67 ]
  ! mayorIgual      [ shift and go to state 68 ]
  ! dobleIgual      [ shift and go to state 69 ]
  ! diferenteQue    [ shift and go to state 70 ]
  ! And             [ shift and go to state 71 ]
  ! Or              [ shift and go to state 72 ]
  ! AS              [ shift and go to state 73 ]
  ! punto           [ shift and go to state 74 ]


state 76

    (74) EXPRESION -> ParA EXPRESION . ParC
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    ParC            shift and go to state 118
    mas             shift and go to state 60
    menos           shift and go to state 61
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64
    menorQue        shift and go to state 65
    mayorQue        shift and go to state 66
    menorIgual      shift and go to state 67
    mayorIgual      shift and go to state 68
    dobleIgual      shift and go to state 69
    diferenteQue    shift and go to state 70
    And             shift and go to state 71
    Or              shift and go to state 72
    AS              shift and go to state 73
    punto           shift and go to state 74


state 77

    (75) EXPRESION -> I64 dosPuntos . dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC

    dosPuntos       shift and go to state 119


state 78

    (76) EXPRESION -> F64 dosPuntos . dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC

    dosPuntos       shift and go to state 120


state 79

    (85) EXPRESION -> not EXPRESION .
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    mas             reduce using rule 85 (EXPRESION -> not EXPRESION .)
    menos           reduce using rule 85 (EXPRESION -> not EXPRESION .)
    por             reduce using rule 85 (EXPRESION -> not EXPRESION .)
    dividido        reduce using rule 85 (EXPRESION -> not EXPRESION .)
    modulo          reduce using rule 85 (EXPRESION -> not EXPRESION .)
    menorQue        reduce using rule 85 (EXPRESION -> not EXPRESION .)
    mayorQue        reduce using rule 85 (EXPRESION -> not EXPRESION .)
    menorIgual      reduce using rule 85 (EXPRESION -> not EXPRESION .)
    mayorIgual      reduce using rule 85 (EXPRESION -> not EXPRESION .)
    dobleIgual      reduce using rule 85 (EXPRESION -> not EXPRESION .)
    diferenteQue    reduce using rule 85 (EXPRESION -> not EXPRESION .)
    And             reduce using rule 85 (EXPRESION -> not EXPRESION .)
    Or              reduce using rule 85 (EXPRESION -> not EXPRESION .)
    AS              reduce using rule 85 (EXPRESION -> not EXPRESION .)
    punto           reduce using rule 85 (EXPRESION -> not EXPRESION .)
    llaveA          reduce using rule 85 (EXPRESION -> not EXPRESION .)
    ptComa          reduce using rule 85 (EXPRESION -> not EXPRESION .)
    CorC            reduce using rule 85 (EXPRESION -> not EXPRESION .)
    ParC            reduce using rule 85 (EXPRESION -> not EXPRESION .)
    Coma            reduce using rule 85 (EXPRESION -> not EXPRESION .)

  ! mas             [ shift and go to state 60 ]
  ! menos           [ shift and go to state 61 ]
  ! por             [ shift and go to state 62 ]
  ! dividido        [ shift and go to state 63 ]
  ! modulo          [ shift and go to state 64 ]
  ! menorQue        [ shift and go to state 65 ]
  ! mayorQue        [ shift and go to state 66 ]
  ! menorIgual      [ shift and go to state 67 ]
  ! mayorIgual      [ shift and go to state 68 ]
  ! dobleIgual      [ shift and go to state 69 ]
  ! diferenteQue    [ shift and go to state 70 ]
  ! And             [ shift and go to state 71 ]
  ! Or              [ shift and go to state 72 ]
  ! AS              [ shift and go to state 73 ]
  ! punto           [ shift and go to state 74 ]


state 80

    (91) EXPRESION -> vec not . CorA COMASEX CorC
    (92) EXPRESION -> vec not . CorA EXPRESION ptComa EXPRESION CorC

    CorA            shift and go to state 121


state 81

    (94) EXPRESION -> Id punto . Remove ParA EXPRESION ParC
    (62) INSERTVEC -> Id punto . Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    Remove          shift and go to state 122
    Insert          shift and go to state 58


state 82

    (101) EXPRESION -> Id CorA . EXPRESION CorC
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 123
    INSERTVEC                      shift and go to state 44

state 83

    (64) IMPRIMIR -> PrintLn not ParA . EXPRESION ParC ptComa
    (65) IMPRIMIR -> PrintLn not ParA . String Coma COMASEX ParC ptComa
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    String          shift and go to state 125
    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 124
    INSERTVEC                      shift and go to state 44

state 84

    (11) DECLARACION -> Let Id igual EXPRESION . ptComa
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    ptComa          shift and go to state 126
    mas             shift and go to state 60
    menos           shift and go to state 61
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64
    menorQue        shift and go to state 65
    mayorQue        shift and go to state 66
    menorIgual      shift and go to state 67
    mayorIgual      shift and go to state 68
    dobleIgual      shift and go to state 69
    diferenteQue    shift and go to state 70
    And             shift and go to state 71
    Or              shift and go to state 72
    AS              shift and go to state 73
    punto           shift and go to state 74


state 85

    (12) DECLARACION -> Let Id dosPuntos I64 . igual EXPRESION ptComa

    igual           shift and go to state 127


state 86

    (13) DECLARACION -> Let Id dosPuntos F64 . igual EXPRESION ptComa

    igual           shift and go to state 128


state 87

    (14) DECLARACION -> Let Id dosPuntos StrA . igual EXPRESION ptComa

    igual           shift and go to state 129


state 88

    (15) DECLARACION -> Let Id dosPuntos Str . igual EXPRESION ptComa

    igual           shift and go to state 130


state 89

    (16) DECLARACION -> Let Id dosPuntos Bool . igual EXPRESION ptComa

    igual           shift and go to state 131


state 90

    (17) DECLARACION -> Let Id dosPuntos CharAux . igual EXPRESION ptComa

    igual           shift and go to state 132


state 91

    (25) DECLARACION -> Let Id dosPuntos VEC . menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (26) DECLARACION -> Let Id dosPuntos VEC . menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (27) DECLARACION -> Let Id dosPuntos VEC . menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (28) DECLARACION -> Let Id dosPuntos VEC . menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (29) DECLARACION -> Let Id dosPuntos VEC . menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (30) DECLARACION -> Let Id dosPuntos VEC . menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (31) DECLARACION -> Let Id dosPuntos VEC . menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (32) DECLARACION -> Let Id dosPuntos VEC . menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (33) DECLARACION -> Let Id dosPuntos VEC . menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (34) DECLARACION -> Let Id dosPuntos VEC . menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (35) DECLARACION -> Let Id dosPuntos VEC . menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (36) DECLARACION -> Let Id dosPuntos VEC . menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    menorQue        shift and go to state 133


state 92

    (18) DECLARACION -> Let Mut Id igual . EXPRESION ptComa
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 134
    INSERTVEC                      shift and go to state 44

state 93

    (19) DECLARACION -> Let Mut Id dosPuntos . I64 igual EXPRESION ptComa
    (20) DECLARACION -> Let Mut Id dosPuntos . F64 igual EXPRESION ptComa
    (21) DECLARACION -> Let Mut Id dosPuntos . StrA igual EXPRESION ptComa
    (22) DECLARACION -> Let Mut Id dosPuntos . Str igual EXPRESION ptComa
    (23) DECLARACION -> Let Mut Id dosPuntos . Bool igual EXPRESION ptComa
    (24) DECLARACION -> Let Mut Id dosPuntos . CharAux igual EXPRESION ptComa
    (37) DECLARACION -> Let Mut Id dosPuntos . VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (38) DECLARACION -> Let Mut Id dosPuntos . VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (39) DECLARACION -> Let Mut Id dosPuntos . VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (40) DECLARACION -> Let Mut Id dosPuntos . VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (41) DECLARACION -> Let Mut Id dosPuntos . VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (42) DECLARACION -> Let Mut Id dosPuntos . VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (43) DECLARACION -> Let Mut Id dosPuntos . VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (44) DECLARACION -> Let Mut Id dosPuntos . VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (45) DECLARACION -> Let Mut Id dosPuntos . VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (46) DECLARACION -> Let Mut Id dosPuntos . VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (47) DECLARACION -> Let Mut Id dosPuntos . VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (48) DECLARACION -> Let Mut Id dosPuntos . VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    I64             shift and go to state 135
    F64             shift and go to state 136
    StrA            shift and go to state 137
    Str             shift and go to state 138
    Bool            shift and go to state 139
    CharAux         shift and go to state 140
    VEC             shift and go to state 141


state 94

    (57) ASIGNACION -> Id igual EXPRESION ptComa .

    llaveC          reduce using rule 57 (ASIGNACION -> Id igual EXPRESION ptComa .)
    Let             reduce using rule 57 (ASIGNACION -> Id igual EXPRESION ptComa .)
    If              reduce using rule 57 (ASIGNACION -> Id igual EXPRESION ptComa .)
    Id              reduce using rule 57 (ASIGNACION -> Id igual EXPRESION ptComa .)
    PrintLn         reduce using rule 57 (ASIGNACION -> Id igual EXPRESION ptComa .)


state 95

    (58) ASIGNACION -> Id CorA EXPRESION CorC . igual EXPRESION ptComa

    igual           shift and go to state 142


state 96

    (60) PUSH -> Id punto Push ParA . EXPRESION ParC ptComa
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 143
    INSERTVEC                      shift and go to state 44

state 97

    (62) INSERTVEC -> Id punto Insert ParA . EXPRESION Coma EXPRESION ParC ptComa
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 144
    INSERTVEC                      shift and go to state 44

state 98

    (50) IF -> If EXPRESION BLOQUE ELSEIF . ELSE
    (51) ELSEIF -> ELSEIF . Else If EXPRESION BLOQUE
    (53) ELSE -> . Else BLOQUE
    (54) ELSE -> . empty
    (102) empty -> .

    Else            shift and go to state 146
    llaveC          reduce using rule 102 (empty -> .)
    Let             reduce using rule 102 (empty -> .)
    If              reduce using rule 102 (empty -> .)
    Id              reduce using rule 102 (empty -> .)
    PrintLn         reduce using rule 102 (empty -> .)

    ELSE                           shift and go to state 145
    empty                          shift and go to state 147

state 99

    (52) ELSEIF -> empty .

    Else            reduce using rule 52 (ELSEIF -> empty .)
    llaveC          reduce using rule 52 (ELSEIF -> empty .)
    Let             reduce using rule 52 (ELSEIF -> empty .)
    If              reduce using rule 52 (ELSEIF -> empty .)
    Id              reduce using rule 52 (ELSEIF -> empty .)
    PrintLn         reduce using rule 52 (ELSEIF -> empty .)


state 100

    (68) EXPRESION -> EXPRESION mas EXPRESION .
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    mas             reduce using rule 68 (EXPRESION -> EXPRESION mas EXPRESION .)
    menos           reduce using rule 68 (EXPRESION -> EXPRESION mas EXPRESION .)
    And             reduce using rule 68 (EXPRESION -> EXPRESION mas EXPRESION .)
    Or              reduce using rule 68 (EXPRESION -> EXPRESION mas EXPRESION .)
    AS              reduce using rule 68 (EXPRESION -> EXPRESION mas EXPRESION .)
    punto           reduce using rule 68 (EXPRESION -> EXPRESION mas EXPRESION .)
    llaveA          reduce using rule 68 (EXPRESION -> EXPRESION mas EXPRESION .)
    ptComa          reduce using rule 68 (EXPRESION -> EXPRESION mas EXPRESION .)
    CorC            reduce using rule 68 (EXPRESION -> EXPRESION mas EXPRESION .)
    ParC            reduce using rule 68 (EXPRESION -> EXPRESION mas EXPRESION .)
    Coma            reduce using rule 68 (EXPRESION -> EXPRESION mas EXPRESION .)
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64
    menorQue        shift and go to state 65
    mayorQue        shift and go to state 66
    menorIgual      shift and go to state 67
    mayorIgual      shift and go to state 68
    dobleIgual      shift and go to state 69
    diferenteQue    shift and go to state 70

  ! por             [ reduce using rule 68 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! dividido        [ reduce using rule 68 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! modulo          [ reduce using rule 68 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! menorQue        [ reduce using rule 68 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! mayorQue        [ reduce using rule 68 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! menorIgual      [ reduce using rule 68 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! mayorIgual      [ reduce using rule 68 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! dobleIgual      [ reduce using rule 68 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! diferenteQue    [ reduce using rule 68 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! mas             [ shift and go to state 60 ]
  ! menos           [ shift and go to state 61 ]
  ! And             [ shift and go to state 71 ]
  ! Or              [ shift and go to state 72 ]
  ! AS              [ shift and go to state 73 ]
  ! punto           [ shift and go to state 74 ]


state 101

    (69) EXPRESION -> EXPRESION menos EXPRESION .
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    mas             reduce using rule 69 (EXPRESION -> EXPRESION menos EXPRESION .)
    menos           reduce using rule 69 (EXPRESION -> EXPRESION menos EXPRESION .)
    And             reduce using rule 69 (EXPRESION -> EXPRESION menos EXPRESION .)
    Or              reduce using rule 69 (EXPRESION -> EXPRESION menos EXPRESION .)
    AS              reduce using rule 69 (EXPRESION -> EXPRESION menos EXPRESION .)
    punto           reduce using rule 69 (EXPRESION -> EXPRESION menos EXPRESION .)
    llaveA          reduce using rule 69 (EXPRESION -> EXPRESION menos EXPRESION .)
    ptComa          reduce using rule 69 (EXPRESION -> EXPRESION menos EXPRESION .)
    CorC            reduce using rule 69 (EXPRESION -> EXPRESION menos EXPRESION .)
    ParC            reduce using rule 69 (EXPRESION -> EXPRESION menos EXPRESION .)
    Coma            reduce using rule 69 (EXPRESION -> EXPRESION menos EXPRESION .)
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64
    menorQue        shift and go to state 65
    mayorQue        shift and go to state 66
    menorIgual      shift and go to state 67
    mayorIgual      shift and go to state 68
    dobleIgual      shift and go to state 69
    diferenteQue    shift and go to state 70

  ! por             [ reduce using rule 69 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! dividido        [ reduce using rule 69 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! modulo          [ reduce using rule 69 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! menorQue        [ reduce using rule 69 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! mayorQue        [ reduce using rule 69 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! menorIgual      [ reduce using rule 69 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! mayorIgual      [ reduce using rule 69 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! dobleIgual      [ reduce using rule 69 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! diferenteQue    [ reduce using rule 69 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! mas             [ shift and go to state 60 ]
  ! menos           [ shift and go to state 61 ]
  ! And             [ shift and go to state 71 ]
  ! Or              [ shift and go to state 72 ]
  ! AS              [ shift and go to state 73 ]
  ! punto           [ shift and go to state 74 ]


state 102

    (70) EXPRESION -> EXPRESION por EXPRESION .
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    mas             reduce using rule 70 (EXPRESION -> EXPRESION por EXPRESION .)
    menos           reduce using rule 70 (EXPRESION -> EXPRESION por EXPRESION .)
    por             reduce using rule 70 (EXPRESION -> EXPRESION por EXPRESION .)
    dividido        reduce using rule 70 (EXPRESION -> EXPRESION por EXPRESION .)
    modulo          reduce using rule 70 (EXPRESION -> EXPRESION por EXPRESION .)
    menorQue        reduce using rule 70 (EXPRESION -> EXPRESION por EXPRESION .)
    mayorQue        reduce using rule 70 (EXPRESION -> EXPRESION por EXPRESION .)
    menorIgual      reduce using rule 70 (EXPRESION -> EXPRESION por EXPRESION .)
    mayorIgual      reduce using rule 70 (EXPRESION -> EXPRESION por EXPRESION .)
    dobleIgual      reduce using rule 70 (EXPRESION -> EXPRESION por EXPRESION .)
    diferenteQue    reduce using rule 70 (EXPRESION -> EXPRESION por EXPRESION .)
    And             reduce using rule 70 (EXPRESION -> EXPRESION por EXPRESION .)
    Or              reduce using rule 70 (EXPRESION -> EXPRESION por EXPRESION .)
    AS              reduce using rule 70 (EXPRESION -> EXPRESION por EXPRESION .)
    punto           reduce using rule 70 (EXPRESION -> EXPRESION por EXPRESION .)
    llaveA          reduce using rule 70 (EXPRESION -> EXPRESION por EXPRESION .)
    ptComa          reduce using rule 70 (EXPRESION -> EXPRESION por EXPRESION .)
    CorC            reduce using rule 70 (EXPRESION -> EXPRESION por EXPRESION .)
    ParC            reduce using rule 70 (EXPRESION -> EXPRESION por EXPRESION .)
    Coma            reduce using rule 70 (EXPRESION -> EXPRESION por EXPRESION .)

  ! mas             [ shift and go to state 60 ]
  ! menos           [ shift and go to state 61 ]
  ! por             [ shift and go to state 62 ]
  ! dividido        [ shift and go to state 63 ]
  ! modulo          [ shift and go to state 64 ]
  ! menorQue        [ shift and go to state 65 ]
  ! mayorQue        [ shift and go to state 66 ]
  ! menorIgual      [ shift and go to state 67 ]
  ! mayorIgual      [ shift and go to state 68 ]
  ! dobleIgual      [ shift and go to state 69 ]
  ! diferenteQue    [ shift and go to state 70 ]
  ! And             [ shift and go to state 71 ]
  ! Or              [ shift and go to state 72 ]
  ! AS              [ shift and go to state 73 ]
  ! punto           [ shift and go to state 74 ]


state 103

    (71) EXPRESION -> EXPRESION dividido EXPRESION .
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    mas             reduce using rule 71 (EXPRESION -> EXPRESION dividido EXPRESION .)
    menos           reduce using rule 71 (EXPRESION -> EXPRESION dividido EXPRESION .)
    por             reduce using rule 71 (EXPRESION -> EXPRESION dividido EXPRESION .)
    dividido        reduce using rule 71 (EXPRESION -> EXPRESION dividido EXPRESION .)
    modulo          reduce using rule 71 (EXPRESION -> EXPRESION dividido EXPRESION .)
    menorQue        reduce using rule 71 (EXPRESION -> EXPRESION dividido EXPRESION .)
    mayorQue        reduce using rule 71 (EXPRESION -> EXPRESION dividido EXPRESION .)
    menorIgual      reduce using rule 71 (EXPRESION -> EXPRESION dividido EXPRESION .)
    mayorIgual      reduce using rule 71 (EXPRESION -> EXPRESION dividido EXPRESION .)
    dobleIgual      reduce using rule 71 (EXPRESION -> EXPRESION dividido EXPRESION .)
    diferenteQue    reduce using rule 71 (EXPRESION -> EXPRESION dividido EXPRESION .)
    And             reduce using rule 71 (EXPRESION -> EXPRESION dividido EXPRESION .)
    Or              reduce using rule 71 (EXPRESION -> EXPRESION dividido EXPRESION .)
    AS              reduce using rule 71 (EXPRESION -> EXPRESION dividido EXPRESION .)
    punto           reduce using rule 71 (EXPRESION -> EXPRESION dividido EXPRESION .)
    llaveA          reduce using rule 71 (EXPRESION -> EXPRESION dividido EXPRESION .)
    ptComa          reduce using rule 71 (EXPRESION -> EXPRESION dividido EXPRESION .)
    CorC            reduce using rule 71 (EXPRESION -> EXPRESION dividido EXPRESION .)
    ParC            reduce using rule 71 (EXPRESION -> EXPRESION dividido EXPRESION .)
    Coma            reduce using rule 71 (EXPRESION -> EXPRESION dividido EXPRESION .)

  ! mas             [ shift and go to state 60 ]
  ! menos           [ shift and go to state 61 ]
  ! por             [ shift and go to state 62 ]
  ! dividido        [ shift and go to state 63 ]
  ! modulo          [ shift and go to state 64 ]
  ! menorQue        [ shift and go to state 65 ]
  ! mayorQue        [ shift and go to state 66 ]
  ! menorIgual      [ shift and go to state 67 ]
  ! mayorIgual      [ shift and go to state 68 ]
  ! dobleIgual      [ shift and go to state 69 ]
  ! diferenteQue    [ shift and go to state 70 ]
  ! And             [ shift and go to state 71 ]
  ! Or              [ shift and go to state 72 ]
  ! AS              [ shift and go to state 73 ]
  ! punto           [ shift and go to state 74 ]


state 104

    (72) EXPRESION -> EXPRESION modulo EXPRESION .
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    mas             reduce using rule 72 (EXPRESION -> EXPRESION modulo EXPRESION .)
    menos           reduce using rule 72 (EXPRESION -> EXPRESION modulo EXPRESION .)
    por             reduce using rule 72 (EXPRESION -> EXPRESION modulo EXPRESION .)
    dividido        reduce using rule 72 (EXPRESION -> EXPRESION modulo EXPRESION .)
    modulo          reduce using rule 72 (EXPRESION -> EXPRESION modulo EXPRESION .)
    menorQue        reduce using rule 72 (EXPRESION -> EXPRESION modulo EXPRESION .)
    mayorQue        reduce using rule 72 (EXPRESION -> EXPRESION modulo EXPRESION .)
    menorIgual      reduce using rule 72 (EXPRESION -> EXPRESION modulo EXPRESION .)
    mayorIgual      reduce using rule 72 (EXPRESION -> EXPRESION modulo EXPRESION .)
    dobleIgual      reduce using rule 72 (EXPRESION -> EXPRESION modulo EXPRESION .)
    diferenteQue    reduce using rule 72 (EXPRESION -> EXPRESION modulo EXPRESION .)
    And             reduce using rule 72 (EXPRESION -> EXPRESION modulo EXPRESION .)
    Or              reduce using rule 72 (EXPRESION -> EXPRESION modulo EXPRESION .)
    AS              reduce using rule 72 (EXPRESION -> EXPRESION modulo EXPRESION .)
    punto           reduce using rule 72 (EXPRESION -> EXPRESION modulo EXPRESION .)
    llaveA          reduce using rule 72 (EXPRESION -> EXPRESION modulo EXPRESION .)
    ptComa          reduce using rule 72 (EXPRESION -> EXPRESION modulo EXPRESION .)
    CorC            reduce using rule 72 (EXPRESION -> EXPRESION modulo EXPRESION .)
    ParC            reduce using rule 72 (EXPRESION -> EXPRESION modulo EXPRESION .)
    Coma            reduce using rule 72 (EXPRESION -> EXPRESION modulo EXPRESION .)

  ! mas             [ shift and go to state 60 ]
  ! menos           [ shift and go to state 61 ]
  ! por             [ shift and go to state 62 ]
  ! dividido        [ shift and go to state 63 ]
  ! modulo          [ shift and go to state 64 ]
  ! menorQue        [ shift and go to state 65 ]
  ! mayorQue        [ shift and go to state 66 ]
  ! menorIgual      [ shift and go to state 67 ]
  ! mayorIgual      [ shift and go to state 68 ]
  ! dobleIgual      [ shift and go to state 69 ]
  ! diferenteQue    [ shift and go to state 70 ]
  ! And             [ shift and go to state 71 ]
  ! Or              [ shift and go to state 72 ]
  ! AS              [ shift and go to state 73 ]
  ! punto           [ shift and go to state 74 ]


state 105

    (77) EXPRESION -> EXPRESION menorQue EXPRESION .
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    mas             reduce using rule 77 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    menos           reduce using rule 77 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    menorQue        reduce using rule 77 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    mayorQue        reduce using rule 77 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    menorIgual      reduce using rule 77 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    mayorIgual      reduce using rule 77 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    dobleIgual      reduce using rule 77 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    diferenteQue    reduce using rule 77 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    And             reduce using rule 77 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    Or              reduce using rule 77 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    AS              reduce using rule 77 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    punto           reduce using rule 77 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    llaveA          reduce using rule 77 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    ptComa          reduce using rule 77 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    CorC            reduce using rule 77 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    ParC            reduce using rule 77 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    Coma            reduce using rule 77 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64

  ! por             [ reduce using rule 77 (EXPRESION -> EXPRESION menorQue EXPRESION .) ]
  ! dividido        [ reduce using rule 77 (EXPRESION -> EXPRESION menorQue EXPRESION .) ]
  ! modulo          [ reduce using rule 77 (EXPRESION -> EXPRESION menorQue EXPRESION .) ]
  ! mas             [ shift and go to state 60 ]
  ! menos           [ shift and go to state 61 ]
  ! menorQue        [ shift and go to state 65 ]
  ! mayorQue        [ shift and go to state 66 ]
  ! menorIgual      [ shift and go to state 67 ]
  ! mayorIgual      [ shift and go to state 68 ]
  ! dobleIgual      [ shift and go to state 69 ]
  ! diferenteQue    [ shift and go to state 70 ]
  ! And             [ shift and go to state 71 ]
  ! Or              [ shift and go to state 72 ]
  ! AS              [ shift and go to state 73 ]
  ! punto           [ shift and go to state 74 ]


state 106

    (78) EXPRESION -> EXPRESION mayorQue EXPRESION .
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    mas             reduce using rule 78 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    menos           reduce using rule 78 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    menorQue        reduce using rule 78 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    mayorQue        reduce using rule 78 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    menorIgual      reduce using rule 78 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    mayorIgual      reduce using rule 78 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    dobleIgual      reduce using rule 78 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    diferenteQue    reduce using rule 78 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    And             reduce using rule 78 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    Or              reduce using rule 78 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    AS              reduce using rule 78 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    punto           reduce using rule 78 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    llaveA          reduce using rule 78 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    ptComa          reduce using rule 78 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    CorC            reduce using rule 78 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    ParC            reduce using rule 78 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    Coma            reduce using rule 78 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64

  ! por             [ reduce using rule 78 (EXPRESION -> EXPRESION mayorQue EXPRESION .) ]
  ! dividido        [ reduce using rule 78 (EXPRESION -> EXPRESION mayorQue EXPRESION .) ]
  ! modulo          [ reduce using rule 78 (EXPRESION -> EXPRESION mayorQue EXPRESION .) ]
  ! mas             [ shift and go to state 60 ]
  ! menos           [ shift and go to state 61 ]
  ! menorQue        [ shift and go to state 65 ]
  ! mayorQue        [ shift and go to state 66 ]
  ! menorIgual      [ shift and go to state 67 ]
  ! mayorIgual      [ shift and go to state 68 ]
  ! dobleIgual      [ shift and go to state 69 ]
  ! diferenteQue    [ shift and go to state 70 ]
  ! And             [ shift and go to state 71 ]
  ! Or              [ shift and go to state 72 ]
  ! AS              [ shift and go to state 73 ]
  ! punto           [ shift and go to state 74 ]


state 107

    (79) EXPRESION -> EXPRESION menorIgual EXPRESION .
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    mas             reduce using rule 79 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    menos           reduce using rule 79 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    menorQue        reduce using rule 79 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    mayorQue        reduce using rule 79 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    menorIgual      reduce using rule 79 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    mayorIgual      reduce using rule 79 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    dobleIgual      reduce using rule 79 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    diferenteQue    reduce using rule 79 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    And             reduce using rule 79 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    Or              reduce using rule 79 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    AS              reduce using rule 79 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    punto           reduce using rule 79 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    llaveA          reduce using rule 79 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    ptComa          reduce using rule 79 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    CorC            reduce using rule 79 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    ParC            reduce using rule 79 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    Coma            reduce using rule 79 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64

  ! por             [ reduce using rule 79 (EXPRESION -> EXPRESION menorIgual EXPRESION .) ]
  ! dividido        [ reduce using rule 79 (EXPRESION -> EXPRESION menorIgual EXPRESION .) ]
  ! modulo          [ reduce using rule 79 (EXPRESION -> EXPRESION menorIgual EXPRESION .) ]
  ! mas             [ shift and go to state 60 ]
  ! menos           [ shift and go to state 61 ]
  ! menorQue        [ shift and go to state 65 ]
  ! mayorQue        [ shift and go to state 66 ]
  ! menorIgual      [ shift and go to state 67 ]
  ! mayorIgual      [ shift and go to state 68 ]
  ! dobleIgual      [ shift and go to state 69 ]
  ! diferenteQue    [ shift and go to state 70 ]
  ! And             [ shift and go to state 71 ]
  ! Or              [ shift and go to state 72 ]
  ! AS              [ shift and go to state 73 ]
  ! punto           [ shift and go to state 74 ]


state 108

    (80) EXPRESION -> EXPRESION mayorIgual EXPRESION .
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    mas             reduce using rule 80 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    menos           reduce using rule 80 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    menorQue        reduce using rule 80 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    mayorQue        reduce using rule 80 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    menorIgual      reduce using rule 80 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    mayorIgual      reduce using rule 80 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    dobleIgual      reduce using rule 80 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    diferenteQue    reduce using rule 80 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    And             reduce using rule 80 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    Or              reduce using rule 80 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    AS              reduce using rule 80 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    punto           reduce using rule 80 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    llaveA          reduce using rule 80 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    ptComa          reduce using rule 80 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    CorC            reduce using rule 80 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    ParC            reduce using rule 80 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    Coma            reduce using rule 80 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64

  ! por             [ reduce using rule 80 (EXPRESION -> EXPRESION mayorIgual EXPRESION .) ]
  ! dividido        [ reduce using rule 80 (EXPRESION -> EXPRESION mayorIgual EXPRESION .) ]
  ! modulo          [ reduce using rule 80 (EXPRESION -> EXPRESION mayorIgual EXPRESION .) ]
  ! mas             [ shift and go to state 60 ]
  ! menos           [ shift and go to state 61 ]
  ! menorQue        [ shift and go to state 65 ]
  ! mayorQue        [ shift and go to state 66 ]
  ! menorIgual      [ shift and go to state 67 ]
  ! mayorIgual      [ shift and go to state 68 ]
  ! dobleIgual      [ shift and go to state 69 ]
  ! diferenteQue    [ shift and go to state 70 ]
  ! And             [ shift and go to state 71 ]
  ! Or              [ shift and go to state 72 ]
  ! AS              [ shift and go to state 73 ]
  ! punto           [ shift and go to state 74 ]


state 109

    (81) EXPRESION -> EXPRESION dobleIgual EXPRESION .
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    mas             reduce using rule 81 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    menos           reduce using rule 81 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    menorQue        reduce using rule 81 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    mayorQue        reduce using rule 81 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    menorIgual      reduce using rule 81 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    mayorIgual      reduce using rule 81 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    dobleIgual      reduce using rule 81 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    diferenteQue    reduce using rule 81 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    And             reduce using rule 81 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    Or              reduce using rule 81 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    AS              reduce using rule 81 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    punto           reduce using rule 81 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    llaveA          reduce using rule 81 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    ptComa          reduce using rule 81 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    CorC            reduce using rule 81 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    ParC            reduce using rule 81 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    Coma            reduce using rule 81 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64

  ! por             [ reduce using rule 81 (EXPRESION -> EXPRESION dobleIgual EXPRESION .) ]
  ! dividido        [ reduce using rule 81 (EXPRESION -> EXPRESION dobleIgual EXPRESION .) ]
  ! modulo          [ reduce using rule 81 (EXPRESION -> EXPRESION dobleIgual EXPRESION .) ]
  ! mas             [ shift and go to state 60 ]
  ! menos           [ shift and go to state 61 ]
  ! menorQue        [ shift and go to state 65 ]
  ! mayorQue        [ shift and go to state 66 ]
  ! menorIgual      [ shift and go to state 67 ]
  ! mayorIgual      [ shift and go to state 68 ]
  ! dobleIgual      [ shift and go to state 69 ]
  ! diferenteQue    [ shift and go to state 70 ]
  ! And             [ shift and go to state 71 ]
  ! Or              [ shift and go to state 72 ]
  ! AS              [ shift and go to state 73 ]
  ! punto           [ shift and go to state 74 ]


state 110

    (82) EXPRESION -> EXPRESION diferenteQue EXPRESION .
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    mas             reduce using rule 82 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    menos           reduce using rule 82 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    menorQue        reduce using rule 82 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    mayorQue        reduce using rule 82 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    menorIgual      reduce using rule 82 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    mayorIgual      reduce using rule 82 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    dobleIgual      reduce using rule 82 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    diferenteQue    reduce using rule 82 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    And             reduce using rule 82 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    Or              reduce using rule 82 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    AS              reduce using rule 82 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    punto           reduce using rule 82 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    llaveA          reduce using rule 82 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    ptComa          reduce using rule 82 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    CorC            reduce using rule 82 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    ParC            reduce using rule 82 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    Coma            reduce using rule 82 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64

  ! por             [ reduce using rule 82 (EXPRESION -> EXPRESION diferenteQue EXPRESION .) ]
  ! dividido        [ reduce using rule 82 (EXPRESION -> EXPRESION diferenteQue EXPRESION .) ]
  ! modulo          [ reduce using rule 82 (EXPRESION -> EXPRESION diferenteQue EXPRESION .) ]
  ! mas             [ shift and go to state 60 ]
  ! menos           [ shift and go to state 61 ]
  ! menorQue        [ shift and go to state 65 ]
  ! mayorQue        [ shift and go to state 66 ]
  ! menorIgual      [ shift and go to state 67 ]
  ! mayorIgual      [ shift and go to state 68 ]
  ! dobleIgual      [ shift and go to state 69 ]
  ! diferenteQue    [ shift and go to state 70 ]
  ! And             [ shift and go to state 71 ]
  ! Or              [ shift and go to state 72 ]
  ! AS              [ shift and go to state 73 ]
  ! punto           [ shift and go to state 74 ]


state 111

    (83) EXPRESION -> EXPRESION And EXPRESION .
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    And             reduce using rule 83 (EXPRESION -> EXPRESION And EXPRESION .)
    Or              reduce using rule 83 (EXPRESION -> EXPRESION And EXPRESION .)
    AS              reduce using rule 83 (EXPRESION -> EXPRESION And EXPRESION .)
    punto           reduce using rule 83 (EXPRESION -> EXPRESION And EXPRESION .)
    llaveA          reduce using rule 83 (EXPRESION -> EXPRESION And EXPRESION .)
    ptComa          reduce using rule 83 (EXPRESION -> EXPRESION And EXPRESION .)
    CorC            reduce using rule 83 (EXPRESION -> EXPRESION And EXPRESION .)
    ParC            reduce using rule 83 (EXPRESION -> EXPRESION And EXPRESION .)
    Coma            reduce using rule 83 (EXPRESION -> EXPRESION And EXPRESION .)
    mas             shift and go to state 60
    menos           shift and go to state 61
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64
    menorQue        shift and go to state 65
    mayorQue        shift and go to state 66
    menorIgual      shift and go to state 67
    mayorIgual      shift and go to state 68
    dobleIgual      shift and go to state 69
    diferenteQue    shift and go to state 70

  ! mas             [ reduce using rule 83 (EXPRESION -> EXPRESION And EXPRESION .) ]
  ! menos           [ reduce using rule 83 (EXPRESION -> EXPRESION And EXPRESION .) ]
  ! por             [ reduce using rule 83 (EXPRESION -> EXPRESION And EXPRESION .) ]
  ! dividido        [ reduce using rule 83 (EXPRESION -> EXPRESION And EXPRESION .) ]
  ! modulo          [ reduce using rule 83 (EXPRESION -> EXPRESION And EXPRESION .) ]
  ! menorQue        [ reduce using rule 83 (EXPRESION -> EXPRESION And EXPRESION .) ]
  ! mayorQue        [ reduce using rule 83 (EXPRESION -> EXPRESION And EXPRESION .) ]
  ! menorIgual      [ reduce using rule 83 (EXPRESION -> EXPRESION And EXPRESION .) ]
  ! mayorIgual      [ reduce using rule 83 (EXPRESION -> EXPRESION And EXPRESION .) ]
  ! dobleIgual      [ reduce using rule 83 (EXPRESION -> EXPRESION And EXPRESION .) ]
  ! diferenteQue    [ reduce using rule 83 (EXPRESION -> EXPRESION And EXPRESION .) ]
  ! And             [ shift and go to state 71 ]
  ! Or              [ shift and go to state 72 ]
  ! AS              [ shift and go to state 73 ]
  ! punto           [ shift and go to state 74 ]


state 112

    (84) EXPRESION -> EXPRESION Or EXPRESION .
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    Or              reduce using rule 84 (EXPRESION -> EXPRESION Or EXPRESION .)
    AS              reduce using rule 84 (EXPRESION -> EXPRESION Or EXPRESION .)
    punto           reduce using rule 84 (EXPRESION -> EXPRESION Or EXPRESION .)
    llaveA          reduce using rule 84 (EXPRESION -> EXPRESION Or EXPRESION .)
    ptComa          reduce using rule 84 (EXPRESION -> EXPRESION Or EXPRESION .)
    CorC            reduce using rule 84 (EXPRESION -> EXPRESION Or EXPRESION .)
    ParC            reduce using rule 84 (EXPRESION -> EXPRESION Or EXPRESION .)
    Coma            reduce using rule 84 (EXPRESION -> EXPRESION Or EXPRESION .)
    mas             shift and go to state 60
    menos           shift and go to state 61
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64
    menorQue        shift and go to state 65
    mayorQue        shift and go to state 66
    menorIgual      shift and go to state 67
    mayorIgual      shift and go to state 68
    dobleIgual      shift and go to state 69
    diferenteQue    shift and go to state 70
    And             shift and go to state 71

  ! mas             [ reduce using rule 84 (EXPRESION -> EXPRESION Or EXPRESION .) ]
  ! menos           [ reduce using rule 84 (EXPRESION -> EXPRESION Or EXPRESION .) ]
  ! por             [ reduce using rule 84 (EXPRESION -> EXPRESION Or EXPRESION .) ]
  ! dividido        [ reduce using rule 84 (EXPRESION -> EXPRESION Or EXPRESION .) ]
  ! modulo          [ reduce using rule 84 (EXPRESION -> EXPRESION Or EXPRESION .) ]
  ! menorQue        [ reduce using rule 84 (EXPRESION -> EXPRESION Or EXPRESION .) ]
  ! mayorQue        [ reduce using rule 84 (EXPRESION -> EXPRESION Or EXPRESION .) ]
  ! menorIgual      [ reduce using rule 84 (EXPRESION -> EXPRESION Or EXPRESION .) ]
  ! mayorIgual      [ reduce using rule 84 (EXPRESION -> EXPRESION Or EXPRESION .) ]
  ! dobleIgual      [ reduce using rule 84 (EXPRESION -> EXPRESION Or EXPRESION .) ]
  ! diferenteQue    [ reduce using rule 84 (EXPRESION -> EXPRESION Or EXPRESION .) ]
  ! And             [ reduce using rule 84 (EXPRESION -> EXPRESION Or EXPRESION .) ]
  ! Or              [ shift and go to state 72 ]
  ! AS              [ shift and go to state 73 ]
  ! punto           [ shift and go to state 74 ]


state 113

    (86) EXPRESION -> EXPRESION AS I64 .

    mas             reduce using rule 86 (EXPRESION -> EXPRESION AS I64 .)
    menos           reduce using rule 86 (EXPRESION -> EXPRESION AS I64 .)
    por             reduce using rule 86 (EXPRESION -> EXPRESION AS I64 .)
    dividido        reduce using rule 86 (EXPRESION -> EXPRESION AS I64 .)
    modulo          reduce using rule 86 (EXPRESION -> EXPRESION AS I64 .)
    menorQue        reduce using rule 86 (EXPRESION -> EXPRESION AS I64 .)
    mayorQue        reduce using rule 86 (EXPRESION -> EXPRESION AS I64 .)
    menorIgual      reduce using rule 86 (EXPRESION -> EXPRESION AS I64 .)
    mayorIgual      reduce using rule 86 (EXPRESION -> EXPRESION AS I64 .)
    dobleIgual      reduce using rule 86 (EXPRESION -> EXPRESION AS I64 .)
    diferenteQue    reduce using rule 86 (EXPRESION -> EXPRESION AS I64 .)
    And             reduce using rule 86 (EXPRESION -> EXPRESION AS I64 .)
    Or              reduce using rule 86 (EXPRESION -> EXPRESION AS I64 .)
    AS              reduce using rule 86 (EXPRESION -> EXPRESION AS I64 .)
    punto           reduce using rule 86 (EXPRESION -> EXPRESION AS I64 .)
    llaveA          reduce using rule 86 (EXPRESION -> EXPRESION AS I64 .)
    ptComa          reduce using rule 86 (EXPRESION -> EXPRESION AS I64 .)
    CorC            reduce using rule 86 (EXPRESION -> EXPRESION AS I64 .)
    ParC            reduce using rule 86 (EXPRESION -> EXPRESION AS I64 .)
    Coma            reduce using rule 86 (EXPRESION -> EXPRESION AS I64 .)


state 114

    (87) EXPRESION -> EXPRESION AS F64 .

    mas             reduce using rule 87 (EXPRESION -> EXPRESION AS F64 .)
    menos           reduce using rule 87 (EXPRESION -> EXPRESION AS F64 .)
    por             reduce using rule 87 (EXPRESION -> EXPRESION AS F64 .)
    dividido        reduce using rule 87 (EXPRESION -> EXPRESION AS F64 .)
    modulo          reduce using rule 87 (EXPRESION -> EXPRESION AS F64 .)
    menorQue        reduce using rule 87 (EXPRESION -> EXPRESION AS F64 .)
    mayorQue        reduce using rule 87 (EXPRESION -> EXPRESION AS F64 .)
    menorIgual      reduce using rule 87 (EXPRESION -> EXPRESION AS F64 .)
    mayorIgual      reduce using rule 87 (EXPRESION -> EXPRESION AS F64 .)
    dobleIgual      reduce using rule 87 (EXPRESION -> EXPRESION AS F64 .)
    diferenteQue    reduce using rule 87 (EXPRESION -> EXPRESION AS F64 .)
    And             reduce using rule 87 (EXPRESION -> EXPRESION AS F64 .)
    Or              reduce using rule 87 (EXPRESION -> EXPRESION AS F64 .)
    AS              reduce using rule 87 (EXPRESION -> EXPRESION AS F64 .)
    punto           reduce using rule 87 (EXPRESION -> EXPRESION AS F64 .)
    llaveA          reduce using rule 87 (EXPRESION -> EXPRESION AS F64 .)
    ptComa          reduce using rule 87 (EXPRESION -> EXPRESION AS F64 .)
    CorC            reduce using rule 87 (EXPRESION -> EXPRESION AS F64 .)
    ParC            reduce using rule 87 (EXPRESION -> EXPRESION AS F64 .)
    Coma            reduce using rule 87 (EXPRESION -> EXPRESION AS F64 .)


state 115

    (88) EXPRESION -> EXPRESION punto To_string . ParA ParC

    ParA            shift and go to state 148


state 116

    (89) EXPRESION -> EXPRESION punto Abs . ParA ParC

    ParA            shift and go to state 149


state 117

    (90) EXPRESION -> EXPRESION punto Sqrt . ParA ParC

    ParA            shift and go to state 150


state 118

    (74) EXPRESION -> ParA EXPRESION ParC .

    mas             reduce using rule 74 (EXPRESION -> ParA EXPRESION ParC .)
    menos           reduce using rule 74 (EXPRESION -> ParA EXPRESION ParC .)
    por             reduce using rule 74 (EXPRESION -> ParA EXPRESION ParC .)
    dividido        reduce using rule 74 (EXPRESION -> ParA EXPRESION ParC .)
    modulo          reduce using rule 74 (EXPRESION -> ParA EXPRESION ParC .)
    menorQue        reduce using rule 74 (EXPRESION -> ParA EXPRESION ParC .)
    mayorQue        reduce using rule 74 (EXPRESION -> ParA EXPRESION ParC .)
    menorIgual      reduce using rule 74 (EXPRESION -> ParA EXPRESION ParC .)
    mayorIgual      reduce using rule 74 (EXPRESION -> ParA EXPRESION ParC .)
    dobleIgual      reduce using rule 74 (EXPRESION -> ParA EXPRESION ParC .)
    diferenteQue    reduce using rule 74 (EXPRESION -> ParA EXPRESION ParC .)
    And             reduce using rule 74 (EXPRESION -> ParA EXPRESION ParC .)
    Or              reduce using rule 74 (EXPRESION -> ParA EXPRESION ParC .)
    AS              reduce using rule 74 (EXPRESION -> ParA EXPRESION ParC .)
    punto           reduce using rule 74 (EXPRESION -> ParA EXPRESION ParC .)
    llaveA          reduce using rule 74 (EXPRESION -> ParA EXPRESION ParC .)
    ptComa          reduce using rule 74 (EXPRESION -> ParA EXPRESION ParC .)
    CorC            reduce using rule 74 (EXPRESION -> ParA EXPRESION ParC .)
    ParC            reduce using rule 74 (EXPRESION -> ParA EXPRESION ParC .)
    Coma            reduce using rule 74 (EXPRESION -> ParA EXPRESION ParC .)


state 119

    (75) EXPRESION -> I64 dosPuntos dosPuntos . Powi ParA EXPRESION Coma EXPRESION ParC

    Powi            shift and go to state 151


state 120

    (76) EXPRESION -> F64 dosPuntos dosPuntos . Powf ParA EXPRESION Coma EXPRESION ParC

    Powf            shift and go to state 152


state 121

    (91) EXPRESION -> vec not CorA . COMASEX CorC
    (92) EXPRESION -> vec not CorA . EXPRESION ptComa EXPRESION CorC
    (66) COMASEX -> . COMASEX Coma EXPRESION
    (67) COMASEX -> . EXPRESION
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    COMASEX                        shift and go to state 153
    EXPRESION                      shift and go to state 154
    INSERTVEC                      shift and go to state 44

state 122

    (94) EXPRESION -> Id punto Remove . ParA EXPRESION ParC

    ParA            shift and go to state 155


state 123

    (101) EXPRESION -> Id CorA EXPRESION . CorC
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    CorC            shift and go to state 156
    mas             shift and go to state 60
    menos           shift and go to state 61
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64
    menorQue        shift and go to state 65
    mayorQue        shift and go to state 66
    menorIgual      shift and go to state 67
    mayorIgual      shift and go to state 68
    dobleIgual      shift and go to state 69
    diferenteQue    shift and go to state 70
    And             shift and go to state 71
    Or              shift and go to state 72
    AS              shift and go to state 73
    punto           shift and go to state 74


state 124

    (64) IMPRIMIR -> PrintLn not ParA EXPRESION . ParC ptComa
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    ParC            shift and go to state 157
    mas             shift and go to state 60
    menos           shift and go to state 61
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64
    menorQue        shift and go to state 65
    mayorQue        shift and go to state 66
    menorIgual      shift and go to state 67
    mayorIgual      shift and go to state 68
    dobleIgual      shift and go to state 69
    diferenteQue    shift and go to state 70
    And             shift and go to state 71
    Or              shift and go to state 72
    AS              shift and go to state 73
    punto           shift and go to state 74


state 125

    (65) IMPRIMIR -> PrintLn not ParA String . Coma COMASEX ParC ptComa
    (98) EXPRESION -> String .

    Coma            shift and go to state 158
    ParC            reduce using rule 98 (EXPRESION -> String .)
    mas             reduce using rule 98 (EXPRESION -> String .)
    menos           reduce using rule 98 (EXPRESION -> String .)
    por             reduce using rule 98 (EXPRESION -> String .)
    dividido        reduce using rule 98 (EXPRESION -> String .)
    modulo          reduce using rule 98 (EXPRESION -> String .)
    menorQue        reduce using rule 98 (EXPRESION -> String .)
    mayorQue        reduce using rule 98 (EXPRESION -> String .)
    menorIgual      reduce using rule 98 (EXPRESION -> String .)
    mayorIgual      reduce using rule 98 (EXPRESION -> String .)
    dobleIgual      reduce using rule 98 (EXPRESION -> String .)
    diferenteQue    reduce using rule 98 (EXPRESION -> String .)
    And             reduce using rule 98 (EXPRESION -> String .)
    Or              reduce using rule 98 (EXPRESION -> String .)
    AS              reduce using rule 98 (EXPRESION -> String .)
    punto           reduce using rule 98 (EXPRESION -> String .)


state 126

    (11) DECLARACION -> Let Id igual EXPRESION ptComa .

    llaveC          reduce using rule 11 (DECLARACION -> Let Id igual EXPRESION ptComa .)
    Let             reduce using rule 11 (DECLARACION -> Let Id igual EXPRESION ptComa .)
    If              reduce using rule 11 (DECLARACION -> Let Id igual EXPRESION ptComa .)
    Id              reduce using rule 11 (DECLARACION -> Let Id igual EXPRESION ptComa .)
    PrintLn         reduce using rule 11 (DECLARACION -> Let Id igual EXPRESION ptComa .)


state 127

    (12) DECLARACION -> Let Id dosPuntos I64 igual . EXPRESION ptComa
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 159
    INSERTVEC                      shift and go to state 44

state 128

    (13) DECLARACION -> Let Id dosPuntos F64 igual . EXPRESION ptComa
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 160
    INSERTVEC                      shift and go to state 44

state 129

    (14) DECLARACION -> Let Id dosPuntos StrA igual . EXPRESION ptComa
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 161
    INSERTVEC                      shift and go to state 44

state 130

    (15) DECLARACION -> Let Id dosPuntos Str igual . EXPRESION ptComa
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 162
    INSERTVEC                      shift and go to state 44

state 131

    (16) DECLARACION -> Let Id dosPuntos Bool igual . EXPRESION ptComa
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 163
    INSERTVEC                      shift and go to state 44

state 132

    (17) DECLARACION -> Let Id dosPuntos CharAux igual . EXPRESION ptComa
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 164
    INSERTVEC                      shift and go to state 44

state 133

    (25) DECLARACION -> Let Id dosPuntos VEC menorQue . I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (26) DECLARACION -> Let Id dosPuntos VEC menorQue . F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (27) DECLARACION -> Let Id dosPuntos VEC menorQue . StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (28) DECLARACION -> Let Id dosPuntos VEC menorQue . Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (29) DECLARACION -> Let Id dosPuntos VEC menorQue . Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (30) DECLARACION -> Let Id dosPuntos VEC menorQue . CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (31) DECLARACION -> Let Id dosPuntos VEC menorQue . I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (32) DECLARACION -> Let Id dosPuntos VEC menorQue . F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (33) DECLARACION -> Let Id dosPuntos VEC menorQue . StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (34) DECLARACION -> Let Id dosPuntos VEC menorQue . Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (35) DECLARACION -> Let Id dosPuntos VEC menorQue . Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (36) DECLARACION -> Let Id dosPuntos VEC menorQue . CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    I64             shift and go to state 165
    F64             shift and go to state 166
    StrA            shift and go to state 167
    Str             shift and go to state 168
    Bool            shift and go to state 169
    CharAux         shift and go to state 170


state 134

    (18) DECLARACION -> Let Mut Id igual EXPRESION . ptComa
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    ptComa          shift and go to state 171
    mas             shift and go to state 60
    menos           shift and go to state 61
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64
    menorQue        shift and go to state 65
    mayorQue        shift and go to state 66
    menorIgual      shift and go to state 67
    mayorIgual      shift and go to state 68
    dobleIgual      shift and go to state 69
    diferenteQue    shift and go to state 70
    And             shift and go to state 71
    Or              shift and go to state 72
    AS              shift and go to state 73
    punto           shift and go to state 74


state 135

    (19) DECLARACION -> Let Mut Id dosPuntos I64 . igual EXPRESION ptComa

    igual           shift and go to state 172


state 136

    (20) DECLARACION -> Let Mut Id dosPuntos F64 . igual EXPRESION ptComa

    igual           shift and go to state 173


state 137

    (21) DECLARACION -> Let Mut Id dosPuntos StrA . igual EXPRESION ptComa

    igual           shift and go to state 174


state 138

    (22) DECLARACION -> Let Mut Id dosPuntos Str . igual EXPRESION ptComa

    igual           shift and go to state 175


state 139

    (23) DECLARACION -> Let Mut Id dosPuntos Bool . igual EXPRESION ptComa

    igual           shift and go to state 176


state 140

    (24) DECLARACION -> Let Mut Id dosPuntos CharAux . igual EXPRESION ptComa

    igual           shift and go to state 177


state 141

    (37) DECLARACION -> Let Mut Id dosPuntos VEC . menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (38) DECLARACION -> Let Mut Id dosPuntos VEC . menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (39) DECLARACION -> Let Mut Id dosPuntos VEC . menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (40) DECLARACION -> Let Mut Id dosPuntos VEC . menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (41) DECLARACION -> Let Mut Id dosPuntos VEC . menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (42) DECLARACION -> Let Mut Id dosPuntos VEC . menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (43) DECLARACION -> Let Mut Id dosPuntos VEC . menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (44) DECLARACION -> Let Mut Id dosPuntos VEC . menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (45) DECLARACION -> Let Mut Id dosPuntos VEC . menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (46) DECLARACION -> Let Mut Id dosPuntos VEC . menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (47) DECLARACION -> Let Mut Id dosPuntos VEC . menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (48) DECLARACION -> Let Mut Id dosPuntos VEC . menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    menorQue        shift and go to state 178


state 142

    (58) ASIGNACION -> Id CorA EXPRESION CorC igual . EXPRESION ptComa
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 179
    INSERTVEC                      shift and go to state 44

state 143

    (60) PUSH -> Id punto Push ParA EXPRESION . ParC ptComa
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    ParC            shift and go to state 180
    mas             shift and go to state 60
    menos           shift and go to state 61
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64
    menorQue        shift and go to state 65
    mayorQue        shift and go to state 66
    menorIgual      shift and go to state 67
    mayorIgual      shift and go to state 68
    dobleIgual      shift and go to state 69
    diferenteQue    shift and go to state 70
    And             shift and go to state 71
    Or              shift and go to state 72
    AS              shift and go to state 73
    punto           shift and go to state 74


state 144

    (62) INSERTVEC -> Id punto Insert ParA EXPRESION . Coma EXPRESION ParC ptComa
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    Coma            shift and go to state 181
    mas             shift and go to state 60
    menos           shift and go to state 61
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64
    menorQue        shift and go to state 65
    mayorQue        shift and go to state 66
    menorIgual      shift and go to state 67
    mayorIgual      shift and go to state 68
    dobleIgual      shift and go to state 69
    diferenteQue    shift and go to state 70
    And             shift and go to state 71
    Or              shift and go to state 72
    AS              shift and go to state 73
    punto           shift and go to state 74


state 145

    (50) IF -> If EXPRESION BLOQUE ELSEIF ELSE .

    llaveC          reduce using rule 50 (IF -> If EXPRESION BLOQUE ELSEIF ELSE .)
    Let             reduce using rule 50 (IF -> If EXPRESION BLOQUE ELSEIF ELSE .)
    If              reduce using rule 50 (IF -> If EXPRESION BLOQUE ELSEIF ELSE .)
    Id              reduce using rule 50 (IF -> If EXPRESION BLOQUE ELSEIF ELSE .)
    PrintLn         reduce using rule 50 (IF -> If EXPRESION BLOQUE ELSEIF ELSE .)


state 146

    (51) ELSEIF -> ELSEIF Else . If EXPRESION BLOQUE
    (53) ELSE -> Else . BLOQUE
    (55) BLOQUE -> . llaveA INSTRUCCIONES llaveC

    If              shift and go to state 182
    llaveA          shift and go to state 16

    BLOQUE                         shift and go to state 183

state 147

    (54) ELSE -> empty .

    llaveC          reduce using rule 54 (ELSE -> empty .)
    Let             reduce using rule 54 (ELSE -> empty .)
    If              reduce using rule 54 (ELSE -> empty .)
    Id              reduce using rule 54 (ELSE -> empty .)
    PrintLn         reduce using rule 54 (ELSE -> empty .)


state 148

    (88) EXPRESION -> EXPRESION punto To_string ParA . ParC

    ParC            shift and go to state 184


state 149

    (89) EXPRESION -> EXPRESION punto Abs ParA . ParC

    ParC            shift and go to state 185


state 150

    (90) EXPRESION -> EXPRESION punto Sqrt ParA . ParC

    ParC            shift and go to state 186


state 151

    (75) EXPRESION -> I64 dosPuntos dosPuntos Powi . ParA EXPRESION Coma EXPRESION ParC

    ParA            shift and go to state 187


state 152

    (76) EXPRESION -> F64 dosPuntos dosPuntos Powf . ParA EXPRESION Coma EXPRESION ParC

    ParA            shift and go to state 188


state 153

    (91) EXPRESION -> vec not CorA COMASEX . CorC
    (66) COMASEX -> COMASEX . Coma EXPRESION

    CorC            shift and go to state 189
    Coma            shift and go to state 190


state 154

    (92) EXPRESION -> vec not CorA EXPRESION . ptComa EXPRESION CorC
    (67) COMASEX -> EXPRESION .
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    ptComa          shift and go to state 191
    CorC            reduce using rule 67 (COMASEX -> EXPRESION .)
    Coma            reduce using rule 67 (COMASEX -> EXPRESION .)
    mas             shift and go to state 60
    menos           shift and go to state 61
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64
    menorQue        shift and go to state 65
    mayorQue        shift and go to state 66
    menorIgual      shift and go to state 67
    mayorIgual      shift and go to state 68
    dobleIgual      shift and go to state 69
    diferenteQue    shift and go to state 70
    And             shift and go to state 71
    Or              shift and go to state 72
    AS              shift and go to state 73
    punto           shift and go to state 74


state 155

    (94) EXPRESION -> Id punto Remove ParA . EXPRESION ParC
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 192
    INSERTVEC                      shift and go to state 44

state 156

    (101) EXPRESION -> Id CorA EXPRESION CorC .

    mas             reduce using rule 101 (EXPRESION -> Id CorA EXPRESION CorC .)
    menos           reduce using rule 101 (EXPRESION -> Id CorA EXPRESION CorC .)
    por             reduce using rule 101 (EXPRESION -> Id CorA EXPRESION CorC .)
    dividido        reduce using rule 101 (EXPRESION -> Id CorA EXPRESION CorC .)
    modulo          reduce using rule 101 (EXPRESION -> Id CorA EXPRESION CorC .)
    menorQue        reduce using rule 101 (EXPRESION -> Id CorA EXPRESION CorC .)
    mayorQue        reduce using rule 101 (EXPRESION -> Id CorA EXPRESION CorC .)
    menorIgual      reduce using rule 101 (EXPRESION -> Id CorA EXPRESION CorC .)
    mayorIgual      reduce using rule 101 (EXPRESION -> Id CorA EXPRESION CorC .)
    dobleIgual      reduce using rule 101 (EXPRESION -> Id CorA EXPRESION CorC .)
    diferenteQue    reduce using rule 101 (EXPRESION -> Id CorA EXPRESION CorC .)
    And             reduce using rule 101 (EXPRESION -> Id CorA EXPRESION CorC .)
    Or              reduce using rule 101 (EXPRESION -> Id CorA EXPRESION CorC .)
    AS              reduce using rule 101 (EXPRESION -> Id CorA EXPRESION CorC .)
    punto           reduce using rule 101 (EXPRESION -> Id CorA EXPRESION CorC .)
    llaveA          reduce using rule 101 (EXPRESION -> Id CorA EXPRESION CorC .)
    ptComa          reduce using rule 101 (EXPRESION -> Id CorA EXPRESION CorC .)
    CorC            reduce using rule 101 (EXPRESION -> Id CorA EXPRESION CorC .)
    ParC            reduce using rule 101 (EXPRESION -> Id CorA EXPRESION CorC .)
    Coma            reduce using rule 101 (EXPRESION -> Id CorA EXPRESION CorC .)


state 157

    (64) IMPRIMIR -> PrintLn not ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 193


state 158

    (65) IMPRIMIR -> PrintLn not ParA String Coma . COMASEX ParC ptComa
    (66) COMASEX -> . COMASEX Coma EXPRESION
    (67) COMASEX -> . EXPRESION
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    COMASEX                        shift and go to state 194
    EXPRESION                      shift and go to state 195
    INSERTVEC                      shift and go to state 44

state 159

    (12) DECLARACION -> Let Id dosPuntos I64 igual EXPRESION . ptComa
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    ptComa          shift and go to state 196
    mas             shift and go to state 60
    menos           shift and go to state 61
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64
    menorQue        shift and go to state 65
    mayorQue        shift and go to state 66
    menorIgual      shift and go to state 67
    mayorIgual      shift and go to state 68
    dobleIgual      shift and go to state 69
    diferenteQue    shift and go to state 70
    And             shift and go to state 71
    Or              shift and go to state 72
    AS              shift and go to state 73
    punto           shift and go to state 74


state 160

    (13) DECLARACION -> Let Id dosPuntos F64 igual EXPRESION . ptComa
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    ptComa          shift and go to state 197
    mas             shift and go to state 60
    menos           shift and go to state 61
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64
    menorQue        shift and go to state 65
    mayorQue        shift and go to state 66
    menorIgual      shift and go to state 67
    mayorIgual      shift and go to state 68
    dobleIgual      shift and go to state 69
    diferenteQue    shift and go to state 70
    And             shift and go to state 71
    Or              shift and go to state 72
    AS              shift and go to state 73
    punto           shift and go to state 74


state 161

    (14) DECLARACION -> Let Id dosPuntos StrA igual EXPRESION . ptComa
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    ptComa          shift and go to state 198
    mas             shift and go to state 60
    menos           shift and go to state 61
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64
    menorQue        shift and go to state 65
    mayorQue        shift and go to state 66
    menorIgual      shift and go to state 67
    mayorIgual      shift and go to state 68
    dobleIgual      shift and go to state 69
    diferenteQue    shift and go to state 70
    And             shift and go to state 71
    Or              shift and go to state 72
    AS              shift and go to state 73
    punto           shift and go to state 74


state 162

    (15) DECLARACION -> Let Id dosPuntos Str igual EXPRESION . ptComa
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    ptComa          shift and go to state 199
    mas             shift and go to state 60
    menos           shift and go to state 61
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64
    menorQue        shift and go to state 65
    mayorQue        shift and go to state 66
    menorIgual      shift and go to state 67
    mayorIgual      shift and go to state 68
    dobleIgual      shift and go to state 69
    diferenteQue    shift and go to state 70
    And             shift and go to state 71
    Or              shift and go to state 72
    AS              shift and go to state 73
    punto           shift and go to state 74


state 163

    (16) DECLARACION -> Let Id dosPuntos Bool igual EXPRESION . ptComa
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    ptComa          shift and go to state 200
    mas             shift and go to state 60
    menos           shift and go to state 61
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64
    menorQue        shift and go to state 65
    mayorQue        shift and go to state 66
    menorIgual      shift and go to state 67
    mayorIgual      shift and go to state 68
    dobleIgual      shift and go to state 69
    diferenteQue    shift and go to state 70
    And             shift and go to state 71
    Or              shift and go to state 72
    AS              shift and go to state 73
    punto           shift and go to state 74


state 164

    (17) DECLARACION -> Let Id dosPuntos CharAux igual EXPRESION . ptComa
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    ptComa          shift and go to state 201
    mas             shift and go to state 60
    menos           shift and go to state 61
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64
    menorQue        shift and go to state 65
    mayorQue        shift and go to state 66
    menorIgual      shift and go to state 67
    mayorIgual      shift and go to state 68
    dobleIgual      shift and go to state 69
    diferenteQue    shift and go to state 70
    And             shift and go to state 71
    Or              shift and go to state 72
    AS              shift and go to state 73
    punto           shift and go to state 74


state 165

    (25) DECLARACION -> Let Id dosPuntos VEC menorQue I64 . mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (31) DECLARACION -> Let Id dosPuntos VEC menorQue I64 . mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    mayorQue        shift and go to state 202


state 166

    (26) DECLARACION -> Let Id dosPuntos VEC menorQue F64 . mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (32) DECLARACION -> Let Id dosPuntos VEC menorQue F64 . mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    mayorQue        shift and go to state 203


state 167

    (27) DECLARACION -> Let Id dosPuntos VEC menorQue StrA . mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (33) DECLARACION -> Let Id dosPuntos VEC menorQue StrA . mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    mayorQue        shift and go to state 204


state 168

    (28) DECLARACION -> Let Id dosPuntos VEC menorQue Str . mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (34) DECLARACION -> Let Id dosPuntos VEC menorQue Str . mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    mayorQue        shift and go to state 205


state 169

    (29) DECLARACION -> Let Id dosPuntos VEC menorQue Bool . mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (35) DECLARACION -> Let Id dosPuntos VEC menorQue Bool . mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    mayorQue        shift and go to state 206


state 170

    (30) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux . mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (36) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux . mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    mayorQue        shift and go to state 207


state 171

    (18) DECLARACION -> Let Mut Id igual EXPRESION ptComa .

    llaveC          reduce using rule 18 (DECLARACION -> Let Mut Id igual EXPRESION ptComa .)
    Let             reduce using rule 18 (DECLARACION -> Let Mut Id igual EXPRESION ptComa .)
    If              reduce using rule 18 (DECLARACION -> Let Mut Id igual EXPRESION ptComa .)
    Id              reduce using rule 18 (DECLARACION -> Let Mut Id igual EXPRESION ptComa .)
    PrintLn         reduce using rule 18 (DECLARACION -> Let Mut Id igual EXPRESION ptComa .)


state 172

    (19) DECLARACION -> Let Mut Id dosPuntos I64 igual . EXPRESION ptComa
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 208
    INSERTVEC                      shift and go to state 44

state 173

    (20) DECLARACION -> Let Mut Id dosPuntos F64 igual . EXPRESION ptComa
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 209
    INSERTVEC                      shift and go to state 44

state 174

    (21) DECLARACION -> Let Mut Id dosPuntos StrA igual . EXPRESION ptComa
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 210
    INSERTVEC                      shift and go to state 44

state 175

    (22) DECLARACION -> Let Mut Id dosPuntos Str igual . EXPRESION ptComa
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 211
    INSERTVEC                      shift and go to state 44

state 176

    (23) DECLARACION -> Let Mut Id dosPuntos Bool igual . EXPRESION ptComa
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 212
    INSERTVEC                      shift and go to state 44

state 177

    (24) DECLARACION -> Let Mut Id dosPuntos CharAux igual . EXPRESION ptComa
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 213
    INSERTVEC                      shift and go to state 44

state 178

    (37) DECLARACION -> Let Mut Id dosPuntos VEC menorQue . I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (38) DECLARACION -> Let Mut Id dosPuntos VEC menorQue . F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (39) DECLARACION -> Let Mut Id dosPuntos VEC menorQue . StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (40) DECLARACION -> Let Mut Id dosPuntos VEC menorQue . Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (41) DECLARACION -> Let Mut Id dosPuntos VEC menorQue . Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (42) DECLARACION -> Let Mut Id dosPuntos VEC menorQue . CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (43) DECLARACION -> Let Mut Id dosPuntos VEC menorQue . I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (44) DECLARACION -> Let Mut Id dosPuntos VEC menorQue . F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (45) DECLARACION -> Let Mut Id dosPuntos VEC menorQue . StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (46) DECLARACION -> Let Mut Id dosPuntos VEC menorQue . Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (47) DECLARACION -> Let Mut Id dosPuntos VEC menorQue . Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (48) DECLARACION -> Let Mut Id dosPuntos VEC menorQue . CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    I64             shift and go to state 214
    F64             shift and go to state 215
    StrA            shift and go to state 216
    Str             shift and go to state 217
    Bool            shift and go to state 218
    CharAux         shift and go to state 219


state 179

    (58) ASIGNACION -> Id CorA EXPRESION CorC igual EXPRESION . ptComa
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    ptComa          shift and go to state 220
    mas             shift and go to state 60
    menos           shift and go to state 61
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64
    menorQue        shift and go to state 65
    mayorQue        shift and go to state 66
    menorIgual      shift and go to state 67
    mayorIgual      shift and go to state 68
    dobleIgual      shift and go to state 69
    diferenteQue    shift and go to state 70
    And             shift and go to state 71
    Or              shift and go to state 72
    AS              shift and go to state 73
    punto           shift and go to state 74


state 180

    (60) PUSH -> Id punto Push ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 221


state 181

    (62) INSERTVEC -> Id punto Insert ParA EXPRESION Coma . EXPRESION ParC ptComa
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 222
    INSERTVEC                      shift and go to state 44

state 182

    (51) ELSEIF -> ELSEIF Else If . EXPRESION BLOQUE
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 223
    INSERTVEC                      shift and go to state 44

state 183

    (53) ELSE -> Else BLOQUE .

    llaveC          reduce using rule 53 (ELSE -> Else BLOQUE .)
    Let             reduce using rule 53 (ELSE -> Else BLOQUE .)
    If              reduce using rule 53 (ELSE -> Else BLOQUE .)
    Id              reduce using rule 53 (ELSE -> Else BLOQUE .)
    PrintLn         reduce using rule 53 (ELSE -> Else BLOQUE .)


state 184

    (88) EXPRESION -> EXPRESION punto To_string ParA ParC .

    mas             reduce using rule 88 (EXPRESION -> EXPRESION punto To_string ParA ParC .)
    menos           reduce using rule 88 (EXPRESION -> EXPRESION punto To_string ParA ParC .)
    por             reduce using rule 88 (EXPRESION -> EXPRESION punto To_string ParA ParC .)
    dividido        reduce using rule 88 (EXPRESION -> EXPRESION punto To_string ParA ParC .)
    modulo          reduce using rule 88 (EXPRESION -> EXPRESION punto To_string ParA ParC .)
    menorQue        reduce using rule 88 (EXPRESION -> EXPRESION punto To_string ParA ParC .)
    mayorQue        reduce using rule 88 (EXPRESION -> EXPRESION punto To_string ParA ParC .)
    menorIgual      reduce using rule 88 (EXPRESION -> EXPRESION punto To_string ParA ParC .)
    mayorIgual      reduce using rule 88 (EXPRESION -> EXPRESION punto To_string ParA ParC .)
    dobleIgual      reduce using rule 88 (EXPRESION -> EXPRESION punto To_string ParA ParC .)
    diferenteQue    reduce using rule 88 (EXPRESION -> EXPRESION punto To_string ParA ParC .)
    And             reduce using rule 88 (EXPRESION -> EXPRESION punto To_string ParA ParC .)
    Or              reduce using rule 88 (EXPRESION -> EXPRESION punto To_string ParA ParC .)
    AS              reduce using rule 88 (EXPRESION -> EXPRESION punto To_string ParA ParC .)
    punto           reduce using rule 88 (EXPRESION -> EXPRESION punto To_string ParA ParC .)
    llaveA          reduce using rule 88 (EXPRESION -> EXPRESION punto To_string ParA ParC .)
    ptComa          reduce using rule 88 (EXPRESION -> EXPRESION punto To_string ParA ParC .)
    CorC            reduce using rule 88 (EXPRESION -> EXPRESION punto To_string ParA ParC .)
    ParC            reduce using rule 88 (EXPRESION -> EXPRESION punto To_string ParA ParC .)
    Coma            reduce using rule 88 (EXPRESION -> EXPRESION punto To_string ParA ParC .)


state 185

    (89) EXPRESION -> EXPRESION punto Abs ParA ParC .

    mas             reduce using rule 89 (EXPRESION -> EXPRESION punto Abs ParA ParC .)
    menos           reduce using rule 89 (EXPRESION -> EXPRESION punto Abs ParA ParC .)
    por             reduce using rule 89 (EXPRESION -> EXPRESION punto Abs ParA ParC .)
    dividido        reduce using rule 89 (EXPRESION -> EXPRESION punto Abs ParA ParC .)
    modulo          reduce using rule 89 (EXPRESION -> EXPRESION punto Abs ParA ParC .)
    menorQue        reduce using rule 89 (EXPRESION -> EXPRESION punto Abs ParA ParC .)
    mayorQue        reduce using rule 89 (EXPRESION -> EXPRESION punto Abs ParA ParC .)
    menorIgual      reduce using rule 89 (EXPRESION -> EXPRESION punto Abs ParA ParC .)
    mayorIgual      reduce using rule 89 (EXPRESION -> EXPRESION punto Abs ParA ParC .)
    dobleIgual      reduce using rule 89 (EXPRESION -> EXPRESION punto Abs ParA ParC .)
    diferenteQue    reduce using rule 89 (EXPRESION -> EXPRESION punto Abs ParA ParC .)
    And             reduce using rule 89 (EXPRESION -> EXPRESION punto Abs ParA ParC .)
    Or              reduce using rule 89 (EXPRESION -> EXPRESION punto Abs ParA ParC .)
    AS              reduce using rule 89 (EXPRESION -> EXPRESION punto Abs ParA ParC .)
    punto           reduce using rule 89 (EXPRESION -> EXPRESION punto Abs ParA ParC .)
    llaveA          reduce using rule 89 (EXPRESION -> EXPRESION punto Abs ParA ParC .)
    ptComa          reduce using rule 89 (EXPRESION -> EXPRESION punto Abs ParA ParC .)
    CorC            reduce using rule 89 (EXPRESION -> EXPRESION punto Abs ParA ParC .)
    ParC            reduce using rule 89 (EXPRESION -> EXPRESION punto Abs ParA ParC .)
    Coma            reduce using rule 89 (EXPRESION -> EXPRESION punto Abs ParA ParC .)


state 186

    (90) EXPRESION -> EXPRESION punto Sqrt ParA ParC .

    mas             reduce using rule 90 (EXPRESION -> EXPRESION punto Sqrt ParA ParC .)
    menos           reduce using rule 90 (EXPRESION -> EXPRESION punto Sqrt ParA ParC .)
    por             reduce using rule 90 (EXPRESION -> EXPRESION punto Sqrt ParA ParC .)
    dividido        reduce using rule 90 (EXPRESION -> EXPRESION punto Sqrt ParA ParC .)
    modulo          reduce using rule 90 (EXPRESION -> EXPRESION punto Sqrt ParA ParC .)
    menorQue        reduce using rule 90 (EXPRESION -> EXPRESION punto Sqrt ParA ParC .)
    mayorQue        reduce using rule 90 (EXPRESION -> EXPRESION punto Sqrt ParA ParC .)
    menorIgual      reduce using rule 90 (EXPRESION -> EXPRESION punto Sqrt ParA ParC .)
    mayorIgual      reduce using rule 90 (EXPRESION -> EXPRESION punto Sqrt ParA ParC .)
    dobleIgual      reduce using rule 90 (EXPRESION -> EXPRESION punto Sqrt ParA ParC .)
    diferenteQue    reduce using rule 90 (EXPRESION -> EXPRESION punto Sqrt ParA ParC .)
    And             reduce using rule 90 (EXPRESION -> EXPRESION punto Sqrt ParA ParC .)
    Or              reduce using rule 90 (EXPRESION -> EXPRESION punto Sqrt ParA ParC .)
    AS              reduce using rule 90 (EXPRESION -> EXPRESION punto Sqrt ParA ParC .)
    punto           reduce using rule 90 (EXPRESION -> EXPRESION punto Sqrt ParA ParC .)
    llaveA          reduce using rule 90 (EXPRESION -> EXPRESION punto Sqrt ParA ParC .)
    ptComa          reduce using rule 90 (EXPRESION -> EXPRESION punto Sqrt ParA ParC .)
    CorC            reduce using rule 90 (EXPRESION -> EXPRESION punto Sqrt ParA ParC .)
    ParC            reduce using rule 90 (EXPRESION -> EXPRESION punto Sqrt ParA ParC .)
    Coma            reduce using rule 90 (EXPRESION -> EXPRESION punto Sqrt ParA ParC .)


state 187

    (75) EXPRESION -> I64 dosPuntos dosPuntos Powi ParA . EXPRESION Coma EXPRESION ParC
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 224
    INSERTVEC                      shift and go to state 44

state 188

    (76) EXPRESION -> F64 dosPuntos dosPuntos Powf ParA . EXPRESION Coma EXPRESION ParC
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 225
    INSERTVEC                      shift and go to state 44

state 189

    (91) EXPRESION -> vec not CorA COMASEX CorC .

    mas             reduce using rule 91 (EXPRESION -> vec not CorA COMASEX CorC .)
    menos           reduce using rule 91 (EXPRESION -> vec not CorA COMASEX CorC .)
    por             reduce using rule 91 (EXPRESION -> vec not CorA COMASEX CorC .)
    dividido        reduce using rule 91 (EXPRESION -> vec not CorA COMASEX CorC .)
    modulo          reduce using rule 91 (EXPRESION -> vec not CorA COMASEX CorC .)
    menorQue        reduce using rule 91 (EXPRESION -> vec not CorA COMASEX CorC .)
    mayorQue        reduce using rule 91 (EXPRESION -> vec not CorA COMASEX CorC .)
    menorIgual      reduce using rule 91 (EXPRESION -> vec not CorA COMASEX CorC .)
    mayorIgual      reduce using rule 91 (EXPRESION -> vec not CorA COMASEX CorC .)
    dobleIgual      reduce using rule 91 (EXPRESION -> vec not CorA COMASEX CorC .)
    diferenteQue    reduce using rule 91 (EXPRESION -> vec not CorA COMASEX CorC .)
    And             reduce using rule 91 (EXPRESION -> vec not CorA COMASEX CorC .)
    Or              reduce using rule 91 (EXPRESION -> vec not CorA COMASEX CorC .)
    AS              reduce using rule 91 (EXPRESION -> vec not CorA COMASEX CorC .)
    punto           reduce using rule 91 (EXPRESION -> vec not CorA COMASEX CorC .)
    llaveA          reduce using rule 91 (EXPRESION -> vec not CorA COMASEX CorC .)
    ptComa          reduce using rule 91 (EXPRESION -> vec not CorA COMASEX CorC .)
    CorC            reduce using rule 91 (EXPRESION -> vec not CorA COMASEX CorC .)
    ParC            reduce using rule 91 (EXPRESION -> vec not CorA COMASEX CorC .)
    Coma            reduce using rule 91 (EXPRESION -> vec not CorA COMASEX CorC .)


state 190

    (66) COMASEX -> COMASEX Coma . EXPRESION
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 226
    INSERTVEC                      shift and go to state 44

state 191

    (92) EXPRESION -> vec not CorA EXPRESION ptComa . EXPRESION CorC
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 227
    INSERTVEC                      shift and go to state 44

state 192

    (94) EXPRESION -> Id punto Remove ParA EXPRESION . ParC
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    ParC            shift and go to state 228
    mas             shift and go to state 60
    menos           shift and go to state 61
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64
    menorQue        shift and go to state 65
    mayorQue        shift and go to state 66
    menorIgual      shift and go to state 67
    mayorIgual      shift and go to state 68
    dobleIgual      shift and go to state 69
    diferenteQue    shift and go to state 70
    And             shift and go to state 71
    Or              shift and go to state 72
    AS              shift and go to state 73
    punto           shift and go to state 74


state 193

    (64) IMPRIMIR -> PrintLn not ParA EXPRESION ParC ptComa .

    llaveC          reduce using rule 64 (IMPRIMIR -> PrintLn not ParA EXPRESION ParC ptComa .)
    Let             reduce using rule 64 (IMPRIMIR -> PrintLn not ParA EXPRESION ParC ptComa .)
    If              reduce using rule 64 (IMPRIMIR -> PrintLn not ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 64 (IMPRIMIR -> PrintLn not ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 64 (IMPRIMIR -> PrintLn not ParA EXPRESION ParC ptComa .)


state 194

    (65) IMPRIMIR -> PrintLn not ParA String Coma COMASEX . ParC ptComa
    (66) COMASEX -> COMASEX . Coma EXPRESION

    ParC            shift and go to state 229
    Coma            shift and go to state 190


state 195

    (67) COMASEX -> EXPRESION .
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    ParC            reduce using rule 67 (COMASEX -> EXPRESION .)
    Coma            reduce using rule 67 (COMASEX -> EXPRESION .)
    mas             shift and go to state 60
    menos           shift and go to state 61
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64
    menorQue        shift and go to state 65
    mayorQue        shift and go to state 66
    menorIgual      shift and go to state 67
    mayorIgual      shift and go to state 68
    dobleIgual      shift and go to state 69
    diferenteQue    shift and go to state 70
    And             shift and go to state 71
    Or              shift and go to state 72
    AS              shift and go to state 73
    punto           shift and go to state 74


state 196

    (12) DECLARACION -> Let Id dosPuntos I64 igual EXPRESION ptComa .

    llaveC          reduce using rule 12 (DECLARACION -> Let Id dosPuntos I64 igual EXPRESION ptComa .)
    Let             reduce using rule 12 (DECLARACION -> Let Id dosPuntos I64 igual EXPRESION ptComa .)
    If              reduce using rule 12 (DECLARACION -> Let Id dosPuntos I64 igual EXPRESION ptComa .)
    Id              reduce using rule 12 (DECLARACION -> Let Id dosPuntos I64 igual EXPRESION ptComa .)
    PrintLn         reduce using rule 12 (DECLARACION -> Let Id dosPuntos I64 igual EXPRESION ptComa .)


state 197

    (13) DECLARACION -> Let Id dosPuntos F64 igual EXPRESION ptComa .

    llaveC          reduce using rule 13 (DECLARACION -> Let Id dosPuntos F64 igual EXPRESION ptComa .)
    Let             reduce using rule 13 (DECLARACION -> Let Id dosPuntos F64 igual EXPRESION ptComa .)
    If              reduce using rule 13 (DECLARACION -> Let Id dosPuntos F64 igual EXPRESION ptComa .)
    Id              reduce using rule 13 (DECLARACION -> Let Id dosPuntos F64 igual EXPRESION ptComa .)
    PrintLn         reduce using rule 13 (DECLARACION -> Let Id dosPuntos F64 igual EXPRESION ptComa .)


state 198

    (14) DECLARACION -> Let Id dosPuntos StrA igual EXPRESION ptComa .

    llaveC          reduce using rule 14 (DECLARACION -> Let Id dosPuntos StrA igual EXPRESION ptComa .)
    Let             reduce using rule 14 (DECLARACION -> Let Id dosPuntos StrA igual EXPRESION ptComa .)
    If              reduce using rule 14 (DECLARACION -> Let Id dosPuntos StrA igual EXPRESION ptComa .)
    Id              reduce using rule 14 (DECLARACION -> Let Id dosPuntos StrA igual EXPRESION ptComa .)
    PrintLn         reduce using rule 14 (DECLARACION -> Let Id dosPuntos StrA igual EXPRESION ptComa .)


state 199

    (15) DECLARACION -> Let Id dosPuntos Str igual EXPRESION ptComa .

    llaveC          reduce using rule 15 (DECLARACION -> Let Id dosPuntos Str igual EXPRESION ptComa .)
    Let             reduce using rule 15 (DECLARACION -> Let Id dosPuntos Str igual EXPRESION ptComa .)
    If              reduce using rule 15 (DECLARACION -> Let Id dosPuntos Str igual EXPRESION ptComa .)
    Id              reduce using rule 15 (DECLARACION -> Let Id dosPuntos Str igual EXPRESION ptComa .)
    PrintLn         reduce using rule 15 (DECLARACION -> Let Id dosPuntos Str igual EXPRESION ptComa .)


state 200

    (16) DECLARACION -> Let Id dosPuntos Bool igual EXPRESION ptComa .

    llaveC          reduce using rule 16 (DECLARACION -> Let Id dosPuntos Bool igual EXPRESION ptComa .)
    Let             reduce using rule 16 (DECLARACION -> Let Id dosPuntos Bool igual EXPRESION ptComa .)
    If              reduce using rule 16 (DECLARACION -> Let Id dosPuntos Bool igual EXPRESION ptComa .)
    Id              reduce using rule 16 (DECLARACION -> Let Id dosPuntos Bool igual EXPRESION ptComa .)
    PrintLn         reduce using rule 16 (DECLARACION -> Let Id dosPuntos Bool igual EXPRESION ptComa .)


state 201

    (17) DECLARACION -> Let Id dosPuntos CharAux igual EXPRESION ptComa .

    llaveC          reduce using rule 17 (DECLARACION -> Let Id dosPuntos CharAux igual EXPRESION ptComa .)
    Let             reduce using rule 17 (DECLARACION -> Let Id dosPuntos CharAux igual EXPRESION ptComa .)
    If              reduce using rule 17 (DECLARACION -> Let Id dosPuntos CharAux igual EXPRESION ptComa .)
    Id              reduce using rule 17 (DECLARACION -> Let Id dosPuntos CharAux igual EXPRESION ptComa .)
    PrintLn         reduce using rule 17 (DECLARACION -> Let Id dosPuntos CharAux igual EXPRESION ptComa .)


state 202

    (25) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue . igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (31) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue . igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 230


state 203

    (26) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue . igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (32) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue . igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 231


state 204

    (27) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue . igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (33) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue . igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 232


state 205

    (28) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue . igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (34) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue . igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 233


state 206

    (29) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue . igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (35) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue . igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 234


state 207

    (30) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue . igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (36) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue . igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 235


state 208

    (19) DECLARACION -> Let Mut Id dosPuntos I64 igual EXPRESION . ptComa
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    ptComa          shift and go to state 236
    mas             shift and go to state 60
    menos           shift and go to state 61
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64
    menorQue        shift and go to state 65
    mayorQue        shift and go to state 66
    menorIgual      shift and go to state 67
    mayorIgual      shift and go to state 68
    dobleIgual      shift and go to state 69
    diferenteQue    shift and go to state 70
    And             shift and go to state 71
    Or              shift and go to state 72
    AS              shift and go to state 73
    punto           shift and go to state 74


state 209

    (20) DECLARACION -> Let Mut Id dosPuntos F64 igual EXPRESION . ptComa
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    ptComa          shift and go to state 237
    mas             shift and go to state 60
    menos           shift and go to state 61
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64
    menorQue        shift and go to state 65
    mayorQue        shift and go to state 66
    menorIgual      shift and go to state 67
    mayorIgual      shift and go to state 68
    dobleIgual      shift and go to state 69
    diferenteQue    shift and go to state 70
    And             shift and go to state 71
    Or              shift and go to state 72
    AS              shift and go to state 73
    punto           shift and go to state 74


state 210

    (21) DECLARACION -> Let Mut Id dosPuntos StrA igual EXPRESION . ptComa
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    ptComa          shift and go to state 238
    mas             shift and go to state 60
    menos           shift and go to state 61
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64
    menorQue        shift and go to state 65
    mayorQue        shift and go to state 66
    menorIgual      shift and go to state 67
    mayorIgual      shift and go to state 68
    dobleIgual      shift and go to state 69
    diferenteQue    shift and go to state 70
    And             shift and go to state 71
    Or              shift and go to state 72
    AS              shift and go to state 73
    punto           shift and go to state 74


state 211

    (22) DECLARACION -> Let Mut Id dosPuntos Str igual EXPRESION . ptComa
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    ptComa          shift and go to state 239
    mas             shift and go to state 60
    menos           shift and go to state 61
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64
    menorQue        shift and go to state 65
    mayorQue        shift and go to state 66
    menorIgual      shift and go to state 67
    mayorIgual      shift and go to state 68
    dobleIgual      shift and go to state 69
    diferenteQue    shift and go to state 70
    And             shift and go to state 71
    Or              shift and go to state 72
    AS              shift and go to state 73
    punto           shift and go to state 74


state 212

    (23) DECLARACION -> Let Mut Id dosPuntos Bool igual EXPRESION . ptComa
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    ptComa          shift and go to state 240
    mas             shift and go to state 60
    menos           shift and go to state 61
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64
    menorQue        shift and go to state 65
    mayorQue        shift and go to state 66
    menorIgual      shift and go to state 67
    mayorIgual      shift and go to state 68
    dobleIgual      shift and go to state 69
    diferenteQue    shift and go to state 70
    And             shift and go to state 71
    Or              shift and go to state 72
    AS              shift and go to state 73
    punto           shift and go to state 74


state 213

    (24) DECLARACION -> Let Mut Id dosPuntos CharAux igual EXPRESION . ptComa
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    ptComa          shift and go to state 241
    mas             shift and go to state 60
    menos           shift and go to state 61
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64
    menorQue        shift and go to state 65
    mayorQue        shift and go to state 66
    menorIgual      shift and go to state 67
    mayorIgual      shift and go to state 68
    dobleIgual      shift and go to state 69
    diferenteQue    shift and go to state 70
    And             shift and go to state 71
    Or              shift and go to state 72
    AS              shift and go to state 73
    punto           shift and go to state 74


state 214

    (37) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 . mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (43) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 . mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    mayorQue        shift and go to state 242


state 215

    (38) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 . mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (44) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 . mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    mayorQue        shift and go to state 243


state 216

    (39) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA . mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (45) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA . mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    mayorQue        shift and go to state 244


state 217

    (40) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str . mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (46) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str . mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    mayorQue        shift and go to state 245


state 218

    (41) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool . mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (47) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool . mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    mayorQue        shift and go to state 246


state 219

    (42) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux . mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (48) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux . mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    mayorQue        shift and go to state 247


state 220

    (58) ASIGNACION -> Id CorA EXPRESION CorC igual EXPRESION ptComa .

    llaveC          reduce using rule 58 (ASIGNACION -> Id CorA EXPRESION CorC igual EXPRESION ptComa .)
    Let             reduce using rule 58 (ASIGNACION -> Id CorA EXPRESION CorC igual EXPRESION ptComa .)
    If              reduce using rule 58 (ASIGNACION -> Id CorA EXPRESION CorC igual EXPRESION ptComa .)
    Id              reduce using rule 58 (ASIGNACION -> Id CorA EXPRESION CorC igual EXPRESION ptComa .)
    PrintLn         reduce using rule 58 (ASIGNACION -> Id CorA EXPRESION CorC igual EXPRESION ptComa .)


state 221

    (60) PUSH -> Id punto Push ParA EXPRESION ParC ptComa .

    llaveC          reduce using rule 60 (PUSH -> Id punto Push ParA EXPRESION ParC ptComa .)
    Let             reduce using rule 60 (PUSH -> Id punto Push ParA EXPRESION ParC ptComa .)
    If              reduce using rule 60 (PUSH -> Id punto Push ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 60 (PUSH -> Id punto Push ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 60 (PUSH -> Id punto Push ParA EXPRESION ParC ptComa .)


state 222

    (62) INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION . ParC ptComa
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    ParC            shift and go to state 248
    mas             shift and go to state 60
    menos           shift and go to state 61
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64
    menorQue        shift and go to state 65
    mayorQue        shift and go to state 66
    menorIgual      shift and go to state 67
    mayorIgual      shift and go to state 68
    dobleIgual      shift and go to state 69
    diferenteQue    shift and go to state 70
    And             shift and go to state 71
    Or              shift and go to state 72
    AS              shift and go to state 73
    punto           shift and go to state 74


state 223

    (51) ELSEIF -> ELSEIF Else If EXPRESION . BLOQUE
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC
    (55) BLOQUE -> . llaveA INSTRUCCIONES llaveC

    mas             shift and go to state 60
    menos           shift and go to state 61
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64
    menorQue        shift and go to state 65
    mayorQue        shift and go to state 66
    menorIgual      shift and go to state 67
    mayorIgual      shift and go to state 68
    dobleIgual      shift and go to state 69
    diferenteQue    shift and go to state 70
    And             shift and go to state 71
    Or              shift and go to state 72
    AS              shift and go to state 73
    punto           shift and go to state 74
    llaveA          shift and go to state 16

    BLOQUE                         shift and go to state 249

state 224

    (75) EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION . Coma EXPRESION ParC
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    Coma            shift and go to state 250
    mas             shift and go to state 60
    menos           shift and go to state 61
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64
    menorQue        shift and go to state 65
    mayorQue        shift and go to state 66
    menorIgual      shift and go to state 67
    mayorIgual      shift and go to state 68
    dobleIgual      shift and go to state 69
    diferenteQue    shift and go to state 70
    And             shift and go to state 71
    Or              shift and go to state 72
    AS              shift and go to state 73
    punto           shift and go to state 74


state 225

    (76) EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION . Coma EXPRESION ParC
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    Coma            shift and go to state 251
    mas             shift and go to state 60
    menos           shift and go to state 61
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64
    menorQue        shift and go to state 65
    mayorQue        shift and go to state 66
    menorIgual      shift and go to state 67
    mayorIgual      shift and go to state 68
    dobleIgual      shift and go to state 69
    diferenteQue    shift and go to state 70
    And             shift and go to state 71
    Or              shift and go to state 72
    AS              shift and go to state 73
    punto           shift and go to state 74


state 226

    (66) COMASEX -> COMASEX Coma EXPRESION .
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    CorC            reduce using rule 66 (COMASEX -> COMASEX Coma EXPRESION .)
    Coma            reduce using rule 66 (COMASEX -> COMASEX Coma EXPRESION .)
    ParC            reduce using rule 66 (COMASEX -> COMASEX Coma EXPRESION .)
    mas             shift and go to state 60
    menos           shift and go to state 61
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64
    menorQue        shift and go to state 65
    mayorQue        shift and go to state 66
    menorIgual      shift and go to state 67
    mayorIgual      shift and go to state 68
    dobleIgual      shift and go to state 69
    diferenteQue    shift and go to state 70
    And             shift and go to state 71
    Or              shift and go to state 72
    AS              shift and go to state 73
    punto           shift and go to state 74


state 227

    (92) EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION . CorC
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    CorC            shift and go to state 252
    mas             shift and go to state 60
    menos           shift and go to state 61
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64
    menorQue        shift and go to state 65
    mayorQue        shift and go to state 66
    menorIgual      shift and go to state 67
    mayorIgual      shift and go to state 68
    dobleIgual      shift and go to state 69
    diferenteQue    shift and go to state 70
    And             shift and go to state 71
    Or              shift and go to state 72
    AS              shift and go to state 73
    punto           shift and go to state 74


state 228

    (94) EXPRESION -> Id punto Remove ParA EXPRESION ParC .

    mas             reduce using rule 94 (EXPRESION -> Id punto Remove ParA EXPRESION ParC .)
    menos           reduce using rule 94 (EXPRESION -> Id punto Remove ParA EXPRESION ParC .)
    por             reduce using rule 94 (EXPRESION -> Id punto Remove ParA EXPRESION ParC .)
    dividido        reduce using rule 94 (EXPRESION -> Id punto Remove ParA EXPRESION ParC .)
    modulo          reduce using rule 94 (EXPRESION -> Id punto Remove ParA EXPRESION ParC .)
    menorQue        reduce using rule 94 (EXPRESION -> Id punto Remove ParA EXPRESION ParC .)
    mayorQue        reduce using rule 94 (EXPRESION -> Id punto Remove ParA EXPRESION ParC .)
    menorIgual      reduce using rule 94 (EXPRESION -> Id punto Remove ParA EXPRESION ParC .)
    mayorIgual      reduce using rule 94 (EXPRESION -> Id punto Remove ParA EXPRESION ParC .)
    dobleIgual      reduce using rule 94 (EXPRESION -> Id punto Remove ParA EXPRESION ParC .)
    diferenteQue    reduce using rule 94 (EXPRESION -> Id punto Remove ParA EXPRESION ParC .)
    And             reduce using rule 94 (EXPRESION -> Id punto Remove ParA EXPRESION ParC .)
    Or              reduce using rule 94 (EXPRESION -> Id punto Remove ParA EXPRESION ParC .)
    AS              reduce using rule 94 (EXPRESION -> Id punto Remove ParA EXPRESION ParC .)
    punto           reduce using rule 94 (EXPRESION -> Id punto Remove ParA EXPRESION ParC .)
    llaveA          reduce using rule 94 (EXPRESION -> Id punto Remove ParA EXPRESION ParC .)
    ptComa          reduce using rule 94 (EXPRESION -> Id punto Remove ParA EXPRESION ParC .)
    CorC            reduce using rule 94 (EXPRESION -> Id punto Remove ParA EXPRESION ParC .)
    ParC            reduce using rule 94 (EXPRESION -> Id punto Remove ParA EXPRESION ParC .)
    Coma            reduce using rule 94 (EXPRESION -> Id punto Remove ParA EXPRESION ParC .)


state 229

    (65) IMPRIMIR -> PrintLn not ParA String Coma COMASEX ParC . ptComa

    ptComa          shift and go to state 253


state 230

    (25) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual . VEC dosPuntos dosPuntos New ParA ParC ptComa
    (31) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual . VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    VEC             shift and go to state 254


state 231

    (26) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual . VEC dosPuntos dosPuntos New ParA ParC ptComa
    (32) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual . VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    VEC             shift and go to state 255


state 232

    (27) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual . VEC dosPuntos dosPuntos New ParA ParC ptComa
    (33) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual . VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    VEC             shift and go to state 256


state 233

    (28) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual . VEC dosPuntos dosPuntos New ParA ParC ptComa
    (34) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual . VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    VEC             shift and go to state 257


state 234

    (29) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual . VEC dosPuntos dosPuntos New ParA ParC ptComa
    (35) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual . VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    VEC             shift and go to state 258


state 235

    (30) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual . VEC dosPuntos dosPuntos New ParA ParC ptComa
    (36) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual . VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    VEC             shift and go to state 259


state 236

    (19) DECLARACION -> Let Mut Id dosPuntos I64 igual EXPRESION ptComa .

    llaveC          reduce using rule 19 (DECLARACION -> Let Mut Id dosPuntos I64 igual EXPRESION ptComa .)
    Let             reduce using rule 19 (DECLARACION -> Let Mut Id dosPuntos I64 igual EXPRESION ptComa .)
    If              reduce using rule 19 (DECLARACION -> Let Mut Id dosPuntos I64 igual EXPRESION ptComa .)
    Id              reduce using rule 19 (DECLARACION -> Let Mut Id dosPuntos I64 igual EXPRESION ptComa .)
    PrintLn         reduce using rule 19 (DECLARACION -> Let Mut Id dosPuntos I64 igual EXPRESION ptComa .)


state 237

    (20) DECLARACION -> Let Mut Id dosPuntos F64 igual EXPRESION ptComa .

    llaveC          reduce using rule 20 (DECLARACION -> Let Mut Id dosPuntos F64 igual EXPRESION ptComa .)
    Let             reduce using rule 20 (DECLARACION -> Let Mut Id dosPuntos F64 igual EXPRESION ptComa .)
    If              reduce using rule 20 (DECLARACION -> Let Mut Id dosPuntos F64 igual EXPRESION ptComa .)
    Id              reduce using rule 20 (DECLARACION -> Let Mut Id dosPuntos F64 igual EXPRESION ptComa .)
    PrintLn         reduce using rule 20 (DECLARACION -> Let Mut Id dosPuntos F64 igual EXPRESION ptComa .)


state 238

    (21) DECLARACION -> Let Mut Id dosPuntos StrA igual EXPRESION ptComa .

    llaveC          reduce using rule 21 (DECLARACION -> Let Mut Id dosPuntos StrA igual EXPRESION ptComa .)
    Let             reduce using rule 21 (DECLARACION -> Let Mut Id dosPuntos StrA igual EXPRESION ptComa .)
    If              reduce using rule 21 (DECLARACION -> Let Mut Id dosPuntos StrA igual EXPRESION ptComa .)
    Id              reduce using rule 21 (DECLARACION -> Let Mut Id dosPuntos StrA igual EXPRESION ptComa .)
    PrintLn         reduce using rule 21 (DECLARACION -> Let Mut Id dosPuntos StrA igual EXPRESION ptComa .)


state 239

    (22) DECLARACION -> Let Mut Id dosPuntos Str igual EXPRESION ptComa .

    llaveC          reduce using rule 22 (DECLARACION -> Let Mut Id dosPuntos Str igual EXPRESION ptComa .)
    Let             reduce using rule 22 (DECLARACION -> Let Mut Id dosPuntos Str igual EXPRESION ptComa .)
    If              reduce using rule 22 (DECLARACION -> Let Mut Id dosPuntos Str igual EXPRESION ptComa .)
    Id              reduce using rule 22 (DECLARACION -> Let Mut Id dosPuntos Str igual EXPRESION ptComa .)
    PrintLn         reduce using rule 22 (DECLARACION -> Let Mut Id dosPuntos Str igual EXPRESION ptComa .)


state 240

    (23) DECLARACION -> Let Mut Id dosPuntos Bool igual EXPRESION ptComa .

    llaveC          reduce using rule 23 (DECLARACION -> Let Mut Id dosPuntos Bool igual EXPRESION ptComa .)
    Let             reduce using rule 23 (DECLARACION -> Let Mut Id dosPuntos Bool igual EXPRESION ptComa .)
    If              reduce using rule 23 (DECLARACION -> Let Mut Id dosPuntos Bool igual EXPRESION ptComa .)
    Id              reduce using rule 23 (DECLARACION -> Let Mut Id dosPuntos Bool igual EXPRESION ptComa .)
    PrintLn         reduce using rule 23 (DECLARACION -> Let Mut Id dosPuntos Bool igual EXPRESION ptComa .)


state 241

    (24) DECLARACION -> Let Mut Id dosPuntos CharAux igual EXPRESION ptComa .

    llaveC          reduce using rule 24 (DECLARACION -> Let Mut Id dosPuntos CharAux igual EXPRESION ptComa .)
    Let             reduce using rule 24 (DECLARACION -> Let Mut Id dosPuntos CharAux igual EXPRESION ptComa .)
    If              reduce using rule 24 (DECLARACION -> Let Mut Id dosPuntos CharAux igual EXPRESION ptComa .)
    Id              reduce using rule 24 (DECLARACION -> Let Mut Id dosPuntos CharAux igual EXPRESION ptComa .)
    PrintLn         reduce using rule 24 (DECLARACION -> Let Mut Id dosPuntos CharAux igual EXPRESION ptComa .)


state 242

    (37) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue . igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (43) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue . igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 260


state 243

    (38) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue . igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (44) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue . igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 261


state 244

    (39) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue . igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (45) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue . igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 262


state 245

    (40) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue . igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (46) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue . igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 263


state 246

    (41) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue . igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (47) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue . igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 264


state 247

    (42) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue . igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (48) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue . igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 265


state 248

    (62) INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC . ptComa

    ptComa          shift and go to state 266


state 249

    (51) ELSEIF -> ELSEIF Else If EXPRESION BLOQUE .

    Else            reduce using rule 51 (ELSEIF -> ELSEIF Else If EXPRESION BLOQUE .)
    llaveC          reduce using rule 51 (ELSEIF -> ELSEIF Else If EXPRESION BLOQUE .)
    Let             reduce using rule 51 (ELSEIF -> ELSEIF Else If EXPRESION BLOQUE .)
    If              reduce using rule 51 (ELSEIF -> ELSEIF Else If EXPRESION BLOQUE .)
    Id              reduce using rule 51 (ELSEIF -> ELSEIF Else If EXPRESION BLOQUE .)
    PrintLn         reduce using rule 51 (ELSEIF -> ELSEIF Else If EXPRESION BLOQUE .)


state 250

    (75) EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma . EXPRESION ParC
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 267
    INSERTVEC                      shift and go to state 44

state 251

    (76) EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma . EXPRESION ParC
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 268
    INSERTVEC                      shift and go to state 44

state 252

    (92) EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .

    mas             reduce using rule 92 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    menos           reduce using rule 92 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    por             reduce using rule 92 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    dividido        reduce using rule 92 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    modulo          reduce using rule 92 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    menorQue        reduce using rule 92 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    mayorQue        reduce using rule 92 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    menorIgual      reduce using rule 92 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    mayorIgual      reduce using rule 92 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    dobleIgual      reduce using rule 92 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    diferenteQue    reduce using rule 92 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    And             reduce using rule 92 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    Or              reduce using rule 92 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    AS              reduce using rule 92 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    punto           reduce using rule 92 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    llaveA          reduce using rule 92 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    ptComa          reduce using rule 92 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    CorC            reduce using rule 92 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    ParC            reduce using rule 92 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    Coma            reduce using rule 92 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)


state 253

    (65) IMPRIMIR -> PrintLn not ParA String Coma COMASEX ParC ptComa .

    llaveC          reduce using rule 65 (IMPRIMIR -> PrintLn not ParA String Coma COMASEX ParC ptComa .)
    Let             reduce using rule 65 (IMPRIMIR -> PrintLn not ParA String Coma COMASEX ParC ptComa .)
    If              reduce using rule 65 (IMPRIMIR -> PrintLn not ParA String Coma COMASEX ParC ptComa .)
    Id              reduce using rule 65 (IMPRIMIR -> PrintLn not ParA String Coma COMASEX ParC ptComa .)
    PrintLn         reduce using rule 65 (IMPRIMIR -> PrintLn not ParA String Coma COMASEX ParC ptComa .)


state 254

    (25) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC . dosPuntos dosPuntos New ParA ParC ptComa
    (31) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC . dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 269


state 255

    (26) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC . dosPuntos dosPuntos New ParA ParC ptComa
    (32) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC . dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 270


state 256

    (27) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC . dosPuntos dosPuntos New ParA ParC ptComa
    (33) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC . dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 271


state 257

    (28) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC . dosPuntos dosPuntos New ParA ParC ptComa
    (34) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC . dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 272


state 258

    (29) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC . dosPuntos dosPuntos New ParA ParC ptComa
    (35) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC . dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 273


state 259

    (30) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC . dosPuntos dosPuntos New ParA ParC ptComa
    (36) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC . dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 274


state 260

    (37) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual . VEC dosPuntos dosPuntos New ParA ParC ptComa
    (43) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual . VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    VEC             shift and go to state 275


state 261

    (38) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual . VEC dosPuntos dosPuntos New ParA ParC ptComa
    (44) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual . VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    VEC             shift and go to state 276


state 262

    (39) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual . VEC dosPuntos dosPuntos New ParA ParC ptComa
    (45) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual . VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    VEC             shift and go to state 277


state 263

    (40) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual . VEC dosPuntos dosPuntos New ParA ParC ptComa
    (46) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual . VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    VEC             shift and go to state 278


state 264

    (41) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual . VEC dosPuntos dosPuntos New ParA ParC ptComa
    (47) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual . VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    VEC             shift and go to state 279


state 265

    (42) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual . VEC dosPuntos dosPuntos New ParA ParC ptComa
    (48) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual . VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    VEC             shift and go to state 280


state 266

    (62) INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .

    llaveC          reduce using rule 62 (INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .)
    Let             reduce using rule 62 (INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .)
    If              reduce using rule 62 (INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .)
    Id              reduce using rule 62 (INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 62 (INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .)
    mas             reduce using rule 62 (INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .)
    menos           reduce using rule 62 (INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .)
    por             reduce using rule 62 (INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .)
    dividido        reduce using rule 62 (INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .)
    modulo          reduce using rule 62 (INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .)
    menorQue        reduce using rule 62 (INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .)
    mayorQue        reduce using rule 62 (INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .)
    menorIgual      reduce using rule 62 (INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .)
    mayorIgual      reduce using rule 62 (INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .)
    dobleIgual      reduce using rule 62 (INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .)
    diferenteQue    reduce using rule 62 (INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .)
    And             reduce using rule 62 (INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .)
    Or              reduce using rule 62 (INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .)
    AS              reduce using rule 62 (INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .)
    punto           reduce using rule 62 (INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .)
    llaveA          reduce using rule 62 (INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .)
    ptComa          reduce using rule 62 (INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .)
    CorC            reduce using rule 62 (INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .)
    ParC            reduce using rule 62 (INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .)
    Coma            reduce using rule 62 (INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .)


state 267

    (75) EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION . ParC
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    ParC            shift and go to state 281
    mas             shift and go to state 60
    menos           shift and go to state 61
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64
    menorQue        shift and go to state 65
    mayorQue        shift and go to state 66
    menorIgual      shift and go to state 67
    mayorIgual      shift and go to state 68
    dobleIgual      shift and go to state 69
    diferenteQue    shift and go to state 70
    And             shift and go to state 71
    Or              shift and go to state 72
    AS              shift and go to state 73
    punto           shift and go to state 74


state 268

    (76) EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION . ParC
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    ParC            shift and go to state 282
    mas             shift and go to state 60
    menos           shift and go to state 61
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64
    menorQue        shift and go to state 65
    mayorQue        shift and go to state 66
    menorIgual      shift and go to state 67
    mayorIgual      shift and go to state 68
    dobleIgual      shift and go to state 69
    diferenteQue    shift and go to state 70
    And             shift and go to state 71
    Or              shift and go to state 72
    AS              shift and go to state 73
    punto           shift and go to state 74


state 269

    (25) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos . dosPuntos New ParA ParC ptComa
    (31) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos . dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 283


state 270

    (26) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos . dosPuntos New ParA ParC ptComa
    (32) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos . dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 284


state 271

    (27) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos . dosPuntos New ParA ParC ptComa
    (33) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos . dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 285


state 272

    (28) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos . dosPuntos New ParA ParC ptComa
    (34) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos . dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 286


state 273

    (29) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos . dosPuntos New ParA ParC ptComa
    (35) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos . dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 287


state 274

    (30) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos . dosPuntos New ParA ParC ptComa
    (36) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos . dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 288


state 275

    (37) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC . dosPuntos dosPuntos New ParA ParC ptComa
    (43) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC . dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 289


state 276

    (38) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC . dosPuntos dosPuntos New ParA ParC ptComa
    (44) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC . dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 290


state 277

    (39) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC . dosPuntos dosPuntos New ParA ParC ptComa
    (45) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC . dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 291


state 278

    (40) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC . dosPuntos dosPuntos New ParA ParC ptComa
    (46) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC . dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 292


state 279

    (41) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC . dosPuntos dosPuntos New ParA ParC ptComa
    (47) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC . dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 293


state 280

    (42) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC . dosPuntos dosPuntos New ParA ParC ptComa
    (48) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC . dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 294


state 281

    (75) EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .

    mas             reduce using rule 75 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    menos           reduce using rule 75 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    por             reduce using rule 75 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    dividido        reduce using rule 75 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    modulo          reduce using rule 75 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    menorQue        reduce using rule 75 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    mayorQue        reduce using rule 75 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    menorIgual      reduce using rule 75 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    mayorIgual      reduce using rule 75 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    dobleIgual      reduce using rule 75 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    diferenteQue    reduce using rule 75 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    And             reduce using rule 75 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    Or              reduce using rule 75 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    AS              reduce using rule 75 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    punto           reduce using rule 75 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    llaveA          reduce using rule 75 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    ptComa          reduce using rule 75 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    CorC            reduce using rule 75 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    ParC            reduce using rule 75 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    Coma            reduce using rule 75 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)


state 282

    (76) EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .

    mas             reduce using rule 76 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    menos           reduce using rule 76 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    por             reduce using rule 76 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    dividido        reduce using rule 76 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    modulo          reduce using rule 76 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    menorQue        reduce using rule 76 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    mayorQue        reduce using rule 76 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    menorIgual      reduce using rule 76 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    mayorIgual      reduce using rule 76 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    dobleIgual      reduce using rule 76 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    diferenteQue    reduce using rule 76 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    And             reduce using rule 76 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    Or              reduce using rule 76 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    AS              reduce using rule 76 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    punto           reduce using rule 76 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    llaveA          reduce using rule 76 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    ptComa          reduce using rule 76 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    CorC            reduce using rule 76 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    ParC            reduce using rule 76 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    Coma            reduce using rule 76 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)


state 283

    (25) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos . New ParA ParC ptComa
    (31) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos . Capacidad ParA EXPRESION ParC ptComa

    New             shift and go to state 295
    Capacidad       shift and go to state 296


state 284

    (26) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos . New ParA ParC ptComa
    (32) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos . Capacidad ParA EXPRESION ParC ptComa

    New             shift and go to state 297
    Capacidad       shift and go to state 298


state 285

    (27) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos . New ParA ParC ptComa
    (33) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos . Capacidad ParA EXPRESION ParC ptComa

    New             shift and go to state 299
    Capacidad       shift and go to state 300


state 286

    (28) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos . New ParA ParC ptComa
    (34) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos . Capacidad ParA EXPRESION ParC ptComa

    New             shift and go to state 301
    Capacidad       shift and go to state 302


state 287

    (29) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos . New ParA ParC ptComa
    (35) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos . Capacidad ParA EXPRESION ParC ptComa

    New             shift and go to state 303
    Capacidad       shift and go to state 304


state 288

    (30) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos . New ParA ParC ptComa
    (36) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos . Capacidad ParA EXPRESION ParC ptComa

    New             shift and go to state 305
    Capacidad       shift and go to state 306


state 289

    (37) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos . dosPuntos New ParA ParC ptComa
    (43) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos . dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 307


state 290

    (38) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos . dosPuntos New ParA ParC ptComa
    (44) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos . dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 308


state 291

    (39) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos . dosPuntos New ParA ParC ptComa
    (45) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos . dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 309


state 292

    (40) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos . dosPuntos New ParA ParC ptComa
    (46) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos . dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 310


state 293

    (41) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos . dosPuntos New ParA ParC ptComa
    (47) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos . dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 311


state 294

    (42) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos . dosPuntos New ParA ParC ptComa
    (48) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos . dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 312


state 295

    (25) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New . ParA ParC ptComa

    ParA            shift and go to state 313


state 296

    (31) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad . ParA EXPRESION ParC ptComa

    ParA            shift and go to state 314


state 297

    (26) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New . ParA ParC ptComa

    ParA            shift and go to state 315


state 298

    (32) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad . ParA EXPRESION ParC ptComa

    ParA            shift and go to state 316


state 299

    (27) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New . ParA ParC ptComa

    ParA            shift and go to state 317


state 300

    (33) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad . ParA EXPRESION ParC ptComa

    ParA            shift and go to state 318


state 301

    (28) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New . ParA ParC ptComa

    ParA            shift and go to state 319


state 302

    (34) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad . ParA EXPRESION ParC ptComa

    ParA            shift and go to state 320


state 303

    (29) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New . ParA ParC ptComa

    ParA            shift and go to state 321


state 304

    (35) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad . ParA EXPRESION ParC ptComa

    ParA            shift and go to state 322


state 305

    (30) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New . ParA ParC ptComa

    ParA            shift and go to state 323


state 306

    (36) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad . ParA EXPRESION ParC ptComa

    ParA            shift and go to state 324


state 307

    (37) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos . New ParA ParC ptComa
    (43) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos . Capacidad ParA EXPRESION ParC ptComa

    New             shift and go to state 325
    Capacidad       shift and go to state 326


state 308

    (38) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos . New ParA ParC ptComa
    (44) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos . Capacidad ParA EXPRESION ParC ptComa

    New             shift and go to state 327
    Capacidad       shift and go to state 328


state 309

    (39) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos . New ParA ParC ptComa
    (45) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos . Capacidad ParA EXPRESION ParC ptComa

    New             shift and go to state 329
    Capacidad       shift and go to state 330


state 310

    (40) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos . New ParA ParC ptComa
    (46) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos . Capacidad ParA EXPRESION ParC ptComa

    New             shift and go to state 331
    Capacidad       shift and go to state 332


state 311

    (41) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos . New ParA ParC ptComa
    (47) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos . Capacidad ParA EXPRESION ParC ptComa

    New             shift and go to state 333
    Capacidad       shift and go to state 334


state 312

    (42) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos . New ParA ParC ptComa
    (48) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos . Capacidad ParA EXPRESION ParC ptComa

    New             shift and go to state 335
    Capacidad       shift and go to state 336


state 313

    (25) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA . ParC ptComa

    ParC            shift and go to state 337


state 314

    (31) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA . EXPRESION ParC ptComa
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 338
    INSERTVEC                      shift and go to state 44

state 315

    (26) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA . ParC ptComa

    ParC            shift and go to state 339


state 316

    (32) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA . EXPRESION ParC ptComa
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 340
    INSERTVEC                      shift and go to state 44

state 317

    (27) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA . ParC ptComa

    ParC            shift and go to state 341


state 318

    (33) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA . EXPRESION ParC ptComa
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 342
    INSERTVEC                      shift and go to state 44

state 319

    (28) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA . ParC ptComa

    ParC            shift and go to state 343


state 320

    (34) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA . EXPRESION ParC ptComa
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 344
    INSERTVEC                      shift and go to state 44

state 321

    (29) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA . ParC ptComa

    ParC            shift and go to state 345


state 322

    (35) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA . EXPRESION ParC ptComa
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 346
    INSERTVEC                      shift and go to state 44

state 323

    (30) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA . ParC ptComa

    ParC            shift and go to state 347


state 324

    (36) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA . EXPRESION ParC ptComa
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 348
    INSERTVEC                      shift and go to state 44

state 325

    (37) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New . ParA ParC ptComa

    ParA            shift and go to state 349


state 326

    (43) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad . ParA EXPRESION ParC ptComa

    ParA            shift and go to state 350


state 327

    (38) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New . ParA ParC ptComa

    ParA            shift and go to state 351


state 328

    (44) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad . ParA EXPRESION ParC ptComa

    ParA            shift and go to state 352


state 329

    (39) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New . ParA ParC ptComa

    ParA            shift and go to state 353


state 330

    (45) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad . ParA EXPRESION ParC ptComa

    ParA            shift and go to state 354


state 331

    (40) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New . ParA ParC ptComa

    ParA            shift and go to state 355


state 332

    (46) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad . ParA EXPRESION ParC ptComa

    ParA            shift and go to state 356


state 333

    (41) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New . ParA ParC ptComa

    ParA            shift and go to state 357


state 334

    (47) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad . ParA EXPRESION ParC ptComa

    ParA            shift and go to state 358


state 335

    (42) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New . ParA ParC ptComa

    ParA            shift and go to state 359


state 336

    (48) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad . ParA EXPRESION ParC ptComa

    ParA            shift and go to state 360


state 337

    (25) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC . ptComa

    ptComa          shift and go to state 361


state 338

    (31) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION . ParC ptComa
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    ParC            shift and go to state 362
    mas             shift and go to state 60
    menos           shift and go to state 61
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64
    menorQue        shift and go to state 65
    mayorQue        shift and go to state 66
    menorIgual      shift and go to state 67
    mayorIgual      shift and go to state 68
    dobleIgual      shift and go to state 69
    diferenteQue    shift and go to state 70
    And             shift and go to state 71
    Or              shift and go to state 72
    AS              shift and go to state 73
    punto           shift and go to state 74


state 339

    (26) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC . ptComa

    ptComa          shift and go to state 363


state 340

    (32) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION . ParC ptComa
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    ParC            shift and go to state 364
    mas             shift and go to state 60
    menos           shift and go to state 61
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64
    menorQue        shift and go to state 65
    mayorQue        shift and go to state 66
    menorIgual      shift and go to state 67
    mayorIgual      shift and go to state 68
    dobleIgual      shift and go to state 69
    diferenteQue    shift and go to state 70
    And             shift and go to state 71
    Or              shift and go to state 72
    AS              shift and go to state 73
    punto           shift and go to state 74


state 341

    (27) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC . ptComa

    ptComa          shift and go to state 365


state 342

    (33) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION . ParC ptComa
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    ParC            shift and go to state 366
    mas             shift and go to state 60
    menos           shift and go to state 61
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64
    menorQue        shift and go to state 65
    mayorQue        shift and go to state 66
    menorIgual      shift and go to state 67
    mayorIgual      shift and go to state 68
    dobleIgual      shift and go to state 69
    diferenteQue    shift and go to state 70
    And             shift and go to state 71
    Or              shift and go to state 72
    AS              shift and go to state 73
    punto           shift and go to state 74


state 343

    (28) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC . ptComa

    ptComa          shift and go to state 367


state 344

    (34) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION . ParC ptComa
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    ParC            shift and go to state 368
    mas             shift and go to state 60
    menos           shift and go to state 61
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64
    menorQue        shift and go to state 65
    mayorQue        shift and go to state 66
    menorIgual      shift and go to state 67
    mayorIgual      shift and go to state 68
    dobleIgual      shift and go to state 69
    diferenteQue    shift and go to state 70
    And             shift and go to state 71
    Or              shift and go to state 72
    AS              shift and go to state 73
    punto           shift and go to state 74


state 345

    (29) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC . ptComa

    ptComa          shift and go to state 369


state 346

    (35) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION . ParC ptComa
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    ParC            shift and go to state 370
    mas             shift and go to state 60
    menos           shift and go to state 61
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64
    menorQue        shift and go to state 65
    mayorQue        shift and go to state 66
    menorIgual      shift and go to state 67
    mayorIgual      shift and go to state 68
    dobleIgual      shift and go to state 69
    diferenteQue    shift and go to state 70
    And             shift and go to state 71
    Or              shift and go to state 72
    AS              shift and go to state 73
    punto           shift and go to state 74


state 347

    (30) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC . ptComa

    ptComa          shift and go to state 371


state 348

    (36) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION . ParC ptComa
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    ParC            shift and go to state 372
    mas             shift and go to state 60
    menos           shift and go to state 61
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64
    menorQue        shift and go to state 65
    mayorQue        shift and go to state 66
    menorIgual      shift and go to state 67
    mayorIgual      shift and go to state 68
    dobleIgual      shift and go to state 69
    diferenteQue    shift and go to state 70
    And             shift and go to state 71
    Or              shift and go to state 72
    AS              shift and go to state 73
    punto           shift and go to state 74


state 349

    (37) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA . ParC ptComa

    ParC            shift and go to state 373


state 350

    (43) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA . EXPRESION ParC ptComa
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 374
    INSERTVEC                      shift and go to state 44

state 351

    (38) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA . ParC ptComa

    ParC            shift and go to state 375


state 352

    (44) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA . EXPRESION ParC ptComa
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 376
    INSERTVEC                      shift and go to state 44

state 353

    (39) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA . ParC ptComa

    ParC            shift and go to state 377


state 354

    (45) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA . EXPRESION ParC ptComa
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 378
    INSERTVEC                      shift and go to state 44

state 355

    (40) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA . ParC ptComa

    ParC            shift and go to state 379


state 356

    (46) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA . EXPRESION ParC ptComa
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 380
    INSERTVEC                      shift and go to state 44

state 357

    (41) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA . ParC ptComa

    ParC            shift and go to state 381


state 358

    (47) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA . EXPRESION ParC ptComa
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 382
    INSERTVEC                      shift and go to state 44

state 359

    (42) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA . ParC ptComa

    ParC            shift and go to state 383


state 360

    (48) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA . EXPRESION ParC ptComa
    (68) EXPRESION -> . EXPRESION mas EXPRESION
    (69) EXPRESION -> . EXPRESION menos EXPRESION
    (70) EXPRESION -> . EXPRESION por EXPRESION
    (71) EXPRESION -> . EXPRESION dividido EXPRESION
    (72) EXPRESION -> . EXPRESION modulo EXPRESION
    (73) EXPRESION -> . menos EXPRESION
    (74) EXPRESION -> . ParA EXPRESION ParC
    (75) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (76) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (77) EXPRESION -> . EXPRESION menorQue EXPRESION
    (78) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (79) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (80) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (81) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (82) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (83) EXPRESION -> . EXPRESION And EXPRESION
    (84) EXPRESION -> . EXPRESION Or EXPRESION
    (85) EXPRESION -> . not EXPRESION
    (86) EXPRESION -> . EXPRESION AS I64
    (87) EXPRESION -> . EXPRESION AS F64
    (88) EXPRESION -> . EXPRESION punto To_string ParA ParC
    (89) EXPRESION -> . EXPRESION punto Abs ParA ParC
    (90) EXPRESION -> . EXPRESION punto Sqrt ParA ParC
    (91) EXPRESION -> . vec not CorA COMASEX CorC
    (92) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (93) EXPRESION -> . INSERTVEC
    (94) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (95) EXPRESION -> . Float
    (96) EXPRESION -> . Entero
    (97) EXPRESION -> . Booleano
    (98) EXPRESION -> . String
    (99) EXPRESION -> . Char
    (100) EXPRESION -> . Id
    (101) EXPRESION -> . Id CorA EXPRESION CorC
    (62) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 38
    ParA            shift and go to state 39
    I64             shift and go to state 40
    F64             shift and go to state 41
    not             shift and go to state 42
    vec             shift and go to state 43
    Id              shift and go to state 45
    Float           shift and go to state 46
    Entero          shift and go to state 47
    Booleano        shift and go to state 48
    String          shift and go to state 49
    Char            shift and go to state 50

    EXPRESION                      shift and go to state 384
    INSERTVEC                      shift and go to state 44

state 361

    (25) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .

    llaveC          reduce using rule 25 (DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Let             reduce using rule 25 (DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    If              reduce using rule 25 (DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Id              reduce using rule 25 (DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    PrintLn         reduce using rule 25 (DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)


state 362

    (31) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 385


state 363

    (26) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .

    llaveC          reduce using rule 26 (DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Let             reduce using rule 26 (DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    If              reduce using rule 26 (DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Id              reduce using rule 26 (DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    PrintLn         reduce using rule 26 (DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)


state 364

    (32) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 386


state 365

    (27) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .

    llaveC          reduce using rule 27 (DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Let             reduce using rule 27 (DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    If              reduce using rule 27 (DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Id              reduce using rule 27 (DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    PrintLn         reduce using rule 27 (DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)


state 366

    (33) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 387


state 367

    (28) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .

    llaveC          reduce using rule 28 (DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Let             reduce using rule 28 (DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    If              reduce using rule 28 (DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Id              reduce using rule 28 (DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    PrintLn         reduce using rule 28 (DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)


state 368

    (34) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 388


state 369

    (29) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .

    llaveC          reduce using rule 29 (DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Let             reduce using rule 29 (DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    If              reduce using rule 29 (DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Id              reduce using rule 29 (DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    PrintLn         reduce using rule 29 (DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)


state 370

    (35) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 389


state 371

    (30) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .

    llaveC          reduce using rule 30 (DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Let             reduce using rule 30 (DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    If              reduce using rule 30 (DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Id              reduce using rule 30 (DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    PrintLn         reduce using rule 30 (DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)


state 372

    (36) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 390


state 373

    (37) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC . ptComa

    ptComa          shift and go to state 391


state 374

    (43) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION . ParC ptComa
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    ParC            shift and go to state 392
    mas             shift and go to state 60
    menos           shift and go to state 61
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64
    menorQue        shift and go to state 65
    mayorQue        shift and go to state 66
    menorIgual      shift and go to state 67
    mayorIgual      shift and go to state 68
    dobleIgual      shift and go to state 69
    diferenteQue    shift and go to state 70
    And             shift and go to state 71
    Or              shift and go to state 72
    AS              shift and go to state 73
    punto           shift and go to state 74


state 375

    (38) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC . ptComa

    ptComa          shift and go to state 393


state 376

    (44) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION . ParC ptComa
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    ParC            shift and go to state 394
    mas             shift and go to state 60
    menos           shift and go to state 61
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64
    menorQue        shift and go to state 65
    mayorQue        shift and go to state 66
    menorIgual      shift and go to state 67
    mayorIgual      shift and go to state 68
    dobleIgual      shift and go to state 69
    diferenteQue    shift and go to state 70
    And             shift and go to state 71
    Or              shift and go to state 72
    AS              shift and go to state 73
    punto           shift and go to state 74


state 377

    (39) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC . ptComa

    ptComa          shift and go to state 395


state 378

    (45) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION . ParC ptComa
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    ParC            shift and go to state 396
    mas             shift and go to state 60
    menos           shift and go to state 61
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64
    menorQue        shift and go to state 65
    mayorQue        shift and go to state 66
    menorIgual      shift and go to state 67
    mayorIgual      shift and go to state 68
    dobleIgual      shift and go to state 69
    diferenteQue    shift and go to state 70
    And             shift and go to state 71
    Or              shift and go to state 72
    AS              shift and go to state 73
    punto           shift and go to state 74


state 379

    (40) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC . ptComa

    ptComa          shift and go to state 397


state 380

    (46) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION . ParC ptComa
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    ParC            shift and go to state 398
    mas             shift and go to state 60
    menos           shift and go to state 61
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64
    menorQue        shift and go to state 65
    mayorQue        shift and go to state 66
    menorIgual      shift and go to state 67
    mayorIgual      shift and go to state 68
    dobleIgual      shift and go to state 69
    diferenteQue    shift and go to state 70
    And             shift and go to state 71
    Or              shift and go to state 72
    AS              shift and go to state 73
    punto           shift and go to state 74


state 381

    (41) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC . ptComa

    ptComa          shift and go to state 399


state 382

    (47) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION . ParC ptComa
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    ParC            shift and go to state 400
    mas             shift and go to state 60
    menos           shift and go to state 61
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64
    menorQue        shift and go to state 65
    mayorQue        shift and go to state 66
    menorIgual      shift and go to state 67
    mayorIgual      shift and go to state 68
    dobleIgual      shift and go to state 69
    diferenteQue    shift and go to state 70
    And             shift and go to state 71
    Or              shift and go to state 72
    AS              shift and go to state 73
    punto           shift and go to state 74


state 383

    (42) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC . ptComa

    ptComa          shift and go to state 401


state 384

    (48) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION . ParC ptComa
    (68) EXPRESION -> EXPRESION . mas EXPRESION
    (69) EXPRESION -> EXPRESION . menos EXPRESION
    (70) EXPRESION -> EXPRESION . por EXPRESION
    (71) EXPRESION -> EXPRESION . dividido EXPRESION
    (72) EXPRESION -> EXPRESION . modulo EXPRESION
    (77) EXPRESION -> EXPRESION . menorQue EXPRESION
    (78) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (79) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (80) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (81) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (82) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (83) EXPRESION -> EXPRESION . And EXPRESION
    (84) EXPRESION -> EXPRESION . Or EXPRESION
    (86) EXPRESION -> EXPRESION . AS I64
    (87) EXPRESION -> EXPRESION . AS F64
    (88) EXPRESION -> EXPRESION . punto To_string ParA ParC
    (89) EXPRESION -> EXPRESION . punto Abs ParA ParC
    (90) EXPRESION -> EXPRESION . punto Sqrt ParA ParC

    ParC            shift and go to state 402
    mas             shift and go to state 60
    menos           shift and go to state 61
    por             shift and go to state 62
    dividido        shift and go to state 63
    modulo          shift and go to state 64
    menorQue        shift and go to state 65
    mayorQue        shift and go to state 66
    menorIgual      shift and go to state 67
    mayorIgual      shift and go to state 68
    dobleIgual      shift and go to state 69
    diferenteQue    shift and go to state 70
    And             shift and go to state 71
    Or              shift and go to state 72
    AS              shift and go to state 73
    punto           shift and go to state 74


state 385

    (31) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .

    llaveC          reduce using rule 31 (DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Let             reduce using rule 31 (DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    If              reduce using rule 31 (DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 31 (DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 31 (DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)


state 386

    (32) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .

    llaveC          reduce using rule 32 (DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Let             reduce using rule 32 (DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    If              reduce using rule 32 (DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 32 (DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 32 (DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)


state 387

    (33) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .

    llaveC          reduce using rule 33 (DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Let             reduce using rule 33 (DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    If              reduce using rule 33 (DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 33 (DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 33 (DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)


state 388

    (34) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .

    llaveC          reduce using rule 34 (DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Let             reduce using rule 34 (DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    If              reduce using rule 34 (DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 34 (DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 34 (DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)


state 389

    (35) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .

    llaveC          reduce using rule 35 (DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Let             reduce using rule 35 (DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    If              reduce using rule 35 (DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 35 (DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 35 (DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)


state 390

    (36) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .

    llaveC          reduce using rule 36 (DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Let             reduce using rule 36 (DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    If              reduce using rule 36 (DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 36 (DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 36 (DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)


state 391

    (37) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .

    llaveC          reduce using rule 37 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Let             reduce using rule 37 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    If              reduce using rule 37 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Id              reduce using rule 37 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    PrintLn         reduce using rule 37 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)


state 392

    (43) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 403


state 393

    (38) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .

    llaveC          reduce using rule 38 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Let             reduce using rule 38 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    If              reduce using rule 38 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Id              reduce using rule 38 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    PrintLn         reduce using rule 38 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)


state 394

    (44) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 404


state 395

    (39) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .

    llaveC          reduce using rule 39 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Let             reduce using rule 39 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    If              reduce using rule 39 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Id              reduce using rule 39 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    PrintLn         reduce using rule 39 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)


state 396

    (45) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 405


state 397

    (40) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .

    llaveC          reduce using rule 40 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Let             reduce using rule 40 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    If              reduce using rule 40 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Id              reduce using rule 40 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    PrintLn         reduce using rule 40 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)


state 398

    (46) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 406


state 399

    (41) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .

    llaveC          reduce using rule 41 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Let             reduce using rule 41 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    If              reduce using rule 41 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Id              reduce using rule 41 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    PrintLn         reduce using rule 41 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)


state 400

    (47) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 407


state 401

    (42) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .

    llaveC          reduce using rule 42 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Let             reduce using rule 42 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    If              reduce using rule 42 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Id              reduce using rule 42 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    PrintLn         reduce using rule 42 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)


state 402

    (48) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 408


state 403

    (43) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .

    llaveC          reduce using rule 43 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Let             reduce using rule 43 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    If              reduce using rule 43 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 43 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 43 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)


state 404

    (44) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .

    llaveC          reduce using rule 44 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Let             reduce using rule 44 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    If              reduce using rule 44 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 44 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 44 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)


state 405

    (45) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .

    llaveC          reduce using rule 45 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Let             reduce using rule 45 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    If              reduce using rule 45 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 45 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 45 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)


state 406

    (46) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .

    llaveC          reduce using rule 46 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Let             reduce using rule 46 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    If              reduce using rule 46 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 46 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 46 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)


state 407

    (47) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .

    llaveC          reduce using rule 47 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Let             reduce using rule 47 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    If              reduce using rule 47 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 47 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 47 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)


state 408

    (48) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .

    llaveC          reduce using rule 48 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Let             reduce using rule 48 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    If              reduce using rule 48 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 48 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 48 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for punto in state 45 resolved as shift
