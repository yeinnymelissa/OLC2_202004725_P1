Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    Comentario
    False
    True

Grammar

Rule 0     S' -> init
Rule 1     init -> INSTRUCCIONES
Rule 2     INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION
Rule 3     INSTRUCCIONES -> INSTRUCCION
Rule 4     INSTRUCCION -> DECLARACION
Rule 5     DECLARACION -> Let Id igual EXPRESION ptComa
Rule 6     DECLARACION -> Let Id dosPuntos I64 igual EXPRESION ptComa
Rule 7     DECLARACION -> Let Id dosPuntos F64 igual EXPRESION ptComa
Rule 8     DECLARACION -> Let Id dosPuntos StrA igual EXPRESION ptComa
Rule 9     DECLARACION -> Let Id dosPuntos Str igual EXPRESION ptComa
Rule 10    DECLARACION -> Let Id dosPuntos Bool igual EXPRESION ptComa
Rule 11    DECLARACION -> Let Id dosPuntos CharAux igual EXPRESION ptComa
Rule 12    DECLARACION -> Let Mut Id igual EXPRESION ptComa
Rule 13    DECLARACION -> Let Mut Id dosPuntos I64 igual EXPRESION ptComa
Rule 14    DECLARACION -> Let Mut Id dosPuntos F64 igual EXPRESION ptComa
Rule 15    DECLARACION -> Let Mut Id dosPuntos StrA igual EXPRESION ptComa
Rule 16    DECLARACION -> Let Mut Id dosPuntos Str igual EXPRESION ptComa
Rule 17    DECLARACION -> Let Mut Id dosPuntos Bool igual EXPRESION ptComa
Rule 18    DECLARACION -> Let Mut Id dosPuntos CharAux igual EXPRESION ptComa
Rule 19    DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
Rule 20    DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
Rule 21    DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
Rule 22    DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
Rule 23    DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
Rule 24    DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
Rule 25    DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
Rule 26    DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
Rule 27    DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
Rule 28    DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
Rule 29    DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
Rule 30    DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
Rule 31    DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
Rule 32    DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
Rule 33    DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
Rule 34    DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
Rule 35    DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
Rule 36    DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
Rule 37    DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
Rule 38    DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
Rule 39    DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
Rule 40    DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
Rule 41    DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
Rule 42    DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
Rule 43    INSTRUCCION -> IF
Rule 44    IF -> If EXPRESION BLOQUE
Rule 45    BLOQUE -> llaveA INSTRUCCIONES llaveC
Rule 46    INSTRUCCION -> ASIGNACION
Rule 47    ASIGNACION -> Id igual EXPRESION ptComa
Rule 48    ASIGNACION -> Id CorA EXPRESION CorC igual EXPRESION ptComa
Rule 49    INSTRUCCION -> PUSH
Rule 50    PUSH -> Id punto Push ParA EXPRESION ParC ptComa
Rule 51    INSTRUCCION -> INSERTVEC
Rule 52    INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa
Rule 53    INSTRUCCION -> IMPRIMIR
Rule 54    IMPRIMIR -> PrintLn not ParA String ParC ptComa
Rule 55    IMPRIMIR -> PrintLn not ParA String Coma COMASEX ParC ptComa
Rule 56    COMASEX -> COMASEX Coma EXPRESION
Rule 57    COMASEX -> EXPRESION
Rule 58    EXPRESION -> EXPRESION mas EXPRESION
Rule 59    EXPRESION -> EXPRESION menos EXPRESION
Rule 60    EXPRESION -> EXPRESION por EXPRESION
Rule 61    EXPRESION -> EXPRESION dividido EXPRESION
Rule 62    EXPRESION -> EXPRESION modulo EXPRESION
Rule 63    EXPRESION -> menos EXPRESION
Rule 64    EXPRESION -> ParA EXPRESION ParC
Rule 65    EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
Rule 66    EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
Rule 67    EXPRESION -> EXPRESION menorQue EXPRESION
Rule 68    EXPRESION -> EXPRESION mayorQue EXPRESION
Rule 69    EXPRESION -> EXPRESION menorIgual EXPRESION
Rule 70    EXPRESION -> EXPRESION mayorIgual EXPRESION
Rule 71    EXPRESION -> EXPRESION dobleIgual EXPRESION
Rule 72    EXPRESION -> EXPRESION diferenteQue EXPRESION
Rule 73    EXPRESION -> EXPRESION And EXPRESION
Rule 74    EXPRESION -> EXPRESION Or EXPRESION
Rule 75    EXPRESION -> not EXPRESION
Rule 76    EXPRESION -> EXPRESION AS I64
Rule 77    EXPRESION -> EXPRESION AS F64
Rule 78    EXPRESION -> vec not CorA COMASEX CorC
Rule 79    EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC
Rule 80    EXPRESION -> INSERTVEC
Rule 81    EXPRESION -> Id punto Remove ParA EXPRESION ParC
Rule 82    EXPRESION -> Float
Rule 83    EXPRESION -> Entero
Rule 84    EXPRESION -> Booleano
Rule 85    EXPRESION -> String
Rule 86    EXPRESION -> Char
Rule 87    EXPRESION -> Id
Rule 88    EXPRESION -> Id CorA EXPRESION CorC

Terminals, with rules where they appear

AS                   : 76 77
And                  : 73
Bool                 : 10 17 23 29 35 41
Booleano             : 84
Capacidad            : 25 26 27 28 29 30 37 38 39 40 41 42
Char                 : 86
CharAux              : 11 18 24 30 36 42
Coma                 : 52 55 56 65 66
Comentario           : 
CorA                 : 48 78 79 88
CorC                 : 48 78 79 88
Entero               : 83
F64                  : 7 14 20 26 32 38 66 77
False                : 
Float                : 82
I64                  : 6 13 19 25 31 37 65 76
Id                   : 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 47 48 50 52 81 87 88
If                   : 44
Insert               : 52
Let                  : 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
Mut                  : 12 13 14 15 16 17 18 31 32 33 34 35 36 37 38 39 40 41 42
New                  : 19 20 21 22 23 24 31 32 33 34 35 36
Or                   : 74
ParA                 : 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 50 52 54 55 64 65 66 81
ParC                 : 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 50 52 54 55 64 65 66 81
Powf                 : 66
Powi                 : 65
PrintLn              : 54 55
Push                 : 50
Remove               : 81
Str                  : 9 16 22 28 34 40
StrA                 : 8 15 21 27 33 39
String               : 54 55 85
True                 : 
VEC                  : 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42
diferenteQue         : 72
dividido             : 61
dobleIgual           : 71
dosPuntos            : 6 7 8 9 10 11 13 14 15 16 17 18 19 19 19 20 20 20 21 21 21 22 22 22 23 23 23 24 24 24 25 25 25 26 26 26 27 27 27 28 28 28 29 29 29 30 30 30 31 31 31 32 32 32 33 33 33 34 34 34 35 35 35 36 36 36 37 37 37 38 38 38 39 39 39 40 40 40 41 41 41 42 42 42 65 65 66 66
error                : 
igual                : 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 47 48
llaveA               : 45
llaveC               : 45
mas                  : 58
mayorIgual           : 70
mayorQue             : 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 68
menorIgual           : 69
menorQue             : 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 67
menos                : 59 63
modulo               : 62
not                  : 54 55 75 78 79
por                  : 60
ptComa               : 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 47 48 50 52 54 55 79
punto                : 50 52 81
vec                  : 78 79

Nonterminals, with rules where they appear

ASIGNACION           : 46
BLOQUE               : 44
COMASEX              : 55 56 78
DECLARACION          : 4
EXPRESION            : 5 6 7 8 9 10 11 12 13 14 15 16 17 18 25 26 27 28 29 30 37 38 39 40 41 42 44 47 48 48 50 52 52 56 57 58 58 59 59 60 60 61 61 62 62 63 64 65 65 66 66 67 67 68 68 69 69 70 70 71 71 72 72 73 73 74 74 75 76 77 79 79 81 88
IF                   : 43
IMPRIMIR             : 53
INSERTVEC            : 51 80
INSTRUCCION          : 2 3
INSTRUCCIONES        : 1 2 45
PUSH                 : 49
init                 : 0

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . INSTRUCCIONES
    (2) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (3) INSTRUCCIONES -> . INSTRUCCION
    (4) INSTRUCCION -> . DECLARACION
    (43) INSTRUCCION -> . IF
    (46) INSTRUCCION -> . ASIGNACION
    (49) INSTRUCCION -> . PUSH
    (51) INSTRUCCION -> . INSERTVEC
    (53) INSTRUCCION -> . IMPRIMIR
    (5) DECLARACION -> . Let Id igual EXPRESION ptComa
    (6) DECLARACION -> . Let Id dosPuntos I64 igual EXPRESION ptComa
    (7) DECLARACION -> . Let Id dosPuntos F64 igual EXPRESION ptComa
    (8) DECLARACION -> . Let Id dosPuntos StrA igual EXPRESION ptComa
    (9) DECLARACION -> . Let Id dosPuntos Str igual EXPRESION ptComa
    (10) DECLARACION -> . Let Id dosPuntos Bool igual EXPRESION ptComa
    (11) DECLARACION -> . Let Id dosPuntos CharAux igual EXPRESION ptComa
    (12) DECLARACION -> . Let Mut Id igual EXPRESION ptComa
    (13) DECLARACION -> . Let Mut Id dosPuntos I64 igual EXPRESION ptComa
    (14) DECLARACION -> . Let Mut Id dosPuntos F64 igual EXPRESION ptComa
    (15) DECLARACION -> . Let Mut Id dosPuntos StrA igual EXPRESION ptComa
    (16) DECLARACION -> . Let Mut Id dosPuntos Str igual EXPRESION ptComa
    (17) DECLARACION -> . Let Mut Id dosPuntos Bool igual EXPRESION ptComa
    (18) DECLARACION -> . Let Mut Id dosPuntos CharAux igual EXPRESION ptComa
    (19) DECLARACION -> . Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (20) DECLARACION -> . Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (21) DECLARACION -> . Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (22) DECLARACION -> . Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (23) DECLARACION -> . Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (24) DECLARACION -> . Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (25) DECLARACION -> . Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (26) DECLARACION -> . Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (27) DECLARACION -> . Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (28) DECLARACION -> . Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (29) DECLARACION -> . Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (30) DECLARACION -> . Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (31) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (32) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (33) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (34) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (35) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (36) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (37) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (38) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (39) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (40) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (41) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (42) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (44) IF -> . If EXPRESION BLOQUE
    (47) ASIGNACION -> . Id igual EXPRESION ptComa
    (48) ASIGNACION -> . Id CorA EXPRESION CorC igual EXPRESION ptComa
    (50) PUSH -> . Id punto Push ParA EXPRESION ParC ptComa
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa
    (54) IMPRIMIR -> . PrintLn not ParA String ParC ptComa
    (55) IMPRIMIR -> . PrintLn not ParA String Coma COMASEX ParC ptComa

    Let             shift and go to state 10
    If              shift and go to state 12
    Id              shift and go to state 11
    PrintLn         shift and go to state 13

    init                           shift and go to state 1
    INSTRUCCIONES                  shift and go to state 2
    INSTRUCCION                    shift and go to state 3
    DECLARACION                    shift and go to state 4
    IF                             shift and go to state 5
    ASIGNACION                     shift and go to state 6
    PUSH                           shift and go to state 7
    INSERTVEC                      shift and go to state 8
    IMPRIMIR                       shift and go to state 9

state 1

    (0) S' -> init .



state 2

    (1) init -> INSTRUCCIONES .
    (2) INSTRUCCIONES -> INSTRUCCIONES . INSTRUCCION
    (4) INSTRUCCION -> . DECLARACION
    (43) INSTRUCCION -> . IF
    (46) INSTRUCCION -> . ASIGNACION
    (49) INSTRUCCION -> . PUSH
    (51) INSTRUCCION -> . INSERTVEC
    (53) INSTRUCCION -> . IMPRIMIR
    (5) DECLARACION -> . Let Id igual EXPRESION ptComa
    (6) DECLARACION -> . Let Id dosPuntos I64 igual EXPRESION ptComa
    (7) DECLARACION -> . Let Id dosPuntos F64 igual EXPRESION ptComa
    (8) DECLARACION -> . Let Id dosPuntos StrA igual EXPRESION ptComa
    (9) DECLARACION -> . Let Id dosPuntos Str igual EXPRESION ptComa
    (10) DECLARACION -> . Let Id dosPuntos Bool igual EXPRESION ptComa
    (11) DECLARACION -> . Let Id dosPuntos CharAux igual EXPRESION ptComa
    (12) DECLARACION -> . Let Mut Id igual EXPRESION ptComa
    (13) DECLARACION -> . Let Mut Id dosPuntos I64 igual EXPRESION ptComa
    (14) DECLARACION -> . Let Mut Id dosPuntos F64 igual EXPRESION ptComa
    (15) DECLARACION -> . Let Mut Id dosPuntos StrA igual EXPRESION ptComa
    (16) DECLARACION -> . Let Mut Id dosPuntos Str igual EXPRESION ptComa
    (17) DECLARACION -> . Let Mut Id dosPuntos Bool igual EXPRESION ptComa
    (18) DECLARACION -> . Let Mut Id dosPuntos CharAux igual EXPRESION ptComa
    (19) DECLARACION -> . Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (20) DECLARACION -> . Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (21) DECLARACION -> . Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (22) DECLARACION -> . Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (23) DECLARACION -> . Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (24) DECLARACION -> . Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (25) DECLARACION -> . Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (26) DECLARACION -> . Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (27) DECLARACION -> . Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (28) DECLARACION -> . Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (29) DECLARACION -> . Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (30) DECLARACION -> . Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (31) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (32) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (33) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (34) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (35) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (36) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (37) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (38) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (39) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (40) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (41) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (42) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (44) IF -> . If EXPRESION BLOQUE
    (47) ASIGNACION -> . Id igual EXPRESION ptComa
    (48) ASIGNACION -> . Id CorA EXPRESION CorC igual EXPRESION ptComa
    (50) PUSH -> . Id punto Push ParA EXPRESION ParC ptComa
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa
    (54) IMPRIMIR -> . PrintLn not ParA String ParC ptComa
    (55) IMPRIMIR -> . PrintLn not ParA String Coma COMASEX ParC ptComa

    $end            reduce using rule 1 (init -> INSTRUCCIONES .)
    Let             shift and go to state 10
    If              shift and go to state 12
    Id              shift and go to state 11
    PrintLn         shift and go to state 13

    INSTRUCCION                    shift and go to state 14
    DECLARACION                    shift and go to state 4
    IF                             shift and go to state 5
    ASIGNACION                     shift and go to state 6
    PUSH                           shift and go to state 7
    INSERTVEC                      shift and go to state 8
    IMPRIMIR                       shift and go to state 9

state 3

    (3) INSTRUCCIONES -> INSTRUCCION .

    Let             reduce using rule 3 (INSTRUCCIONES -> INSTRUCCION .)
    If              reduce using rule 3 (INSTRUCCIONES -> INSTRUCCION .)
    Id              reduce using rule 3 (INSTRUCCIONES -> INSTRUCCION .)
    PrintLn         reduce using rule 3 (INSTRUCCIONES -> INSTRUCCION .)
    $end            reduce using rule 3 (INSTRUCCIONES -> INSTRUCCION .)
    llaveC          reduce using rule 3 (INSTRUCCIONES -> INSTRUCCION .)


state 4

    (4) INSTRUCCION -> DECLARACION .

    Let             reduce using rule 4 (INSTRUCCION -> DECLARACION .)
    If              reduce using rule 4 (INSTRUCCION -> DECLARACION .)
    Id              reduce using rule 4 (INSTRUCCION -> DECLARACION .)
    PrintLn         reduce using rule 4 (INSTRUCCION -> DECLARACION .)
    $end            reduce using rule 4 (INSTRUCCION -> DECLARACION .)
    llaveC          reduce using rule 4 (INSTRUCCION -> DECLARACION .)


state 5

    (43) INSTRUCCION -> IF .

    Let             reduce using rule 43 (INSTRUCCION -> IF .)
    If              reduce using rule 43 (INSTRUCCION -> IF .)
    Id              reduce using rule 43 (INSTRUCCION -> IF .)
    PrintLn         reduce using rule 43 (INSTRUCCION -> IF .)
    $end            reduce using rule 43 (INSTRUCCION -> IF .)
    llaveC          reduce using rule 43 (INSTRUCCION -> IF .)


state 6

    (46) INSTRUCCION -> ASIGNACION .

    Let             reduce using rule 46 (INSTRUCCION -> ASIGNACION .)
    If              reduce using rule 46 (INSTRUCCION -> ASIGNACION .)
    Id              reduce using rule 46 (INSTRUCCION -> ASIGNACION .)
    PrintLn         reduce using rule 46 (INSTRUCCION -> ASIGNACION .)
    $end            reduce using rule 46 (INSTRUCCION -> ASIGNACION .)
    llaveC          reduce using rule 46 (INSTRUCCION -> ASIGNACION .)


state 7

    (49) INSTRUCCION -> PUSH .

    Let             reduce using rule 49 (INSTRUCCION -> PUSH .)
    If              reduce using rule 49 (INSTRUCCION -> PUSH .)
    Id              reduce using rule 49 (INSTRUCCION -> PUSH .)
    PrintLn         reduce using rule 49 (INSTRUCCION -> PUSH .)
    $end            reduce using rule 49 (INSTRUCCION -> PUSH .)
    llaveC          reduce using rule 49 (INSTRUCCION -> PUSH .)


state 8

    (51) INSTRUCCION -> INSERTVEC .

    Let             reduce using rule 51 (INSTRUCCION -> INSERTVEC .)
    If              reduce using rule 51 (INSTRUCCION -> INSERTVEC .)
    Id              reduce using rule 51 (INSTRUCCION -> INSERTVEC .)
    PrintLn         reduce using rule 51 (INSTRUCCION -> INSERTVEC .)
    $end            reduce using rule 51 (INSTRUCCION -> INSERTVEC .)
    llaveC          reduce using rule 51 (INSTRUCCION -> INSERTVEC .)


state 9

    (53) INSTRUCCION -> IMPRIMIR .

    Let             reduce using rule 53 (INSTRUCCION -> IMPRIMIR .)
    If              reduce using rule 53 (INSTRUCCION -> IMPRIMIR .)
    Id              reduce using rule 53 (INSTRUCCION -> IMPRIMIR .)
    PrintLn         reduce using rule 53 (INSTRUCCION -> IMPRIMIR .)
    $end            reduce using rule 53 (INSTRUCCION -> IMPRIMIR .)
    llaveC          reduce using rule 53 (INSTRUCCION -> IMPRIMIR .)


state 10

    (5) DECLARACION -> Let . Id igual EXPRESION ptComa
    (6) DECLARACION -> Let . Id dosPuntos I64 igual EXPRESION ptComa
    (7) DECLARACION -> Let . Id dosPuntos F64 igual EXPRESION ptComa
    (8) DECLARACION -> Let . Id dosPuntos StrA igual EXPRESION ptComa
    (9) DECLARACION -> Let . Id dosPuntos Str igual EXPRESION ptComa
    (10) DECLARACION -> Let . Id dosPuntos Bool igual EXPRESION ptComa
    (11) DECLARACION -> Let . Id dosPuntos CharAux igual EXPRESION ptComa
    (12) DECLARACION -> Let . Mut Id igual EXPRESION ptComa
    (13) DECLARACION -> Let . Mut Id dosPuntos I64 igual EXPRESION ptComa
    (14) DECLARACION -> Let . Mut Id dosPuntos F64 igual EXPRESION ptComa
    (15) DECLARACION -> Let . Mut Id dosPuntos StrA igual EXPRESION ptComa
    (16) DECLARACION -> Let . Mut Id dosPuntos Str igual EXPRESION ptComa
    (17) DECLARACION -> Let . Mut Id dosPuntos Bool igual EXPRESION ptComa
    (18) DECLARACION -> Let . Mut Id dosPuntos CharAux igual EXPRESION ptComa
    (19) DECLARACION -> Let . Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (20) DECLARACION -> Let . Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (21) DECLARACION -> Let . Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (22) DECLARACION -> Let . Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (23) DECLARACION -> Let . Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (24) DECLARACION -> Let . Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (25) DECLARACION -> Let . Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (26) DECLARACION -> Let . Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (27) DECLARACION -> Let . Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (28) DECLARACION -> Let . Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (29) DECLARACION -> Let . Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (30) DECLARACION -> Let . Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (31) DECLARACION -> Let . Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (32) DECLARACION -> Let . Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (33) DECLARACION -> Let . Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (34) DECLARACION -> Let . Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (35) DECLARACION -> Let . Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (36) DECLARACION -> Let . Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (37) DECLARACION -> Let . Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (38) DECLARACION -> Let . Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (39) DECLARACION -> Let . Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (40) DECLARACION -> Let . Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (41) DECLARACION -> Let . Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (42) DECLARACION -> Let . Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    Id              shift and go to state 15
    Mut             shift and go to state 16


state 11

    (47) ASIGNACION -> Id . igual EXPRESION ptComa
    (48) ASIGNACION -> Id . CorA EXPRESION CorC igual EXPRESION ptComa
    (50) PUSH -> Id . punto Push ParA EXPRESION ParC ptComa
    (52) INSERTVEC -> Id . punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    igual           shift and go to state 17
    CorA            shift and go to state 18
    punto           shift and go to state 19


state 12

    (44) IF -> If . EXPRESION BLOQUE
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 20
    INSERTVEC                      shift and go to state 27

state 13

    (54) IMPRIMIR -> PrintLn . not ParA String ParC ptComa
    (55) IMPRIMIR -> PrintLn . not ParA String Coma COMASEX ParC ptComa

    not             shift and go to state 34


state 14

    (2) INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .

    Let             reduce using rule 2 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    If              reduce using rule 2 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    Id              reduce using rule 2 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    PrintLn         reduce using rule 2 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    $end            reduce using rule 2 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    llaveC          reduce using rule 2 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)


state 15

    (5) DECLARACION -> Let Id . igual EXPRESION ptComa
    (6) DECLARACION -> Let Id . dosPuntos I64 igual EXPRESION ptComa
    (7) DECLARACION -> Let Id . dosPuntos F64 igual EXPRESION ptComa
    (8) DECLARACION -> Let Id . dosPuntos StrA igual EXPRESION ptComa
    (9) DECLARACION -> Let Id . dosPuntos Str igual EXPRESION ptComa
    (10) DECLARACION -> Let Id . dosPuntos Bool igual EXPRESION ptComa
    (11) DECLARACION -> Let Id . dosPuntos CharAux igual EXPRESION ptComa
    (19) DECLARACION -> Let Id . dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (20) DECLARACION -> Let Id . dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (21) DECLARACION -> Let Id . dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (22) DECLARACION -> Let Id . dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (23) DECLARACION -> Let Id . dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (24) DECLARACION -> Let Id . dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (25) DECLARACION -> Let Id . dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (26) DECLARACION -> Let Id . dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (27) DECLARACION -> Let Id . dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (28) DECLARACION -> Let Id . dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (29) DECLARACION -> Let Id . dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (30) DECLARACION -> Let Id . dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 35
    dosPuntos       shift and go to state 36


state 16

    (12) DECLARACION -> Let Mut . Id igual EXPRESION ptComa
    (13) DECLARACION -> Let Mut . Id dosPuntos I64 igual EXPRESION ptComa
    (14) DECLARACION -> Let Mut . Id dosPuntos F64 igual EXPRESION ptComa
    (15) DECLARACION -> Let Mut . Id dosPuntos StrA igual EXPRESION ptComa
    (16) DECLARACION -> Let Mut . Id dosPuntos Str igual EXPRESION ptComa
    (17) DECLARACION -> Let Mut . Id dosPuntos Bool igual EXPRESION ptComa
    (18) DECLARACION -> Let Mut . Id dosPuntos CharAux igual EXPRESION ptComa
    (31) DECLARACION -> Let Mut . Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (32) DECLARACION -> Let Mut . Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (33) DECLARACION -> Let Mut . Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (34) DECLARACION -> Let Mut . Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (35) DECLARACION -> Let Mut . Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (36) DECLARACION -> Let Mut . Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (37) DECLARACION -> Let Mut . Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (38) DECLARACION -> Let Mut . Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (39) DECLARACION -> Let Mut . Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (40) DECLARACION -> Let Mut . Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (41) DECLARACION -> Let Mut . Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (42) DECLARACION -> Let Mut . Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    Id              shift and go to state 37


state 17

    (47) ASIGNACION -> Id igual . EXPRESION ptComa
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 38
    INSERTVEC                      shift and go to state 27

state 18

    (48) ASIGNACION -> Id CorA . EXPRESION CorC igual EXPRESION ptComa
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 39
    INSERTVEC                      shift and go to state 27

state 19

    (50) PUSH -> Id punto . Push ParA EXPRESION ParC ptComa
    (52) INSERTVEC -> Id punto . Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    Push            shift and go to state 40
    Insert          shift and go to state 41


state 20

    (44) IF -> If EXPRESION . BLOQUE
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64
    (45) BLOQUE -> . llaveA INSTRUCCIONES llaveC

    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56
    llaveA          shift and go to state 57

    BLOQUE                         shift and go to state 42

state 21

    (63) EXPRESION -> menos . EXPRESION
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 58
    INSERTVEC                      shift and go to state 27

state 22

    (64) EXPRESION -> ParA . EXPRESION ParC
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 59
    INSERTVEC                      shift and go to state 27

state 23

    (65) EXPRESION -> I64 . dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC

    dosPuntos       shift and go to state 60


state 24

    (66) EXPRESION -> F64 . dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC

    dosPuntos       shift and go to state 61


state 25

    (75) EXPRESION -> not . EXPRESION
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 62
    INSERTVEC                      shift and go to state 27

state 26

    (78) EXPRESION -> vec . not CorA COMASEX CorC
    (79) EXPRESION -> vec . not CorA EXPRESION ptComa EXPRESION CorC

    not             shift and go to state 63


state 27

    (80) EXPRESION -> INSERTVEC .

    mas             reduce using rule 80 (EXPRESION -> INSERTVEC .)
    menos           reduce using rule 80 (EXPRESION -> INSERTVEC .)
    por             reduce using rule 80 (EXPRESION -> INSERTVEC .)
    dividido        reduce using rule 80 (EXPRESION -> INSERTVEC .)
    modulo          reduce using rule 80 (EXPRESION -> INSERTVEC .)
    menorQue        reduce using rule 80 (EXPRESION -> INSERTVEC .)
    mayorQue        reduce using rule 80 (EXPRESION -> INSERTVEC .)
    menorIgual      reduce using rule 80 (EXPRESION -> INSERTVEC .)
    mayorIgual      reduce using rule 80 (EXPRESION -> INSERTVEC .)
    dobleIgual      reduce using rule 80 (EXPRESION -> INSERTVEC .)
    diferenteQue    reduce using rule 80 (EXPRESION -> INSERTVEC .)
    And             reduce using rule 80 (EXPRESION -> INSERTVEC .)
    Or              reduce using rule 80 (EXPRESION -> INSERTVEC .)
    AS              reduce using rule 80 (EXPRESION -> INSERTVEC .)
    llaveA          reduce using rule 80 (EXPRESION -> INSERTVEC .)
    ptComa          reduce using rule 80 (EXPRESION -> INSERTVEC .)
    CorC            reduce using rule 80 (EXPRESION -> INSERTVEC .)
    ParC            reduce using rule 80 (EXPRESION -> INSERTVEC .)
    Coma            reduce using rule 80 (EXPRESION -> INSERTVEC .)


state 28

    (81) EXPRESION -> Id . punto Remove ParA EXPRESION ParC
    (87) EXPRESION -> Id .
    (88) EXPRESION -> Id . CorA EXPRESION CorC
    (52) INSERTVEC -> Id . punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    punto           shift and go to state 64
    mas             reduce using rule 87 (EXPRESION -> Id .)
    menos           reduce using rule 87 (EXPRESION -> Id .)
    por             reduce using rule 87 (EXPRESION -> Id .)
    dividido        reduce using rule 87 (EXPRESION -> Id .)
    modulo          reduce using rule 87 (EXPRESION -> Id .)
    menorQue        reduce using rule 87 (EXPRESION -> Id .)
    mayorQue        reduce using rule 87 (EXPRESION -> Id .)
    menorIgual      reduce using rule 87 (EXPRESION -> Id .)
    mayorIgual      reduce using rule 87 (EXPRESION -> Id .)
    dobleIgual      reduce using rule 87 (EXPRESION -> Id .)
    diferenteQue    reduce using rule 87 (EXPRESION -> Id .)
    And             reduce using rule 87 (EXPRESION -> Id .)
    Or              reduce using rule 87 (EXPRESION -> Id .)
    AS              reduce using rule 87 (EXPRESION -> Id .)
    llaveA          reduce using rule 87 (EXPRESION -> Id .)
    ptComa          reduce using rule 87 (EXPRESION -> Id .)
    CorC            reduce using rule 87 (EXPRESION -> Id .)
    ParC            reduce using rule 87 (EXPRESION -> Id .)
    Coma            reduce using rule 87 (EXPRESION -> Id .)
    CorA            shift and go to state 65


state 29

    (82) EXPRESION -> Float .

    mas             reduce using rule 82 (EXPRESION -> Float .)
    menos           reduce using rule 82 (EXPRESION -> Float .)
    por             reduce using rule 82 (EXPRESION -> Float .)
    dividido        reduce using rule 82 (EXPRESION -> Float .)
    modulo          reduce using rule 82 (EXPRESION -> Float .)
    menorQue        reduce using rule 82 (EXPRESION -> Float .)
    mayorQue        reduce using rule 82 (EXPRESION -> Float .)
    menorIgual      reduce using rule 82 (EXPRESION -> Float .)
    mayorIgual      reduce using rule 82 (EXPRESION -> Float .)
    dobleIgual      reduce using rule 82 (EXPRESION -> Float .)
    diferenteQue    reduce using rule 82 (EXPRESION -> Float .)
    And             reduce using rule 82 (EXPRESION -> Float .)
    Or              reduce using rule 82 (EXPRESION -> Float .)
    AS              reduce using rule 82 (EXPRESION -> Float .)
    llaveA          reduce using rule 82 (EXPRESION -> Float .)
    ptComa          reduce using rule 82 (EXPRESION -> Float .)
    CorC            reduce using rule 82 (EXPRESION -> Float .)
    ParC            reduce using rule 82 (EXPRESION -> Float .)
    Coma            reduce using rule 82 (EXPRESION -> Float .)


state 30

    (83) EXPRESION -> Entero .

    mas             reduce using rule 83 (EXPRESION -> Entero .)
    menos           reduce using rule 83 (EXPRESION -> Entero .)
    por             reduce using rule 83 (EXPRESION -> Entero .)
    dividido        reduce using rule 83 (EXPRESION -> Entero .)
    modulo          reduce using rule 83 (EXPRESION -> Entero .)
    menorQue        reduce using rule 83 (EXPRESION -> Entero .)
    mayorQue        reduce using rule 83 (EXPRESION -> Entero .)
    menorIgual      reduce using rule 83 (EXPRESION -> Entero .)
    mayorIgual      reduce using rule 83 (EXPRESION -> Entero .)
    dobleIgual      reduce using rule 83 (EXPRESION -> Entero .)
    diferenteQue    reduce using rule 83 (EXPRESION -> Entero .)
    And             reduce using rule 83 (EXPRESION -> Entero .)
    Or              reduce using rule 83 (EXPRESION -> Entero .)
    AS              reduce using rule 83 (EXPRESION -> Entero .)
    llaveA          reduce using rule 83 (EXPRESION -> Entero .)
    ptComa          reduce using rule 83 (EXPRESION -> Entero .)
    CorC            reduce using rule 83 (EXPRESION -> Entero .)
    ParC            reduce using rule 83 (EXPRESION -> Entero .)
    Coma            reduce using rule 83 (EXPRESION -> Entero .)


state 31

    (84) EXPRESION -> Booleano .

    mas             reduce using rule 84 (EXPRESION -> Booleano .)
    menos           reduce using rule 84 (EXPRESION -> Booleano .)
    por             reduce using rule 84 (EXPRESION -> Booleano .)
    dividido        reduce using rule 84 (EXPRESION -> Booleano .)
    modulo          reduce using rule 84 (EXPRESION -> Booleano .)
    menorQue        reduce using rule 84 (EXPRESION -> Booleano .)
    mayorQue        reduce using rule 84 (EXPRESION -> Booleano .)
    menorIgual      reduce using rule 84 (EXPRESION -> Booleano .)
    mayorIgual      reduce using rule 84 (EXPRESION -> Booleano .)
    dobleIgual      reduce using rule 84 (EXPRESION -> Booleano .)
    diferenteQue    reduce using rule 84 (EXPRESION -> Booleano .)
    And             reduce using rule 84 (EXPRESION -> Booleano .)
    Or              reduce using rule 84 (EXPRESION -> Booleano .)
    AS              reduce using rule 84 (EXPRESION -> Booleano .)
    llaveA          reduce using rule 84 (EXPRESION -> Booleano .)
    ptComa          reduce using rule 84 (EXPRESION -> Booleano .)
    CorC            reduce using rule 84 (EXPRESION -> Booleano .)
    ParC            reduce using rule 84 (EXPRESION -> Booleano .)
    Coma            reduce using rule 84 (EXPRESION -> Booleano .)


state 32

    (85) EXPRESION -> String .

    mas             reduce using rule 85 (EXPRESION -> String .)
    menos           reduce using rule 85 (EXPRESION -> String .)
    por             reduce using rule 85 (EXPRESION -> String .)
    dividido        reduce using rule 85 (EXPRESION -> String .)
    modulo          reduce using rule 85 (EXPRESION -> String .)
    menorQue        reduce using rule 85 (EXPRESION -> String .)
    mayorQue        reduce using rule 85 (EXPRESION -> String .)
    menorIgual      reduce using rule 85 (EXPRESION -> String .)
    mayorIgual      reduce using rule 85 (EXPRESION -> String .)
    dobleIgual      reduce using rule 85 (EXPRESION -> String .)
    diferenteQue    reduce using rule 85 (EXPRESION -> String .)
    And             reduce using rule 85 (EXPRESION -> String .)
    Or              reduce using rule 85 (EXPRESION -> String .)
    AS              reduce using rule 85 (EXPRESION -> String .)
    llaveA          reduce using rule 85 (EXPRESION -> String .)
    ptComa          reduce using rule 85 (EXPRESION -> String .)
    CorC            reduce using rule 85 (EXPRESION -> String .)
    ParC            reduce using rule 85 (EXPRESION -> String .)
    Coma            reduce using rule 85 (EXPRESION -> String .)


state 33

    (86) EXPRESION -> Char .

    mas             reduce using rule 86 (EXPRESION -> Char .)
    menos           reduce using rule 86 (EXPRESION -> Char .)
    por             reduce using rule 86 (EXPRESION -> Char .)
    dividido        reduce using rule 86 (EXPRESION -> Char .)
    modulo          reduce using rule 86 (EXPRESION -> Char .)
    menorQue        reduce using rule 86 (EXPRESION -> Char .)
    mayorQue        reduce using rule 86 (EXPRESION -> Char .)
    menorIgual      reduce using rule 86 (EXPRESION -> Char .)
    mayorIgual      reduce using rule 86 (EXPRESION -> Char .)
    dobleIgual      reduce using rule 86 (EXPRESION -> Char .)
    diferenteQue    reduce using rule 86 (EXPRESION -> Char .)
    And             reduce using rule 86 (EXPRESION -> Char .)
    Or              reduce using rule 86 (EXPRESION -> Char .)
    AS              reduce using rule 86 (EXPRESION -> Char .)
    llaveA          reduce using rule 86 (EXPRESION -> Char .)
    ptComa          reduce using rule 86 (EXPRESION -> Char .)
    CorC            reduce using rule 86 (EXPRESION -> Char .)
    ParC            reduce using rule 86 (EXPRESION -> Char .)
    Coma            reduce using rule 86 (EXPRESION -> Char .)


state 34

    (54) IMPRIMIR -> PrintLn not . ParA String ParC ptComa
    (55) IMPRIMIR -> PrintLn not . ParA String Coma COMASEX ParC ptComa

    ParA            shift and go to state 66


state 35

    (5) DECLARACION -> Let Id igual . EXPRESION ptComa
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 67
    INSERTVEC                      shift and go to state 27

state 36

    (6) DECLARACION -> Let Id dosPuntos . I64 igual EXPRESION ptComa
    (7) DECLARACION -> Let Id dosPuntos . F64 igual EXPRESION ptComa
    (8) DECLARACION -> Let Id dosPuntos . StrA igual EXPRESION ptComa
    (9) DECLARACION -> Let Id dosPuntos . Str igual EXPRESION ptComa
    (10) DECLARACION -> Let Id dosPuntos . Bool igual EXPRESION ptComa
    (11) DECLARACION -> Let Id dosPuntos . CharAux igual EXPRESION ptComa
    (19) DECLARACION -> Let Id dosPuntos . VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (20) DECLARACION -> Let Id dosPuntos . VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (21) DECLARACION -> Let Id dosPuntos . VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (22) DECLARACION -> Let Id dosPuntos . VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (23) DECLARACION -> Let Id dosPuntos . VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (24) DECLARACION -> Let Id dosPuntos . VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (25) DECLARACION -> Let Id dosPuntos . VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (26) DECLARACION -> Let Id dosPuntos . VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (27) DECLARACION -> Let Id dosPuntos . VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (28) DECLARACION -> Let Id dosPuntos . VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (29) DECLARACION -> Let Id dosPuntos . VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (30) DECLARACION -> Let Id dosPuntos . VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    I64             shift and go to state 68
    F64             shift and go to state 69
    StrA            shift and go to state 70
    Str             shift and go to state 71
    Bool            shift and go to state 72
    CharAux         shift and go to state 73
    VEC             shift and go to state 74


state 37

    (12) DECLARACION -> Let Mut Id . igual EXPRESION ptComa
    (13) DECLARACION -> Let Mut Id . dosPuntos I64 igual EXPRESION ptComa
    (14) DECLARACION -> Let Mut Id . dosPuntos F64 igual EXPRESION ptComa
    (15) DECLARACION -> Let Mut Id . dosPuntos StrA igual EXPRESION ptComa
    (16) DECLARACION -> Let Mut Id . dosPuntos Str igual EXPRESION ptComa
    (17) DECLARACION -> Let Mut Id . dosPuntos Bool igual EXPRESION ptComa
    (18) DECLARACION -> Let Mut Id . dosPuntos CharAux igual EXPRESION ptComa
    (31) DECLARACION -> Let Mut Id . dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (32) DECLARACION -> Let Mut Id . dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (33) DECLARACION -> Let Mut Id . dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (34) DECLARACION -> Let Mut Id . dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (35) DECLARACION -> Let Mut Id . dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (36) DECLARACION -> Let Mut Id . dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (37) DECLARACION -> Let Mut Id . dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (38) DECLARACION -> Let Mut Id . dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (39) DECLARACION -> Let Mut Id . dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (40) DECLARACION -> Let Mut Id . dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (41) DECLARACION -> Let Mut Id . dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (42) DECLARACION -> Let Mut Id . dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 75
    dosPuntos       shift and go to state 76


state 38

    (47) ASIGNACION -> Id igual EXPRESION . ptComa
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    ptComa          shift and go to state 77
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 39

    (48) ASIGNACION -> Id CorA EXPRESION . CorC igual EXPRESION ptComa
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    CorC            shift and go to state 78
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 40

    (50) PUSH -> Id punto Push . ParA EXPRESION ParC ptComa

    ParA            shift and go to state 79


state 41

    (52) INSERTVEC -> Id punto Insert . ParA EXPRESION Coma EXPRESION ParC ptComa

    ParA            shift and go to state 80


state 42

    (44) IF -> If EXPRESION BLOQUE .

    Let             reduce using rule 44 (IF -> If EXPRESION BLOQUE .)
    If              reduce using rule 44 (IF -> If EXPRESION BLOQUE .)
    Id              reduce using rule 44 (IF -> If EXPRESION BLOQUE .)
    PrintLn         reduce using rule 44 (IF -> If EXPRESION BLOQUE .)
    $end            reduce using rule 44 (IF -> If EXPRESION BLOQUE .)
    llaveC          reduce using rule 44 (IF -> If EXPRESION BLOQUE .)


state 43

    (58) EXPRESION -> EXPRESION mas . EXPRESION
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 81
    INSERTVEC                      shift and go to state 27

state 44

    (59) EXPRESION -> EXPRESION menos . EXPRESION
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 82
    INSERTVEC                      shift and go to state 27

state 45

    (60) EXPRESION -> EXPRESION por . EXPRESION
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 83
    INSERTVEC                      shift and go to state 27

state 46

    (61) EXPRESION -> EXPRESION dividido . EXPRESION
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 84
    INSERTVEC                      shift and go to state 27

state 47

    (62) EXPRESION -> EXPRESION modulo . EXPRESION
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 85
    INSERTVEC                      shift and go to state 27

state 48

    (67) EXPRESION -> EXPRESION menorQue . EXPRESION
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 86
    INSERTVEC                      shift and go to state 27

state 49

    (68) EXPRESION -> EXPRESION mayorQue . EXPRESION
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 87
    INSERTVEC                      shift and go to state 27

state 50

    (69) EXPRESION -> EXPRESION menorIgual . EXPRESION
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 88
    INSERTVEC                      shift and go to state 27

state 51

    (70) EXPRESION -> EXPRESION mayorIgual . EXPRESION
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 89
    INSERTVEC                      shift and go to state 27

state 52

    (71) EXPRESION -> EXPRESION dobleIgual . EXPRESION
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 90
    INSERTVEC                      shift and go to state 27

state 53

    (72) EXPRESION -> EXPRESION diferenteQue . EXPRESION
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 91
    INSERTVEC                      shift and go to state 27

state 54

    (73) EXPRESION -> EXPRESION And . EXPRESION
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 92
    INSERTVEC                      shift and go to state 27

state 55

    (74) EXPRESION -> EXPRESION Or . EXPRESION
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 93
    INSERTVEC                      shift and go to state 27

state 56

    (76) EXPRESION -> EXPRESION AS . I64
    (77) EXPRESION -> EXPRESION AS . F64

    I64             shift and go to state 94
    F64             shift and go to state 95


state 57

    (45) BLOQUE -> llaveA . INSTRUCCIONES llaveC
    (2) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (3) INSTRUCCIONES -> . INSTRUCCION
    (4) INSTRUCCION -> . DECLARACION
    (43) INSTRUCCION -> . IF
    (46) INSTRUCCION -> . ASIGNACION
    (49) INSTRUCCION -> . PUSH
    (51) INSTRUCCION -> . INSERTVEC
    (53) INSTRUCCION -> . IMPRIMIR
    (5) DECLARACION -> . Let Id igual EXPRESION ptComa
    (6) DECLARACION -> . Let Id dosPuntos I64 igual EXPRESION ptComa
    (7) DECLARACION -> . Let Id dosPuntos F64 igual EXPRESION ptComa
    (8) DECLARACION -> . Let Id dosPuntos StrA igual EXPRESION ptComa
    (9) DECLARACION -> . Let Id dosPuntos Str igual EXPRESION ptComa
    (10) DECLARACION -> . Let Id dosPuntos Bool igual EXPRESION ptComa
    (11) DECLARACION -> . Let Id dosPuntos CharAux igual EXPRESION ptComa
    (12) DECLARACION -> . Let Mut Id igual EXPRESION ptComa
    (13) DECLARACION -> . Let Mut Id dosPuntos I64 igual EXPRESION ptComa
    (14) DECLARACION -> . Let Mut Id dosPuntos F64 igual EXPRESION ptComa
    (15) DECLARACION -> . Let Mut Id dosPuntos StrA igual EXPRESION ptComa
    (16) DECLARACION -> . Let Mut Id dosPuntos Str igual EXPRESION ptComa
    (17) DECLARACION -> . Let Mut Id dosPuntos Bool igual EXPRESION ptComa
    (18) DECLARACION -> . Let Mut Id dosPuntos CharAux igual EXPRESION ptComa
    (19) DECLARACION -> . Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (20) DECLARACION -> . Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (21) DECLARACION -> . Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (22) DECLARACION -> . Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (23) DECLARACION -> . Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (24) DECLARACION -> . Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (25) DECLARACION -> . Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (26) DECLARACION -> . Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (27) DECLARACION -> . Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (28) DECLARACION -> . Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (29) DECLARACION -> . Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (30) DECLARACION -> . Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (31) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (32) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (33) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (34) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (35) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (36) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (37) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (38) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (39) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (40) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (41) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (42) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (44) IF -> . If EXPRESION BLOQUE
    (47) ASIGNACION -> . Id igual EXPRESION ptComa
    (48) ASIGNACION -> . Id CorA EXPRESION CorC igual EXPRESION ptComa
    (50) PUSH -> . Id punto Push ParA EXPRESION ParC ptComa
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa
    (54) IMPRIMIR -> . PrintLn not ParA String ParC ptComa
    (55) IMPRIMIR -> . PrintLn not ParA String Coma COMASEX ParC ptComa

    Let             shift and go to state 10
    If              shift and go to state 12
    Id              shift and go to state 11
    PrintLn         shift and go to state 13

    INSTRUCCIONES                  shift and go to state 96
    INSTRUCCION                    shift and go to state 3
    DECLARACION                    shift and go to state 4
    IF                             shift and go to state 5
    ASIGNACION                     shift and go to state 6
    PUSH                           shift and go to state 7
    INSERTVEC                      shift and go to state 8
    IMPRIMIR                       shift and go to state 9

state 58

    (63) EXPRESION -> menos EXPRESION .
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    mas             reduce using rule 63 (EXPRESION -> menos EXPRESION .)
    menos           reduce using rule 63 (EXPRESION -> menos EXPRESION .)
    por             reduce using rule 63 (EXPRESION -> menos EXPRESION .)
    dividido        reduce using rule 63 (EXPRESION -> menos EXPRESION .)
    modulo          reduce using rule 63 (EXPRESION -> menos EXPRESION .)
    menorQue        reduce using rule 63 (EXPRESION -> menos EXPRESION .)
    mayorQue        reduce using rule 63 (EXPRESION -> menos EXPRESION .)
    menorIgual      reduce using rule 63 (EXPRESION -> menos EXPRESION .)
    mayorIgual      reduce using rule 63 (EXPRESION -> menos EXPRESION .)
    dobleIgual      reduce using rule 63 (EXPRESION -> menos EXPRESION .)
    diferenteQue    reduce using rule 63 (EXPRESION -> menos EXPRESION .)
    And             reduce using rule 63 (EXPRESION -> menos EXPRESION .)
    Or              reduce using rule 63 (EXPRESION -> menos EXPRESION .)
    AS              reduce using rule 63 (EXPRESION -> menos EXPRESION .)
    llaveA          reduce using rule 63 (EXPRESION -> menos EXPRESION .)
    ptComa          reduce using rule 63 (EXPRESION -> menos EXPRESION .)
    CorC            reduce using rule 63 (EXPRESION -> menos EXPRESION .)
    ParC            reduce using rule 63 (EXPRESION -> menos EXPRESION .)
    Coma            reduce using rule 63 (EXPRESION -> menos EXPRESION .)

  ! mas             [ shift and go to state 43 ]
  ! menos           [ shift and go to state 44 ]
  ! por             [ shift and go to state 45 ]
  ! dividido        [ shift and go to state 46 ]
  ! modulo          [ shift and go to state 47 ]
  ! menorQue        [ shift and go to state 48 ]
  ! mayorQue        [ shift and go to state 49 ]
  ! menorIgual      [ shift and go to state 50 ]
  ! mayorIgual      [ shift and go to state 51 ]
  ! dobleIgual      [ shift and go to state 52 ]
  ! diferenteQue    [ shift and go to state 53 ]
  ! And             [ shift and go to state 54 ]
  ! Or              [ shift and go to state 55 ]
  ! AS              [ shift and go to state 56 ]


state 59

    (64) EXPRESION -> ParA EXPRESION . ParC
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    ParC            shift and go to state 97
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 60

    (65) EXPRESION -> I64 dosPuntos . dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC

    dosPuntos       shift and go to state 98


state 61

    (66) EXPRESION -> F64 dosPuntos . dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC

    dosPuntos       shift and go to state 99


state 62

    (75) EXPRESION -> not EXPRESION .
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    mas             reduce using rule 75 (EXPRESION -> not EXPRESION .)
    menos           reduce using rule 75 (EXPRESION -> not EXPRESION .)
    por             reduce using rule 75 (EXPRESION -> not EXPRESION .)
    dividido        reduce using rule 75 (EXPRESION -> not EXPRESION .)
    modulo          reduce using rule 75 (EXPRESION -> not EXPRESION .)
    menorQue        reduce using rule 75 (EXPRESION -> not EXPRESION .)
    mayorQue        reduce using rule 75 (EXPRESION -> not EXPRESION .)
    menorIgual      reduce using rule 75 (EXPRESION -> not EXPRESION .)
    mayorIgual      reduce using rule 75 (EXPRESION -> not EXPRESION .)
    dobleIgual      reduce using rule 75 (EXPRESION -> not EXPRESION .)
    diferenteQue    reduce using rule 75 (EXPRESION -> not EXPRESION .)
    And             reduce using rule 75 (EXPRESION -> not EXPRESION .)
    Or              reduce using rule 75 (EXPRESION -> not EXPRESION .)
    AS              reduce using rule 75 (EXPRESION -> not EXPRESION .)
    llaveA          reduce using rule 75 (EXPRESION -> not EXPRESION .)
    ptComa          reduce using rule 75 (EXPRESION -> not EXPRESION .)
    CorC            reduce using rule 75 (EXPRESION -> not EXPRESION .)
    ParC            reduce using rule 75 (EXPRESION -> not EXPRESION .)
    Coma            reduce using rule 75 (EXPRESION -> not EXPRESION .)

  ! mas             [ shift and go to state 43 ]
  ! menos           [ shift and go to state 44 ]
  ! por             [ shift and go to state 45 ]
  ! dividido        [ shift and go to state 46 ]
  ! modulo          [ shift and go to state 47 ]
  ! menorQue        [ shift and go to state 48 ]
  ! mayorQue        [ shift and go to state 49 ]
  ! menorIgual      [ shift and go to state 50 ]
  ! mayorIgual      [ shift and go to state 51 ]
  ! dobleIgual      [ shift and go to state 52 ]
  ! diferenteQue    [ shift and go to state 53 ]
  ! And             [ shift and go to state 54 ]
  ! Or              [ shift and go to state 55 ]
  ! AS              [ shift and go to state 56 ]


state 63

    (78) EXPRESION -> vec not . CorA COMASEX CorC
    (79) EXPRESION -> vec not . CorA EXPRESION ptComa EXPRESION CorC

    CorA            shift and go to state 100


state 64

    (81) EXPRESION -> Id punto . Remove ParA EXPRESION ParC
    (52) INSERTVEC -> Id punto . Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    Remove          shift and go to state 101
    Insert          shift and go to state 41


state 65

    (88) EXPRESION -> Id CorA . EXPRESION CorC
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 102
    INSERTVEC                      shift and go to state 27

state 66

    (54) IMPRIMIR -> PrintLn not ParA . String ParC ptComa
    (55) IMPRIMIR -> PrintLn not ParA . String Coma COMASEX ParC ptComa

    String          shift and go to state 103


state 67

    (5) DECLARACION -> Let Id igual EXPRESION . ptComa
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    ptComa          shift and go to state 104
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 68

    (6) DECLARACION -> Let Id dosPuntos I64 . igual EXPRESION ptComa

    igual           shift and go to state 105


state 69

    (7) DECLARACION -> Let Id dosPuntos F64 . igual EXPRESION ptComa

    igual           shift and go to state 106


state 70

    (8) DECLARACION -> Let Id dosPuntos StrA . igual EXPRESION ptComa

    igual           shift and go to state 107


state 71

    (9) DECLARACION -> Let Id dosPuntos Str . igual EXPRESION ptComa

    igual           shift and go to state 108


state 72

    (10) DECLARACION -> Let Id dosPuntos Bool . igual EXPRESION ptComa

    igual           shift and go to state 109


state 73

    (11) DECLARACION -> Let Id dosPuntos CharAux . igual EXPRESION ptComa

    igual           shift and go to state 110


state 74

    (19) DECLARACION -> Let Id dosPuntos VEC . menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (20) DECLARACION -> Let Id dosPuntos VEC . menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (21) DECLARACION -> Let Id dosPuntos VEC . menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (22) DECLARACION -> Let Id dosPuntos VEC . menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (23) DECLARACION -> Let Id dosPuntos VEC . menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (24) DECLARACION -> Let Id dosPuntos VEC . menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (25) DECLARACION -> Let Id dosPuntos VEC . menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (26) DECLARACION -> Let Id dosPuntos VEC . menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (27) DECLARACION -> Let Id dosPuntos VEC . menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (28) DECLARACION -> Let Id dosPuntos VEC . menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (29) DECLARACION -> Let Id dosPuntos VEC . menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (30) DECLARACION -> Let Id dosPuntos VEC . menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    menorQue        shift and go to state 111


state 75

    (12) DECLARACION -> Let Mut Id igual . EXPRESION ptComa
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 112
    INSERTVEC                      shift and go to state 27

state 76

    (13) DECLARACION -> Let Mut Id dosPuntos . I64 igual EXPRESION ptComa
    (14) DECLARACION -> Let Mut Id dosPuntos . F64 igual EXPRESION ptComa
    (15) DECLARACION -> Let Mut Id dosPuntos . StrA igual EXPRESION ptComa
    (16) DECLARACION -> Let Mut Id dosPuntos . Str igual EXPRESION ptComa
    (17) DECLARACION -> Let Mut Id dosPuntos . Bool igual EXPRESION ptComa
    (18) DECLARACION -> Let Mut Id dosPuntos . CharAux igual EXPRESION ptComa
    (31) DECLARACION -> Let Mut Id dosPuntos . VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (32) DECLARACION -> Let Mut Id dosPuntos . VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (33) DECLARACION -> Let Mut Id dosPuntos . VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (34) DECLARACION -> Let Mut Id dosPuntos . VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (35) DECLARACION -> Let Mut Id dosPuntos . VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (36) DECLARACION -> Let Mut Id dosPuntos . VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (37) DECLARACION -> Let Mut Id dosPuntos . VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (38) DECLARACION -> Let Mut Id dosPuntos . VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (39) DECLARACION -> Let Mut Id dosPuntos . VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (40) DECLARACION -> Let Mut Id dosPuntos . VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (41) DECLARACION -> Let Mut Id dosPuntos . VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (42) DECLARACION -> Let Mut Id dosPuntos . VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    I64             shift and go to state 113
    F64             shift and go to state 114
    StrA            shift and go to state 115
    Str             shift and go to state 116
    Bool            shift and go to state 117
    CharAux         shift and go to state 118
    VEC             shift and go to state 119


state 77

    (47) ASIGNACION -> Id igual EXPRESION ptComa .

    Let             reduce using rule 47 (ASIGNACION -> Id igual EXPRESION ptComa .)
    If              reduce using rule 47 (ASIGNACION -> Id igual EXPRESION ptComa .)
    Id              reduce using rule 47 (ASIGNACION -> Id igual EXPRESION ptComa .)
    PrintLn         reduce using rule 47 (ASIGNACION -> Id igual EXPRESION ptComa .)
    $end            reduce using rule 47 (ASIGNACION -> Id igual EXPRESION ptComa .)
    llaveC          reduce using rule 47 (ASIGNACION -> Id igual EXPRESION ptComa .)


state 78

    (48) ASIGNACION -> Id CorA EXPRESION CorC . igual EXPRESION ptComa

    igual           shift and go to state 120


state 79

    (50) PUSH -> Id punto Push ParA . EXPRESION ParC ptComa
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 121
    INSERTVEC                      shift and go to state 27

state 80

    (52) INSERTVEC -> Id punto Insert ParA . EXPRESION Coma EXPRESION ParC ptComa
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 122
    INSERTVEC                      shift and go to state 27

state 81

    (58) EXPRESION -> EXPRESION mas EXPRESION .
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    mas             reduce using rule 58 (EXPRESION -> EXPRESION mas EXPRESION .)
    menos           reduce using rule 58 (EXPRESION -> EXPRESION mas EXPRESION .)
    And             reduce using rule 58 (EXPRESION -> EXPRESION mas EXPRESION .)
    Or              reduce using rule 58 (EXPRESION -> EXPRESION mas EXPRESION .)
    AS              reduce using rule 58 (EXPRESION -> EXPRESION mas EXPRESION .)
    llaveA          reduce using rule 58 (EXPRESION -> EXPRESION mas EXPRESION .)
    ptComa          reduce using rule 58 (EXPRESION -> EXPRESION mas EXPRESION .)
    CorC            reduce using rule 58 (EXPRESION -> EXPRESION mas EXPRESION .)
    ParC            reduce using rule 58 (EXPRESION -> EXPRESION mas EXPRESION .)
    Coma            reduce using rule 58 (EXPRESION -> EXPRESION mas EXPRESION .)
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53

  ! por             [ reduce using rule 58 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! dividido        [ reduce using rule 58 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! modulo          [ reduce using rule 58 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! menorQue        [ reduce using rule 58 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! mayorQue        [ reduce using rule 58 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! menorIgual      [ reduce using rule 58 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! mayorIgual      [ reduce using rule 58 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! dobleIgual      [ reduce using rule 58 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! diferenteQue    [ reduce using rule 58 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! mas             [ shift and go to state 43 ]
  ! menos           [ shift and go to state 44 ]
  ! And             [ shift and go to state 54 ]
  ! Or              [ shift and go to state 55 ]
  ! AS              [ shift and go to state 56 ]


state 82

    (59) EXPRESION -> EXPRESION menos EXPRESION .
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    mas             reduce using rule 59 (EXPRESION -> EXPRESION menos EXPRESION .)
    menos           reduce using rule 59 (EXPRESION -> EXPRESION menos EXPRESION .)
    And             reduce using rule 59 (EXPRESION -> EXPRESION menos EXPRESION .)
    Or              reduce using rule 59 (EXPRESION -> EXPRESION menos EXPRESION .)
    AS              reduce using rule 59 (EXPRESION -> EXPRESION menos EXPRESION .)
    llaveA          reduce using rule 59 (EXPRESION -> EXPRESION menos EXPRESION .)
    ptComa          reduce using rule 59 (EXPRESION -> EXPRESION menos EXPRESION .)
    CorC            reduce using rule 59 (EXPRESION -> EXPRESION menos EXPRESION .)
    ParC            reduce using rule 59 (EXPRESION -> EXPRESION menos EXPRESION .)
    Coma            reduce using rule 59 (EXPRESION -> EXPRESION menos EXPRESION .)
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53

  ! por             [ reduce using rule 59 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! dividido        [ reduce using rule 59 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! modulo          [ reduce using rule 59 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! menorQue        [ reduce using rule 59 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! mayorQue        [ reduce using rule 59 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! menorIgual      [ reduce using rule 59 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! mayorIgual      [ reduce using rule 59 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! dobleIgual      [ reduce using rule 59 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! diferenteQue    [ reduce using rule 59 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! mas             [ shift and go to state 43 ]
  ! menos           [ shift and go to state 44 ]
  ! And             [ shift and go to state 54 ]
  ! Or              [ shift and go to state 55 ]
  ! AS              [ shift and go to state 56 ]


state 83

    (60) EXPRESION -> EXPRESION por EXPRESION .
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    mas             reduce using rule 60 (EXPRESION -> EXPRESION por EXPRESION .)
    menos           reduce using rule 60 (EXPRESION -> EXPRESION por EXPRESION .)
    por             reduce using rule 60 (EXPRESION -> EXPRESION por EXPRESION .)
    dividido        reduce using rule 60 (EXPRESION -> EXPRESION por EXPRESION .)
    modulo          reduce using rule 60 (EXPRESION -> EXPRESION por EXPRESION .)
    menorQue        reduce using rule 60 (EXPRESION -> EXPRESION por EXPRESION .)
    mayorQue        reduce using rule 60 (EXPRESION -> EXPRESION por EXPRESION .)
    menorIgual      reduce using rule 60 (EXPRESION -> EXPRESION por EXPRESION .)
    mayorIgual      reduce using rule 60 (EXPRESION -> EXPRESION por EXPRESION .)
    dobleIgual      reduce using rule 60 (EXPRESION -> EXPRESION por EXPRESION .)
    diferenteQue    reduce using rule 60 (EXPRESION -> EXPRESION por EXPRESION .)
    And             reduce using rule 60 (EXPRESION -> EXPRESION por EXPRESION .)
    Or              reduce using rule 60 (EXPRESION -> EXPRESION por EXPRESION .)
    AS              reduce using rule 60 (EXPRESION -> EXPRESION por EXPRESION .)
    llaveA          reduce using rule 60 (EXPRESION -> EXPRESION por EXPRESION .)
    ptComa          reduce using rule 60 (EXPRESION -> EXPRESION por EXPRESION .)
    CorC            reduce using rule 60 (EXPRESION -> EXPRESION por EXPRESION .)
    ParC            reduce using rule 60 (EXPRESION -> EXPRESION por EXPRESION .)
    Coma            reduce using rule 60 (EXPRESION -> EXPRESION por EXPRESION .)

  ! mas             [ shift and go to state 43 ]
  ! menos           [ shift and go to state 44 ]
  ! por             [ shift and go to state 45 ]
  ! dividido        [ shift and go to state 46 ]
  ! modulo          [ shift and go to state 47 ]
  ! menorQue        [ shift and go to state 48 ]
  ! mayorQue        [ shift and go to state 49 ]
  ! menorIgual      [ shift and go to state 50 ]
  ! mayorIgual      [ shift and go to state 51 ]
  ! dobleIgual      [ shift and go to state 52 ]
  ! diferenteQue    [ shift and go to state 53 ]
  ! And             [ shift and go to state 54 ]
  ! Or              [ shift and go to state 55 ]
  ! AS              [ shift and go to state 56 ]


state 84

    (61) EXPRESION -> EXPRESION dividido EXPRESION .
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    mas             reduce using rule 61 (EXPRESION -> EXPRESION dividido EXPRESION .)
    menos           reduce using rule 61 (EXPRESION -> EXPRESION dividido EXPRESION .)
    por             reduce using rule 61 (EXPRESION -> EXPRESION dividido EXPRESION .)
    dividido        reduce using rule 61 (EXPRESION -> EXPRESION dividido EXPRESION .)
    modulo          reduce using rule 61 (EXPRESION -> EXPRESION dividido EXPRESION .)
    menorQue        reduce using rule 61 (EXPRESION -> EXPRESION dividido EXPRESION .)
    mayorQue        reduce using rule 61 (EXPRESION -> EXPRESION dividido EXPRESION .)
    menorIgual      reduce using rule 61 (EXPRESION -> EXPRESION dividido EXPRESION .)
    mayorIgual      reduce using rule 61 (EXPRESION -> EXPRESION dividido EXPRESION .)
    dobleIgual      reduce using rule 61 (EXPRESION -> EXPRESION dividido EXPRESION .)
    diferenteQue    reduce using rule 61 (EXPRESION -> EXPRESION dividido EXPRESION .)
    And             reduce using rule 61 (EXPRESION -> EXPRESION dividido EXPRESION .)
    Or              reduce using rule 61 (EXPRESION -> EXPRESION dividido EXPRESION .)
    AS              reduce using rule 61 (EXPRESION -> EXPRESION dividido EXPRESION .)
    llaveA          reduce using rule 61 (EXPRESION -> EXPRESION dividido EXPRESION .)
    ptComa          reduce using rule 61 (EXPRESION -> EXPRESION dividido EXPRESION .)
    CorC            reduce using rule 61 (EXPRESION -> EXPRESION dividido EXPRESION .)
    ParC            reduce using rule 61 (EXPRESION -> EXPRESION dividido EXPRESION .)
    Coma            reduce using rule 61 (EXPRESION -> EXPRESION dividido EXPRESION .)

  ! mas             [ shift and go to state 43 ]
  ! menos           [ shift and go to state 44 ]
  ! por             [ shift and go to state 45 ]
  ! dividido        [ shift and go to state 46 ]
  ! modulo          [ shift and go to state 47 ]
  ! menorQue        [ shift and go to state 48 ]
  ! mayorQue        [ shift and go to state 49 ]
  ! menorIgual      [ shift and go to state 50 ]
  ! mayorIgual      [ shift and go to state 51 ]
  ! dobleIgual      [ shift and go to state 52 ]
  ! diferenteQue    [ shift and go to state 53 ]
  ! And             [ shift and go to state 54 ]
  ! Or              [ shift and go to state 55 ]
  ! AS              [ shift and go to state 56 ]


state 85

    (62) EXPRESION -> EXPRESION modulo EXPRESION .
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    mas             reduce using rule 62 (EXPRESION -> EXPRESION modulo EXPRESION .)
    menos           reduce using rule 62 (EXPRESION -> EXPRESION modulo EXPRESION .)
    por             reduce using rule 62 (EXPRESION -> EXPRESION modulo EXPRESION .)
    dividido        reduce using rule 62 (EXPRESION -> EXPRESION modulo EXPRESION .)
    modulo          reduce using rule 62 (EXPRESION -> EXPRESION modulo EXPRESION .)
    menorQue        reduce using rule 62 (EXPRESION -> EXPRESION modulo EXPRESION .)
    mayorQue        reduce using rule 62 (EXPRESION -> EXPRESION modulo EXPRESION .)
    menorIgual      reduce using rule 62 (EXPRESION -> EXPRESION modulo EXPRESION .)
    mayorIgual      reduce using rule 62 (EXPRESION -> EXPRESION modulo EXPRESION .)
    dobleIgual      reduce using rule 62 (EXPRESION -> EXPRESION modulo EXPRESION .)
    diferenteQue    reduce using rule 62 (EXPRESION -> EXPRESION modulo EXPRESION .)
    And             reduce using rule 62 (EXPRESION -> EXPRESION modulo EXPRESION .)
    Or              reduce using rule 62 (EXPRESION -> EXPRESION modulo EXPRESION .)
    AS              reduce using rule 62 (EXPRESION -> EXPRESION modulo EXPRESION .)
    llaveA          reduce using rule 62 (EXPRESION -> EXPRESION modulo EXPRESION .)
    ptComa          reduce using rule 62 (EXPRESION -> EXPRESION modulo EXPRESION .)
    CorC            reduce using rule 62 (EXPRESION -> EXPRESION modulo EXPRESION .)
    ParC            reduce using rule 62 (EXPRESION -> EXPRESION modulo EXPRESION .)
    Coma            reduce using rule 62 (EXPRESION -> EXPRESION modulo EXPRESION .)

  ! mas             [ shift and go to state 43 ]
  ! menos           [ shift and go to state 44 ]
  ! por             [ shift and go to state 45 ]
  ! dividido        [ shift and go to state 46 ]
  ! modulo          [ shift and go to state 47 ]
  ! menorQue        [ shift and go to state 48 ]
  ! mayorQue        [ shift and go to state 49 ]
  ! menorIgual      [ shift and go to state 50 ]
  ! mayorIgual      [ shift and go to state 51 ]
  ! dobleIgual      [ shift and go to state 52 ]
  ! diferenteQue    [ shift and go to state 53 ]
  ! And             [ shift and go to state 54 ]
  ! Or              [ shift and go to state 55 ]
  ! AS              [ shift and go to state 56 ]


state 86

    (67) EXPRESION -> EXPRESION menorQue EXPRESION .
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    mas             reduce using rule 67 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    menos           reduce using rule 67 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    menorQue        reduce using rule 67 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    mayorQue        reduce using rule 67 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    menorIgual      reduce using rule 67 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    mayorIgual      reduce using rule 67 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    dobleIgual      reduce using rule 67 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    diferenteQue    reduce using rule 67 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    And             reduce using rule 67 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    Or              reduce using rule 67 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    AS              reduce using rule 67 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    llaveA          reduce using rule 67 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    ptComa          reduce using rule 67 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    CorC            reduce using rule 67 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    ParC            reduce using rule 67 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    Coma            reduce using rule 67 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47

  ! por             [ reduce using rule 67 (EXPRESION -> EXPRESION menorQue EXPRESION .) ]
  ! dividido        [ reduce using rule 67 (EXPRESION -> EXPRESION menorQue EXPRESION .) ]
  ! modulo          [ reduce using rule 67 (EXPRESION -> EXPRESION menorQue EXPRESION .) ]
  ! mas             [ shift and go to state 43 ]
  ! menos           [ shift and go to state 44 ]
  ! menorQue        [ shift and go to state 48 ]
  ! mayorQue        [ shift and go to state 49 ]
  ! menorIgual      [ shift and go to state 50 ]
  ! mayorIgual      [ shift and go to state 51 ]
  ! dobleIgual      [ shift and go to state 52 ]
  ! diferenteQue    [ shift and go to state 53 ]
  ! And             [ shift and go to state 54 ]
  ! Or              [ shift and go to state 55 ]
  ! AS              [ shift and go to state 56 ]


state 87

    (68) EXPRESION -> EXPRESION mayorQue EXPRESION .
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    mas             reduce using rule 68 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    menos           reduce using rule 68 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    menorQue        reduce using rule 68 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    mayorQue        reduce using rule 68 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    menorIgual      reduce using rule 68 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    mayorIgual      reduce using rule 68 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    dobleIgual      reduce using rule 68 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    diferenteQue    reduce using rule 68 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    And             reduce using rule 68 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    Or              reduce using rule 68 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    AS              reduce using rule 68 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    llaveA          reduce using rule 68 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    ptComa          reduce using rule 68 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    CorC            reduce using rule 68 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    ParC            reduce using rule 68 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    Coma            reduce using rule 68 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47

  ! por             [ reduce using rule 68 (EXPRESION -> EXPRESION mayorQue EXPRESION .) ]
  ! dividido        [ reduce using rule 68 (EXPRESION -> EXPRESION mayorQue EXPRESION .) ]
  ! modulo          [ reduce using rule 68 (EXPRESION -> EXPRESION mayorQue EXPRESION .) ]
  ! mas             [ shift and go to state 43 ]
  ! menos           [ shift and go to state 44 ]
  ! menorQue        [ shift and go to state 48 ]
  ! mayorQue        [ shift and go to state 49 ]
  ! menorIgual      [ shift and go to state 50 ]
  ! mayorIgual      [ shift and go to state 51 ]
  ! dobleIgual      [ shift and go to state 52 ]
  ! diferenteQue    [ shift and go to state 53 ]
  ! And             [ shift and go to state 54 ]
  ! Or              [ shift and go to state 55 ]
  ! AS              [ shift and go to state 56 ]


state 88

    (69) EXPRESION -> EXPRESION menorIgual EXPRESION .
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    mas             reduce using rule 69 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    menos           reduce using rule 69 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    menorQue        reduce using rule 69 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    mayorQue        reduce using rule 69 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    menorIgual      reduce using rule 69 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    mayorIgual      reduce using rule 69 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    dobleIgual      reduce using rule 69 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    diferenteQue    reduce using rule 69 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    And             reduce using rule 69 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    Or              reduce using rule 69 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    AS              reduce using rule 69 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    llaveA          reduce using rule 69 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    ptComa          reduce using rule 69 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    CorC            reduce using rule 69 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    ParC            reduce using rule 69 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    Coma            reduce using rule 69 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47

  ! por             [ reduce using rule 69 (EXPRESION -> EXPRESION menorIgual EXPRESION .) ]
  ! dividido        [ reduce using rule 69 (EXPRESION -> EXPRESION menorIgual EXPRESION .) ]
  ! modulo          [ reduce using rule 69 (EXPRESION -> EXPRESION menorIgual EXPRESION .) ]
  ! mas             [ shift and go to state 43 ]
  ! menos           [ shift and go to state 44 ]
  ! menorQue        [ shift and go to state 48 ]
  ! mayorQue        [ shift and go to state 49 ]
  ! menorIgual      [ shift and go to state 50 ]
  ! mayorIgual      [ shift and go to state 51 ]
  ! dobleIgual      [ shift and go to state 52 ]
  ! diferenteQue    [ shift and go to state 53 ]
  ! And             [ shift and go to state 54 ]
  ! Or              [ shift and go to state 55 ]
  ! AS              [ shift and go to state 56 ]


state 89

    (70) EXPRESION -> EXPRESION mayorIgual EXPRESION .
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    mas             reduce using rule 70 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    menos           reduce using rule 70 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    menorQue        reduce using rule 70 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    mayorQue        reduce using rule 70 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    menorIgual      reduce using rule 70 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    mayorIgual      reduce using rule 70 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    dobleIgual      reduce using rule 70 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    diferenteQue    reduce using rule 70 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    And             reduce using rule 70 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    Or              reduce using rule 70 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    AS              reduce using rule 70 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    llaveA          reduce using rule 70 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    ptComa          reduce using rule 70 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    CorC            reduce using rule 70 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    ParC            reduce using rule 70 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    Coma            reduce using rule 70 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47

  ! por             [ reduce using rule 70 (EXPRESION -> EXPRESION mayorIgual EXPRESION .) ]
  ! dividido        [ reduce using rule 70 (EXPRESION -> EXPRESION mayorIgual EXPRESION .) ]
  ! modulo          [ reduce using rule 70 (EXPRESION -> EXPRESION mayorIgual EXPRESION .) ]
  ! mas             [ shift and go to state 43 ]
  ! menos           [ shift and go to state 44 ]
  ! menorQue        [ shift and go to state 48 ]
  ! mayorQue        [ shift and go to state 49 ]
  ! menorIgual      [ shift and go to state 50 ]
  ! mayorIgual      [ shift and go to state 51 ]
  ! dobleIgual      [ shift and go to state 52 ]
  ! diferenteQue    [ shift and go to state 53 ]
  ! And             [ shift and go to state 54 ]
  ! Or              [ shift and go to state 55 ]
  ! AS              [ shift and go to state 56 ]


state 90

    (71) EXPRESION -> EXPRESION dobleIgual EXPRESION .
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    mas             reduce using rule 71 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    menos           reduce using rule 71 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    menorQue        reduce using rule 71 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    mayorQue        reduce using rule 71 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    menorIgual      reduce using rule 71 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    mayorIgual      reduce using rule 71 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    dobleIgual      reduce using rule 71 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    diferenteQue    reduce using rule 71 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    And             reduce using rule 71 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    Or              reduce using rule 71 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    AS              reduce using rule 71 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    llaveA          reduce using rule 71 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    ptComa          reduce using rule 71 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    CorC            reduce using rule 71 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    ParC            reduce using rule 71 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    Coma            reduce using rule 71 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47

  ! por             [ reduce using rule 71 (EXPRESION -> EXPRESION dobleIgual EXPRESION .) ]
  ! dividido        [ reduce using rule 71 (EXPRESION -> EXPRESION dobleIgual EXPRESION .) ]
  ! modulo          [ reduce using rule 71 (EXPRESION -> EXPRESION dobleIgual EXPRESION .) ]
  ! mas             [ shift and go to state 43 ]
  ! menos           [ shift and go to state 44 ]
  ! menorQue        [ shift and go to state 48 ]
  ! mayorQue        [ shift and go to state 49 ]
  ! menorIgual      [ shift and go to state 50 ]
  ! mayorIgual      [ shift and go to state 51 ]
  ! dobleIgual      [ shift and go to state 52 ]
  ! diferenteQue    [ shift and go to state 53 ]
  ! And             [ shift and go to state 54 ]
  ! Or              [ shift and go to state 55 ]
  ! AS              [ shift and go to state 56 ]


state 91

    (72) EXPRESION -> EXPRESION diferenteQue EXPRESION .
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    mas             reduce using rule 72 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    menos           reduce using rule 72 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    menorQue        reduce using rule 72 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    mayorQue        reduce using rule 72 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    menorIgual      reduce using rule 72 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    mayorIgual      reduce using rule 72 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    dobleIgual      reduce using rule 72 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    diferenteQue    reduce using rule 72 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    And             reduce using rule 72 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    Or              reduce using rule 72 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    AS              reduce using rule 72 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    llaveA          reduce using rule 72 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    ptComa          reduce using rule 72 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    CorC            reduce using rule 72 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    ParC            reduce using rule 72 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    Coma            reduce using rule 72 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47

  ! por             [ reduce using rule 72 (EXPRESION -> EXPRESION diferenteQue EXPRESION .) ]
  ! dividido        [ reduce using rule 72 (EXPRESION -> EXPRESION diferenteQue EXPRESION .) ]
  ! modulo          [ reduce using rule 72 (EXPRESION -> EXPRESION diferenteQue EXPRESION .) ]
  ! mas             [ shift and go to state 43 ]
  ! menos           [ shift and go to state 44 ]
  ! menorQue        [ shift and go to state 48 ]
  ! mayorQue        [ shift and go to state 49 ]
  ! menorIgual      [ shift and go to state 50 ]
  ! mayorIgual      [ shift and go to state 51 ]
  ! dobleIgual      [ shift and go to state 52 ]
  ! diferenteQue    [ shift and go to state 53 ]
  ! And             [ shift and go to state 54 ]
  ! Or              [ shift and go to state 55 ]
  ! AS              [ shift and go to state 56 ]


state 92

    (73) EXPRESION -> EXPRESION And EXPRESION .
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    And             reduce using rule 73 (EXPRESION -> EXPRESION And EXPRESION .)
    Or              reduce using rule 73 (EXPRESION -> EXPRESION And EXPRESION .)
    AS              reduce using rule 73 (EXPRESION -> EXPRESION And EXPRESION .)
    llaveA          reduce using rule 73 (EXPRESION -> EXPRESION And EXPRESION .)
    ptComa          reduce using rule 73 (EXPRESION -> EXPRESION And EXPRESION .)
    CorC            reduce using rule 73 (EXPRESION -> EXPRESION And EXPRESION .)
    ParC            reduce using rule 73 (EXPRESION -> EXPRESION And EXPRESION .)
    Coma            reduce using rule 73 (EXPRESION -> EXPRESION And EXPRESION .)
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53

  ! mas             [ reduce using rule 73 (EXPRESION -> EXPRESION And EXPRESION .) ]
  ! menos           [ reduce using rule 73 (EXPRESION -> EXPRESION And EXPRESION .) ]
  ! por             [ reduce using rule 73 (EXPRESION -> EXPRESION And EXPRESION .) ]
  ! dividido        [ reduce using rule 73 (EXPRESION -> EXPRESION And EXPRESION .) ]
  ! modulo          [ reduce using rule 73 (EXPRESION -> EXPRESION And EXPRESION .) ]
  ! menorQue        [ reduce using rule 73 (EXPRESION -> EXPRESION And EXPRESION .) ]
  ! mayorQue        [ reduce using rule 73 (EXPRESION -> EXPRESION And EXPRESION .) ]
  ! menorIgual      [ reduce using rule 73 (EXPRESION -> EXPRESION And EXPRESION .) ]
  ! mayorIgual      [ reduce using rule 73 (EXPRESION -> EXPRESION And EXPRESION .) ]
  ! dobleIgual      [ reduce using rule 73 (EXPRESION -> EXPRESION And EXPRESION .) ]
  ! diferenteQue    [ reduce using rule 73 (EXPRESION -> EXPRESION And EXPRESION .) ]
  ! And             [ shift and go to state 54 ]
  ! Or              [ shift and go to state 55 ]
  ! AS              [ shift and go to state 56 ]


state 93

    (74) EXPRESION -> EXPRESION Or EXPRESION .
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    Or              reduce using rule 74 (EXPRESION -> EXPRESION Or EXPRESION .)
    AS              reduce using rule 74 (EXPRESION -> EXPRESION Or EXPRESION .)
    llaveA          reduce using rule 74 (EXPRESION -> EXPRESION Or EXPRESION .)
    ptComa          reduce using rule 74 (EXPRESION -> EXPRESION Or EXPRESION .)
    CorC            reduce using rule 74 (EXPRESION -> EXPRESION Or EXPRESION .)
    ParC            reduce using rule 74 (EXPRESION -> EXPRESION Or EXPRESION .)
    Coma            reduce using rule 74 (EXPRESION -> EXPRESION Or EXPRESION .)
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54

  ! mas             [ reduce using rule 74 (EXPRESION -> EXPRESION Or EXPRESION .) ]
  ! menos           [ reduce using rule 74 (EXPRESION -> EXPRESION Or EXPRESION .) ]
  ! por             [ reduce using rule 74 (EXPRESION -> EXPRESION Or EXPRESION .) ]
  ! dividido        [ reduce using rule 74 (EXPRESION -> EXPRESION Or EXPRESION .) ]
  ! modulo          [ reduce using rule 74 (EXPRESION -> EXPRESION Or EXPRESION .) ]
  ! menorQue        [ reduce using rule 74 (EXPRESION -> EXPRESION Or EXPRESION .) ]
  ! mayorQue        [ reduce using rule 74 (EXPRESION -> EXPRESION Or EXPRESION .) ]
  ! menorIgual      [ reduce using rule 74 (EXPRESION -> EXPRESION Or EXPRESION .) ]
  ! mayorIgual      [ reduce using rule 74 (EXPRESION -> EXPRESION Or EXPRESION .) ]
  ! dobleIgual      [ reduce using rule 74 (EXPRESION -> EXPRESION Or EXPRESION .) ]
  ! diferenteQue    [ reduce using rule 74 (EXPRESION -> EXPRESION Or EXPRESION .) ]
  ! And             [ reduce using rule 74 (EXPRESION -> EXPRESION Or EXPRESION .) ]
  ! Or              [ shift and go to state 55 ]
  ! AS              [ shift and go to state 56 ]


state 94

    (76) EXPRESION -> EXPRESION AS I64 .

    mas             reduce using rule 76 (EXPRESION -> EXPRESION AS I64 .)
    menos           reduce using rule 76 (EXPRESION -> EXPRESION AS I64 .)
    por             reduce using rule 76 (EXPRESION -> EXPRESION AS I64 .)
    dividido        reduce using rule 76 (EXPRESION -> EXPRESION AS I64 .)
    modulo          reduce using rule 76 (EXPRESION -> EXPRESION AS I64 .)
    menorQue        reduce using rule 76 (EXPRESION -> EXPRESION AS I64 .)
    mayorQue        reduce using rule 76 (EXPRESION -> EXPRESION AS I64 .)
    menorIgual      reduce using rule 76 (EXPRESION -> EXPRESION AS I64 .)
    mayorIgual      reduce using rule 76 (EXPRESION -> EXPRESION AS I64 .)
    dobleIgual      reduce using rule 76 (EXPRESION -> EXPRESION AS I64 .)
    diferenteQue    reduce using rule 76 (EXPRESION -> EXPRESION AS I64 .)
    And             reduce using rule 76 (EXPRESION -> EXPRESION AS I64 .)
    Or              reduce using rule 76 (EXPRESION -> EXPRESION AS I64 .)
    AS              reduce using rule 76 (EXPRESION -> EXPRESION AS I64 .)
    llaveA          reduce using rule 76 (EXPRESION -> EXPRESION AS I64 .)
    ptComa          reduce using rule 76 (EXPRESION -> EXPRESION AS I64 .)
    CorC            reduce using rule 76 (EXPRESION -> EXPRESION AS I64 .)
    ParC            reduce using rule 76 (EXPRESION -> EXPRESION AS I64 .)
    Coma            reduce using rule 76 (EXPRESION -> EXPRESION AS I64 .)


state 95

    (77) EXPRESION -> EXPRESION AS F64 .

    mas             reduce using rule 77 (EXPRESION -> EXPRESION AS F64 .)
    menos           reduce using rule 77 (EXPRESION -> EXPRESION AS F64 .)
    por             reduce using rule 77 (EXPRESION -> EXPRESION AS F64 .)
    dividido        reduce using rule 77 (EXPRESION -> EXPRESION AS F64 .)
    modulo          reduce using rule 77 (EXPRESION -> EXPRESION AS F64 .)
    menorQue        reduce using rule 77 (EXPRESION -> EXPRESION AS F64 .)
    mayorQue        reduce using rule 77 (EXPRESION -> EXPRESION AS F64 .)
    menorIgual      reduce using rule 77 (EXPRESION -> EXPRESION AS F64 .)
    mayorIgual      reduce using rule 77 (EXPRESION -> EXPRESION AS F64 .)
    dobleIgual      reduce using rule 77 (EXPRESION -> EXPRESION AS F64 .)
    diferenteQue    reduce using rule 77 (EXPRESION -> EXPRESION AS F64 .)
    And             reduce using rule 77 (EXPRESION -> EXPRESION AS F64 .)
    Or              reduce using rule 77 (EXPRESION -> EXPRESION AS F64 .)
    AS              reduce using rule 77 (EXPRESION -> EXPRESION AS F64 .)
    llaveA          reduce using rule 77 (EXPRESION -> EXPRESION AS F64 .)
    ptComa          reduce using rule 77 (EXPRESION -> EXPRESION AS F64 .)
    CorC            reduce using rule 77 (EXPRESION -> EXPRESION AS F64 .)
    ParC            reduce using rule 77 (EXPRESION -> EXPRESION AS F64 .)
    Coma            reduce using rule 77 (EXPRESION -> EXPRESION AS F64 .)


state 96

    (45) BLOQUE -> llaveA INSTRUCCIONES . llaveC
    (2) INSTRUCCIONES -> INSTRUCCIONES . INSTRUCCION
    (4) INSTRUCCION -> . DECLARACION
    (43) INSTRUCCION -> . IF
    (46) INSTRUCCION -> . ASIGNACION
    (49) INSTRUCCION -> . PUSH
    (51) INSTRUCCION -> . INSERTVEC
    (53) INSTRUCCION -> . IMPRIMIR
    (5) DECLARACION -> . Let Id igual EXPRESION ptComa
    (6) DECLARACION -> . Let Id dosPuntos I64 igual EXPRESION ptComa
    (7) DECLARACION -> . Let Id dosPuntos F64 igual EXPRESION ptComa
    (8) DECLARACION -> . Let Id dosPuntos StrA igual EXPRESION ptComa
    (9) DECLARACION -> . Let Id dosPuntos Str igual EXPRESION ptComa
    (10) DECLARACION -> . Let Id dosPuntos Bool igual EXPRESION ptComa
    (11) DECLARACION -> . Let Id dosPuntos CharAux igual EXPRESION ptComa
    (12) DECLARACION -> . Let Mut Id igual EXPRESION ptComa
    (13) DECLARACION -> . Let Mut Id dosPuntos I64 igual EXPRESION ptComa
    (14) DECLARACION -> . Let Mut Id dosPuntos F64 igual EXPRESION ptComa
    (15) DECLARACION -> . Let Mut Id dosPuntos StrA igual EXPRESION ptComa
    (16) DECLARACION -> . Let Mut Id dosPuntos Str igual EXPRESION ptComa
    (17) DECLARACION -> . Let Mut Id dosPuntos Bool igual EXPRESION ptComa
    (18) DECLARACION -> . Let Mut Id dosPuntos CharAux igual EXPRESION ptComa
    (19) DECLARACION -> . Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (20) DECLARACION -> . Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (21) DECLARACION -> . Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (22) DECLARACION -> . Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (23) DECLARACION -> . Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (24) DECLARACION -> . Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (25) DECLARACION -> . Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (26) DECLARACION -> . Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (27) DECLARACION -> . Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (28) DECLARACION -> . Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (29) DECLARACION -> . Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (30) DECLARACION -> . Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (31) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (32) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (33) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (34) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (35) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (36) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (37) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (38) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (39) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (40) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (41) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (42) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (44) IF -> . If EXPRESION BLOQUE
    (47) ASIGNACION -> . Id igual EXPRESION ptComa
    (48) ASIGNACION -> . Id CorA EXPRESION CorC igual EXPRESION ptComa
    (50) PUSH -> . Id punto Push ParA EXPRESION ParC ptComa
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa
    (54) IMPRIMIR -> . PrintLn not ParA String ParC ptComa
    (55) IMPRIMIR -> . PrintLn not ParA String Coma COMASEX ParC ptComa

    llaveC          shift and go to state 123
    Let             shift and go to state 10
    If              shift and go to state 12
    Id              shift and go to state 11
    PrintLn         shift and go to state 13

    INSTRUCCION                    shift and go to state 14
    DECLARACION                    shift and go to state 4
    IF                             shift and go to state 5
    ASIGNACION                     shift and go to state 6
    PUSH                           shift and go to state 7
    INSERTVEC                      shift and go to state 8
    IMPRIMIR                       shift and go to state 9

state 97

    (64) EXPRESION -> ParA EXPRESION ParC .

    mas             reduce using rule 64 (EXPRESION -> ParA EXPRESION ParC .)
    menos           reduce using rule 64 (EXPRESION -> ParA EXPRESION ParC .)
    por             reduce using rule 64 (EXPRESION -> ParA EXPRESION ParC .)
    dividido        reduce using rule 64 (EXPRESION -> ParA EXPRESION ParC .)
    modulo          reduce using rule 64 (EXPRESION -> ParA EXPRESION ParC .)
    menorQue        reduce using rule 64 (EXPRESION -> ParA EXPRESION ParC .)
    mayorQue        reduce using rule 64 (EXPRESION -> ParA EXPRESION ParC .)
    menorIgual      reduce using rule 64 (EXPRESION -> ParA EXPRESION ParC .)
    mayorIgual      reduce using rule 64 (EXPRESION -> ParA EXPRESION ParC .)
    dobleIgual      reduce using rule 64 (EXPRESION -> ParA EXPRESION ParC .)
    diferenteQue    reduce using rule 64 (EXPRESION -> ParA EXPRESION ParC .)
    And             reduce using rule 64 (EXPRESION -> ParA EXPRESION ParC .)
    Or              reduce using rule 64 (EXPRESION -> ParA EXPRESION ParC .)
    AS              reduce using rule 64 (EXPRESION -> ParA EXPRESION ParC .)
    llaveA          reduce using rule 64 (EXPRESION -> ParA EXPRESION ParC .)
    ptComa          reduce using rule 64 (EXPRESION -> ParA EXPRESION ParC .)
    CorC            reduce using rule 64 (EXPRESION -> ParA EXPRESION ParC .)
    ParC            reduce using rule 64 (EXPRESION -> ParA EXPRESION ParC .)
    Coma            reduce using rule 64 (EXPRESION -> ParA EXPRESION ParC .)


state 98

    (65) EXPRESION -> I64 dosPuntos dosPuntos . Powi ParA EXPRESION Coma EXPRESION ParC

    Powi            shift and go to state 124


state 99

    (66) EXPRESION -> F64 dosPuntos dosPuntos . Powf ParA EXPRESION Coma EXPRESION ParC

    Powf            shift and go to state 125


state 100

    (78) EXPRESION -> vec not CorA . COMASEX CorC
    (79) EXPRESION -> vec not CorA . EXPRESION ptComa EXPRESION CorC
    (56) COMASEX -> . COMASEX Coma EXPRESION
    (57) COMASEX -> . EXPRESION
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    COMASEX                        shift and go to state 126
    EXPRESION                      shift and go to state 127
    INSERTVEC                      shift and go to state 27

state 101

    (81) EXPRESION -> Id punto Remove . ParA EXPRESION ParC

    ParA            shift and go to state 128


state 102

    (88) EXPRESION -> Id CorA EXPRESION . CorC
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    CorC            shift and go to state 129
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 103

    (54) IMPRIMIR -> PrintLn not ParA String . ParC ptComa
    (55) IMPRIMIR -> PrintLn not ParA String . Coma COMASEX ParC ptComa

    ParC            shift and go to state 130
    Coma            shift and go to state 131


state 104

    (5) DECLARACION -> Let Id igual EXPRESION ptComa .

    Let             reduce using rule 5 (DECLARACION -> Let Id igual EXPRESION ptComa .)
    If              reduce using rule 5 (DECLARACION -> Let Id igual EXPRESION ptComa .)
    Id              reduce using rule 5 (DECLARACION -> Let Id igual EXPRESION ptComa .)
    PrintLn         reduce using rule 5 (DECLARACION -> Let Id igual EXPRESION ptComa .)
    $end            reduce using rule 5 (DECLARACION -> Let Id igual EXPRESION ptComa .)
    llaveC          reduce using rule 5 (DECLARACION -> Let Id igual EXPRESION ptComa .)


state 105

    (6) DECLARACION -> Let Id dosPuntos I64 igual . EXPRESION ptComa
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 132
    INSERTVEC                      shift and go to state 27

state 106

    (7) DECLARACION -> Let Id dosPuntos F64 igual . EXPRESION ptComa
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 133
    INSERTVEC                      shift and go to state 27

state 107

    (8) DECLARACION -> Let Id dosPuntos StrA igual . EXPRESION ptComa
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 134
    INSERTVEC                      shift and go to state 27

state 108

    (9) DECLARACION -> Let Id dosPuntos Str igual . EXPRESION ptComa
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 135
    INSERTVEC                      shift and go to state 27

state 109

    (10) DECLARACION -> Let Id dosPuntos Bool igual . EXPRESION ptComa
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 136
    INSERTVEC                      shift and go to state 27

state 110

    (11) DECLARACION -> Let Id dosPuntos CharAux igual . EXPRESION ptComa
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 137
    INSERTVEC                      shift and go to state 27

state 111

    (19) DECLARACION -> Let Id dosPuntos VEC menorQue . I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (20) DECLARACION -> Let Id dosPuntos VEC menorQue . F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (21) DECLARACION -> Let Id dosPuntos VEC menorQue . StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (22) DECLARACION -> Let Id dosPuntos VEC menorQue . Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (23) DECLARACION -> Let Id dosPuntos VEC menorQue . Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (24) DECLARACION -> Let Id dosPuntos VEC menorQue . CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (25) DECLARACION -> Let Id dosPuntos VEC menorQue . I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (26) DECLARACION -> Let Id dosPuntos VEC menorQue . F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (27) DECLARACION -> Let Id dosPuntos VEC menorQue . StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (28) DECLARACION -> Let Id dosPuntos VEC menorQue . Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (29) DECLARACION -> Let Id dosPuntos VEC menorQue . Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (30) DECLARACION -> Let Id dosPuntos VEC menorQue . CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    I64             shift and go to state 138
    F64             shift and go to state 139
    StrA            shift and go to state 140
    Str             shift and go to state 141
    Bool            shift and go to state 142
    CharAux         shift and go to state 143


state 112

    (12) DECLARACION -> Let Mut Id igual EXPRESION . ptComa
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    ptComa          shift and go to state 144
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 113

    (13) DECLARACION -> Let Mut Id dosPuntos I64 . igual EXPRESION ptComa

    igual           shift and go to state 145


state 114

    (14) DECLARACION -> Let Mut Id dosPuntos F64 . igual EXPRESION ptComa

    igual           shift and go to state 146


state 115

    (15) DECLARACION -> Let Mut Id dosPuntos StrA . igual EXPRESION ptComa

    igual           shift and go to state 147


state 116

    (16) DECLARACION -> Let Mut Id dosPuntos Str . igual EXPRESION ptComa

    igual           shift and go to state 148


state 117

    (17) DECLARACION -> Let Mut Id dosPuntos Bool . igual EXPRESION ptComa

    igual           shift and go to state 149


state 118

    (18) DECLARACION -> Let Mut Id dosPuntos CharAux . igual EXPRESION ptComa

    igual           shift and go to state 150


state 119

    (31) DECLARACION -> Let Mut Id dosPuntos VEC . menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (32) DECLARACION -> Let Mut Id dosPuntos VEC . menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (33) DECLARACION -> Let Mut Id dosPuntos VEC . menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (34) DECLARACION -> Let Mut Id dosPuntos VEC . menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (35) DECLARACION -> Let Mut Id dosPuntos VEC . menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (36) DECLARACION -> Let Mut Id dosPuntos VEC . menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (37) DECLARACION -> Let Mut Id dosPuntos VEC . menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (38) DECLARACION -> Let Mut Id dosPuntos VEC . menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (39) DECLARACION -> Let Mut Id dosPuntos VEC . menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (40) DECLARACION -> Let Mut Id dosPuntos VEC . menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (41) DECLARACION -> Let Mut Id dosPuntos VEC . menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (42) DECLARACION -> Let Mut Id dosPuntos VEC . menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    menorQue        shift and go to state 151


state 120

    (48) ASIGNACION -> Id CorA EXPRESION CorC igual . EXPRESION ptComa
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 152
    INSERTVEC                      shift and go to state 27

state 121

    (50) PUSH -> Id punto Push ParA EXPRESION . ParC ptComa
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    ParC            shift and go to state 153
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 122

    (52) INSERTVEC -> Id punto Insert ParA EXPRESION . Coma EXPRESION ParC ptComa
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    Coma            shift and go to state 154
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 123

    (45) BLOQUE -> llaveA INSTRUCCIONES llaveC .

    Let             reduce using rule 45 (BLOQUE -> llaveA INSTRUCCIONES llaveC .)
    If              reduce using rule 45 (BLOQUE -> llaveA INSTRUCCIONES llaveC .)
    Id              reduce using rule 45 (BLOQUE -> llaveA INSTRUCCIONES llaveC .)
    PrintLn         reduce using rule 45 (BLOQUE -> llaveA INSTRUCCIONES llaveC .)
    $end            reduce using rule 45 (BLOQUE -> llaveA INSTRUCCIONES llaveC .)
    llaveC          reduce using rule 45 (BLOQUE -> llaveA INSTRUCCIONES llaveC .)


state 124

    (65) EXPRESION -> I64 dosPuntos dosPuntos Powi . ParA EXPRESION Coma EXPRESION ParC

    ParA            shift and go to state 155


state 125

    (66) EXPRESION -> F64 dosPuntos dosPuntos Powf . ParA EXPRESION Coma EXPRESION ParC

    ParA            shift and go to state 156


state 126

    (78) EXPRESION -> vec not CorA COMASEX . CorC
    (56) COMASEX -> COMASEX . Coma EXPRESION

    CorC            shift and go to state 157
    Coma            shift and go to state 158


state 127

    (79) EXPRESION -> vec not CorA EXPRESION . ptComa EXPRESION CorC
    (57) COMASEX -> EXPRESION .
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    ptComa          shift and go to state 159
    CorC            reduce using rule 57 (COMASEX -> EXPRESION .)
    Coma            reduce using rule 57 (COMASEX -> EXPRESION .)
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 128

    (81) EXPRESION -> Id punto Remove ParA . EXPRESION ParC
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 160
    INSERTVEC                      shift and go to state 27

state 129

    (88) EXPRESION -> Id CorA EXPRESION CorC .

    mas             reduce using rule 88 (EXPRESION -> Id CorA EXPRESION CorC .)
    menos           reduce using rule 88 (EXPRESION -> Id CorA EXPRESION CorC .)
    por             reduce using rule 88 (EXPRESION -> Id CorA EXPRESION CorC .)
    dividido        reduce using rule 88 (EXPRESION -> Id CorA EXPRESION CorC .)
    modulo          reduce using rule 88 (EXPRESION -> Id CorA EXPRESION CorC .)
    menorQue        reduce using rule 88 (EXPRESION -> Id CorA EXPRESION CorC .)
    mayorQue        reduce using rule 88 (EXPRESION -> Id CorA EXPRESION CorC .)
    menorIgual      reduce using rule 88 (EXPRESION -> Id CorA EXPRESION CorC .)
    mayorIgual      reduce using rule 88 (EXPRESION -> Id CorA EXPRESION CorC .)
    dobleIgual      reduce using rule 88 (EXPRESION -> Id CorA EXPRESION CorC .)
    diferenteQue    reduce using rule 88 (EXPRESION -> Id CorA EXPRESION CorC .)
    And             reduce using rule 88 (EXPRESION -> Id CorA EXPRESION CorC .)
    Or              reduce using rule 88 (EXPRESION -> Id CorA EXPRESION CorC .)
    AS              reduce using rule 88 (EXPRESION -> Id CorA EXPRESION CorC .)
    llaveA          reduce using rule 88 (EXPRESION -> Id CorA EXPRESION CorC .)
    ptComa          reduce using rule 88 (EXPRESION -> Id CorA EXPRESION CorC .)
    CorC            reduce using rule 88 (EXPRESION -> Id CorA EXPRESION CorC .)
    ParC            reduce using rule 88 (EXPRESION -> Id CorA EXPRESION CorC .)
    Coma            reduce using rule 88 (EXPRESION -> Id CorA EXPRESION CorC .)


state 130

    (54) IMPRIMIR -> PrintLn not ParA String ParC . ptComa

    ptComa          shift and go to state 161


state 131

    (55) IMPRIMIR -> PrintLn not ParA String Coma . COMASEX ParC ptComa
    (56) COMASEX -> . COMASEX Coma EXPRESION
    (57) COMASEX -> . EXPRESION
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    COMASEX                        shift and go to state 162
    EXPRESION                      shift and go to state 163
    INSERTVEC                      shift and go to state 27

state 132

    (6) DECLARACION -> Let Id dosPuntos I64 igual EXPRESION . ptComa
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    ptComa          shift and go to state 164
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 133

    (7) DECLARACION -> Let Id dosPuntos F64 igual EXPRESION . ptComa
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    ptComa          shift and go to state 165
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 134

    (8) DECLARACION -> Let Id dosPuntos StrA igual EXPRESION . ptComa
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    ptComa          shift and go to state 166
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 135

    (9) DECLARACION -> Let Id dosPuntos Str igual EXPRESION . ptComa
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    ptComa          shift and go to state 167
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 136

    (10) DECLARACION -> Let Id dosPuntos Bool igual EXPRESION . ptComa
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    ptComa          shift and go to state 168
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 137

    (11) DECLARACION -> Let Id dosPuntos CharAux igual EXPRESION . ptComa
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    ptComa          shift and go to state 169
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 138

    (19) DECLARACION -> Let Id dosPuntos VEC menorQue I64 . mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (25) DECLARACION -> Let Id dosPuntos VEC menorQue I64 . mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    mayorQue        shift and go to state 170


state 139

    (20) DECLARACION -> Let Id dosPuntos VEC menorQue F64 . mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (26) DECLARACION -> Let Id dosPuntos VEC menorQue F64 . mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    mayorQue        shift and go to state 171


state 140

    (21) DECLARACION -> Let Id dosPuntos VEC menorQue StrA . mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (27) DECLARACION -> Let Id dosPuntos VEC menorQue StrA . mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    mayorQue        shift and go to state 172


state 141

    (22) DECLARACION -> Let Id dosPuntos VEC menorQue Str . mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (28) DECLARACION -> Let Id dosPuntos VEC menorQue Str . mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    mayorQue        shift and go to state 173


state 142

    (23) DECLARACION -> Let Id dosPuntos VEC menorQue Bool . mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (29) DECLARACION -> Let Id dosPuntos VEC menorQue Bool . mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    mayorQue        shift and go to state 174


state 143

    (24) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux . mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (30) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux . mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    mayorQue        shift and go to state 175


state 144

    (12) DECLARACION -> Let Mut Id igual EXPRESION ptComa .

    Let             reduce using rule 12 (DECLARACION -> Let Mut Id igual EXPRESION ptComa .)
    If              reduce using rule 12 (DECLARACION -> Let Mut Id igual EXPRESION ptComa .)
    Id              reduce using rule 12 (DECLARACION -> Let Mut Id igual EXPRESION ptComa .)
    PrintLn         reduce using rule 12 (DECLARACION -> Let Mut Id igual EXPRESION ptComa .)
    $end            reduce using rule 12 (DECLARACION -> Let Mut Id igual EXPRESION ptComa .)
    llaveC          reduce using rule 12 (DECLARACION -> Let Mut Id igual EXPRESION ptComa .)


state 145

    (13) DECLARACION -> Let Mut Id dosPuntos I64 igual . EXPRESION ptComa
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 176
    INSERTVEC                      shift and go to state 27

state 146

    (14) DECLARACION -> Let Mut Id dosPuntos F64 igual . EXPRESION ptComa
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 177
    INSERTVEC                      shift and go to state 27

state 147

    (15) DECLARACION -> Let Mut Id dosPuntos StrA igual . EXPRESION ptComa
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 178
    INSERTVEC                      shift and go to state 27

state 148

    (16) DECLARACION -> Let Mut Id dosPuntos Str igual . EXPRESION ptComa
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 179
    INSERTVEC                      shift and go to state 27

state 149

    (17) DECLARACION -> Let Mut Id dosPuntos Bool igual . EXPRESION ptComa
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 180
    INSERTVEC                      shift and go to state 27

state 150

    (18) DECLARACION -> Let Mut Id dosPuntos CharAux igual . EXPRESION ptComa
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 181
    INSERTVEC                      shift and go to state 27

state 151

    (31) DECLARACION -> Let Mut Id dosPuntos VEC menorQue . I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (32) DECLARACION -> Let Mut Id dosPuntos VEC menorQue . F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (33) DECLARACION -> Let Mut Id dosPuntos VEC menorQue . StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (34) DECLARACION -> Let Mut Id dosPuntos VEC menorQue . Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (35) DECLARACION -> Let Mut Id dosPuntos VEC menorQue . Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (36) DECLARACION -> Let Mut Id dosPuntos VEC menorQue . CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (37) DECLARACION -> Let Mut Id dosPuntos VEC menorQue . I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (38) DECLARACION -> Let Mut Id dosPuntos VEC menorQue . F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (39) DECLARACION -> Let Mut Id dosPuntos VEC menorQue . StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (40) DECLARACION -> Let Mut Id dosPuntos VEC menorQue . Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (41) DECLARACION -> Let Mut Id dosPuntos VEC menorQue . Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (42) DECLARACION -> Let Mut Id dosPuntos VEC menorQue . CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    I64             shift and go to state 182
    F64             shift and go to state 183
    StrA            shift and go to state 184
    Str             shift and go to state 185
    Bool            shift and go to state 186
    CharAux         shift and go to state 187


state 152

    (48) ASIGNACION -> Id CorA EXPRESION CorC igual EXPRESION . ptComa
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    ptComa          shift and go to state 188
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 153

    (50) PUSH -> Id punto Push ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 189


state 154

    (52) INSERTVEC -> Id punto Insert ParA EXPRESION Coma . EXPRESION ParC ptComa
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 190
    INSERTVEC                      shift and go to state 27

state 155

    (65) EXPRESION -> I64 dosPuntos dosPuntos Powi ParA . EXPRESION Coma EXPRESION ParC
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 191
    INSERTVEC                      shift and go to state 27

state 156

    (66) EXPRESION -> F64 dosPuntos dosPuntos Powf ParA . EXPRESION Coma EXPRESION ParC
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 192
    INSERTVEC                      shift and go to state 27

state 157

    (78) EXPRESION -> vec not CorA COMASEX CorC .

    mas             reduce using rule 78 (EXPRESION -> vec not CorA COMASEX CorC .)
    menos           reduce using rule 78 (EXPRESION -> vec not CorA COMASEX CorC .)
    por             reduce using rule 78 (EXPRESION -> vec not CorA COMASEX CorC .)
    dividido        reduce using rule 78 (EXPRESION -> vec not CorA COMASEX CorC .)
    modulo          reduce using rule 78 (EXPRESION -> vec not CorA COMASEX CorC .)
    menorQue        reduce using rule 78 (EXPRESION -> vec not CorA COMASEX CorC .)
    mayorQue        reduce using rule 78 (EXPRESION -> vec not CorA COMASEX CorC .)
    menorIgual      reduce using rule 78 (EXPRESION -> vec not CorA COMASEX CorC .)
    mayorIgual      reduce using rule 78 (EXPRESION -> vec not CorA COMASEX CorC .)
    dobleIgual      reduce using rule 78 (EXPRESION -> vec not CorA COMASEX CorC .)
    diferenteQue    reduce using rule 78 (EXPRESION -> vec not CorA COMASEX CorC .)
    And             reduce using rule 78 (EXPRESION -> vec not CorA COMASEX CorC .)
    Or              reduce using rule 78 (EXPRESION -> vec not CorA COMASEX CorC .)
    AS              reduce using rule 78 (EXPRESION -> vec not CorA COMASEX CorC .)
    llaveA          reduce using rule 78 (EXPRESION -> vec not CorA COMASEX CorC .)
    ptComa          reduce using rule 78 (EXPRESION -> vec not CorA COMASEX CorC .)
    CorC            reduce using rule 78 (EXPRESION -> vec not CorA COMASEX CorC .)
    ParC            reduce using rule 78 (EXPRESION -> vec not CorA COMASEX CorC .)
    Coma            reduce using rule 78 (EXPRESION -> vec not CorA COMASEX CorC .)


state 158

    (56) COMASEX -> COMASEX Coma . EXPRESION
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 193
    INSERTVEC                      shift and go to state 27

state 159

    (79) EXPRESION -> vec not CorA EXPRESION ptComa . EXPRESION CorC
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 194
    INSERTVEC                      shift and go to state 27

state 160

    (81) EXPRESION -> Id punto Remove ParA EXPRESION . ParC
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    ParC            shift and go to state 195
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 161

    (54) IMPRIMIR -> PrintLn not ParA String ParC ptComa .

    Let             reduce using rule 54 (IMPRIMIR -> PrintLn not ParA String ParC ptComa .)
    If              reduce using rule 54 (IMPRIMIR -> PrintLn not ParA String ParC ptComa .)
    Id              reduce using rule 54 (IMPRIMIR -> PrintLn not ParA String ParC ptComa .)
    PrintLn         reduce using rule 54 (IMPRIMIR -> PrintLn not ParA String ParC ptComa .)
    $end            reduce using rule 54 (IMPRIMIR -> PrintLn not ParA String ParC ptComa .)
    llaveC          reduce using rule 54 (IMPRIMIR -> PrintLn not ParA String ParC ptComa .)


state 162

    (55) IMPRIMIR -> PrintLn not ParA String Coma COMASEX . ParC ptComa
    (56) COMASEX -> COMASEX . Coma EXPRESION

    ParC            shift and go to state 196
    Coma            shift and go to state 158


state 163

    (57) COMASEX -> EXPRESION .
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    ParC            reduce using rule 57 (COMASEX -> EXPRESION .)
    Coma            reduce using rule 57 (COMASEX -> EXPRESION .)
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 164

    (6) DECLARACION -> Let Id dosPuntos I64 igual EXPRESION ptComa .

    Let             reduce using rule 6 (DECLARACION -> Let Id dosPuntos I64 igual EXPRESION ptComa .)
    If              reduce using rule 6 (DECLARACION -> Let Id dosPuntos I64 igual EXPRESION ptComa .)
    Id              reduce using rule 6 (DECLARACION -> Let Id dosPuntos I64 igual EXPRESION ptComa .)
    PrintLn         reduce using rule 6 (DECLARACION -> Let Id dosPuntos I64 igual EXPRESION ptComa .)
    $end            reduce using rule 6 (DECLARACION -> Let Id dosPuntos I64 igual EXPRESION ptComa .)
    llaveC          reduce using rule 6 (DECLARACION -> Let Id dosPuntos I64 igual EXPRESION ptComa .)


state 165

    (7) DECLARACION -> Let Id dosPuntos F64 igual EXPRESION ptComa .

    Let             reduce using rule 7 (DECLARACION -> Let Id dosPuntos F64 igual EXPRESION ptComa .)
    If              reduce using rule 7 (DECLARACION -> Let Id dosPuntos F64 igual EXPRESION ptComa .)
    Id              reduce using rule 7 (DECLARACION -> Let Id dosPuntos F64 igual EXPRESION ptComa .)
    PrintLn         reduce using rule 7 (DECLARACION -> Let Id dosPuntos F64 igual EXPRESION ptComa .)
    $end            reduce using rule 7 (DECLARACION -> Let Id dosPuntos F64 igual EXPRESION ptComa .)
    llaveC          reduce using rule 7 (DECLARACION -> Let Id dosPuntos F64 igual EXPRESION ptComa .)


state 166

    (8) DECLARACION -> Let Id dosPuntos StrA igual EXPRESION ptComa .

    Let             reduce using rule 8 (DECLARACION -> Let Id dosPuntos StrA igual EXPRESION ptComa .)
    If              reduce using rule 8 (DECLARACION -> Let Id dosPuntos StrA igual EXPRESION ptComa .)
    Id              reduce using rule 8 (DECLARACION -> Let Id dosPuntos StrA igual EXPRESION ptComa .)
    PrintLn         reduce using rule 8 (DECLARACION -> Let Id dosPuntos StrA igual EXPRESION ptComa .)
    $end            reduce using rule 8 (DECLARACION -> Let Id dosPuntos StrA igual EXPRESION ptComa .)
    llaveC          reduce using rule 8 (DECLARACION -> Let Id dosPuntos StrA igual EXPRESION ptComa .)


state 167

    (9) DECLARACION -> Let Id dosPuntos Str igual EXPRESION ptComa .

    Let             reduce using rule 9 (DECLARACION -> Let Id dosPuntos Str igual EXPRESION ptComa .)
    If              reduce using rule 9 (DECLARACION -> Let Id dosPuntos Str igual EXPRESION ptComa .)
    Id              reduce using rule 9 (DECLARACION -> Let Id dosPuntos Str igual EXPRESION ptComa .)
    PrintLn         reduce using rule 9 (DECLARACION -> Let Id dosPuntos Str igual EXPRESION ptComa .)
    $end            reduce using rule 9 (DECLARACION -> Let Id dosPuntos Str igual EXPRESION ptComa .)
    llaveC          reduce using rule 9 (DECLARACION -> Let Id dosPuntos Str igual EXPRESION ptComa .)


state 168

    (10) DECLARACION -> Let Id dosPuntos Bool igual EXPRESION ptComa .

    Let             reduce using rule 10 (DECLARACION -> Let Id dosPuntos Bool igual EXPRESION ptComa .)
    If              reduce using rule 10 (DECLARACION -> Let Id dosPuntos Bool igual EXPRESION ptComa .)
    Id              reduce using rule 10 (DECLARACION -> Let Id dosPuntos Bool igual EXPRESION ptComa .)
    PrintLn         reduce using rule 10 (DECLARACION -> Let Id dosPuntos Bool igual EXPRESION ptComa .)
    $end            reduce using rule 10 (DECLARACION -> Let Id dosPuntos Bool igual EXPRESION ptComa .)
    llaveC          reduce using rule 10 (DECLARACION -> Let Id dosPuntos Bool igual EXPRESION ptComa .)


state 169

    (11) DECLARACION -> Let Id dosPuntos CharAux igual EXPRESION ptComa .

    Let             reduce using rule 11 (DECLARACION -> Let Id dosPuntos CharAux igual EXPRESION ptComa .)
    If              reduce using rule 11 (DECLARACION -> Let Id dosPuntos CharAux igual EXPRESION ptComa .)
    Id              reduce using rule 11 (DECLARACION -> Let Id dosPuntos CharAux igual EXPRESION ptComa .)
    PrintLn         reduce using rule 11 (DECLARACION -> Let Id dosPuntos CharAux igual EXPRESION ptComa .)
    $end            reduce using rule 11 (DECLARACION -> Let Id dosPuntos CharAux igual EXPRESION ptComa .)
    llaveC          reduce using rule 11 (DECLARACION -> Let Id dosPuntos CharAux igual EXPRESION ptComa .)


state 170

    (19) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue . igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (25) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue . igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 197


state 171

    (20) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue . igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (26) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue . igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 198


state 172

    (21) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue . igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (27) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue . igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 199


state 173

    (22) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue . igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (28) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue . igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 200


state 174

    (23) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue . igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (29) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue . igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 201


state 175

    (24) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue . igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (30) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue . igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 202


state 176

    (13) DECLARACION -> Let Mut Id dosPuntos I64 igual EXPRESION . ptComa
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    ptComa          shift and go to state 203
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 177

    (14) DECLARACION -> Let Mut Id dosPuntos F64 igual EXPRESION . ptComa
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    ptComa          shift and go to state 204
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 178

    (15) DECLARACION -> Let Mut Id dosPuntos StrA igual EXPRESION . ptComa
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    ptComa          shift and go to state 205
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 179

    (16) DECLARACION -> Let Mut Id dosPuntos Str igual EXPRESION . ptComa
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    ptComa          shift and go to state 206
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 180

    (17) DECLARACION -> Let Mut Id dosPuntos Bool igual EXPRESION . ptComa
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    ptComa          shift and go to state 207
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 181

    (18) DECLARACION -> Let Mut Id dosPuntos CharAux igual EXPRESION . ptComa
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    ptComa          shift and go to state 208
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 182

    (31) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 . mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (37) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 . mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    mayorQue        shift and go to state 209


state 183

    (32) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 . mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (38) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 . mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    mayorQue        shift and go to state 210


state 184

    (33) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA . mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (39) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA . mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    mayorQue        shift and go to state 211


state 185

    (34) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str . mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (40) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str . mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    mayorQue        shift and go to state 212


state 186

    (35) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool . mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (41) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool . mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    mayorQue        shift and go to state 213


state 187

    (36) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux . mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (42) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux . mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    mayorQue        shift and go to state 214


state 188

    (48) ASIGNACION -> Id CorA EXPRESION CorC igual EXPRESION ptComa .

    Let             reduce using rule 48 (ASIGNACION -> Id CorA EXPRESION CorC igual EXPRESION ptComa .)
    If              reduce using rule 48 (ASIGNACION -> Id CorA EXPRESION CorC igual EXPRESION ptComa .)
    Id              reduce using rule 48 (ASIGNACION -> Id CorA EXPRESION CorC igual EXPRESION ptComa .)
    PrintLn         reduce using rule 48 (ASIGNACION -> Id CorA EXPRESION CorC igual EXPRESION ptComa .)
    $end            reduce using rule 48 (ASIGNACION -> Id CorA EXPRESION CorC igual EXPRESION ptComa .)
    llaveC          reduce using rule 48 (ASIGNACION -> Id CorA EXPRESION CorC igual EXPRESION ptComa .)


state 189

    (50) PUSH -> Id punto Push ParA EXPRESION ParC ptComa .

    Let             reduce using rule 50 (PUSH -> Id punto Push ParA EXPRESION ParC ptComa .)
    If              reduce using rule 50 (PUSH -> Id punto Push ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 50 (PUSH -> Id punto Push ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 50 (PUSH -> Id punto Push ParA EXPRESION ParC ptComa .)
    $end            reduce using rule 50 (PUSH -> Id punto Push ParA EXPRESION ParC ptComa .)
    llaveC          reduce using rule 50 (PUSH -> Id punto Push ParA EXPRESION ParC ptComa .)


state 190

    (52) INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION . ParC ptComa
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    ParC            shift and go to state 215
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 191

    (65) EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION . Coma EXPRESION ParC
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    Coma            shift and go to state 216
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 192

    (66) EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION . Coma EXPRESION ParC
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    Coma            shift and go to state 217
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 193

    (56) COMASEX -> COMASEX Coma EXPRESION .
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    CorC            reduce using rule 56 (COMASEX -> COMASEX Coma EXPRESION .)
    Coma            reduce using rule 56 (COMASEX -> COMASEX Coma EXPRESION .)
    ParC            reduce using rule 56 (COMASEX -> COMASEX Coma EXPRESION .)
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 194

    (79) EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION . CorC
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    CorC            shift and go to state 218
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 195

    (81) EXPRESION -> Id punto Remove ParA EXPRESION ParC .

    mas             reduce using rule 81 (EXPRESION -> Id punto Remove ParA EXPRESION ParC .)
    menos           reduce using rule 81 (EXPRESION -> Id punto Remove ParA EXPRESION ParC .)
    por             reduce using rule 81 (EXPRESION -> Id punto Remove ParA EXPRESION ParC .)
    dividido        reduce using rule 81 (EXPRESION -> Id punto Remove ParA EXPRESION ParC .)
    modulo          reduce using rule 81 (EXPRESION -> Id punto Remove ParA EXPRESION ParC .)
    menorQue        reduce using rule 81 (EXPRESION -> Id punto Remove ParA EXPRESION ParC .)
    mayorQue        reduce using rule 81 (EXPRESION -> Id punto Remove ParA EXPRESION ParC .)
    menorIgual      reduce using rule 81 (EXPRESION -> Id punto Remove ParA EXPRESION ParC .)
    mayorIgual      reduce using rule 81 (EXPRESION -> Id punto Remove ParA EXPRESION ParC .)
    dobleIgual      reduce using rule 81 (EXPRESION -> Id punto Remove ParA EXPRESION ParC .)
    diferenteQue    reduce using rule 81 (EXPRESION -> Id punto Remove ParA EXPRESION ParC .)
    And             reduce using rule 81 (EXPRESION -> Id punto Remove ParA EXPRESION ParC .)
    Or              reduce using rule 81 (EXPRESION -> Id punto Remove ParA EXPRESION ParC .)
    AS              reduce using rule 81 (EXPRESION -> Id punto Remove ParA EXPRESION ParC .)
    llaveA          reduce using rule 81 (EXPRESION -> Id punto Remove ParA EXPRESION ParC .)
    ptComa          reduce using rule 81 (EXPRESION -> Id punto Remove ParA EXPRESION ParC .)
    CorC            reduce using rule 81 (EXPRESION -> Id punto Remove ParA EXPRESION ParC .)
    ParC            reduce using rule 81 (EXPRESION -> Id punto Remove ParA EXPRESION ParC .)
    Coma            reduce using rule 81 (EXPRESION -> Id punto Remove ParA EXPRESION ParC .)


state 196

    (55) IMPRIMIR -> PrintLn not ParA String Coma COMASEX ParC . ptComa

    ptComa          shift and go to state 219


state 197

    (19) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual . VEC dosPuntos dosPuntos New ParA ParC ptComa
    (25) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual . VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    VEC             shift and go to state 220


state 198

    (20) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual . VEC dosPuntos dosPuntos New ParA ParC ptComa
    (26) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual . VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    VEC             shift and go to state 221


state 199

    (21) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual . VEC dosPuntos dosPuntos New ParA ParC ptComa
    (27) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual . VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    VEC             shift and go to state 222


state 200

    (22) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual . VEC dosPuntos dosPuntos New ParA ParC ptComa
    (28) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual . VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    VEC             shift and go to state 223


state 201

    (23) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual . VEC dosPuntos dosPuntos New ParA ParC ptComa
    (29) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual . VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    VEC             shift and go to state 224


state 202

    (24) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual . VEC dosPuntos dosPuntos New ParA ParC ptComa
    (30) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual . VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    VEC             shift and go to state 225


state 203

    (13) DECLARACION -> Let Mut Id dosPuntos I64 igual EXPRESION ptComa .

    Let             reduce using rule 13 (DECLARACION -> Let Mut Id dosPuntos I64 igual EXPRESION ptComa .)
    If              reduce using rule 13 (DECLARACION -> Let Mut Id dosPuntos I64 igual EXPRESION ptComa .)
    Id              reduce using rule 13 (DECLARACION -> Let Mut Id dosPuntos I64 igual EXPRESION ptComa .)
    PrintLn         reduce using rule 13 (DECLARACION -> Let Mut Id dosPuntos I64 igual EXPRESION ptComa .)
    $end            reduce using rule 13 (DECLARACION -> Let Mut Id dosPuntos I64 igual EXPRESION ptComa .)
    llaveC          reduce using rule 13 (DECLARACION -> Let Mut Id dosPuntos I64 igual EXPRESION ptComa .)


state 204

    (14) DECLARACION -> Let Mut Id dosPuntos F64 igual EXPRESION ptComa .

    Let             reduce using rule 14 (DECLARACION -> Let Mut Id dosPuntos F64 igual EXPRESION ptComa .)
    If              reduce using rule 14 (DECLARACION -> Let Mut Id dosPuntos F64 igual EXPRESION ptComa .)
    Id              reduce using rule 14 (DECLARACION -> Let Mut Id dosPuntos F64 igual EXPRESION ptComa .)
    PrintLn         reduce using rule 14 (DECLARACION -> Let Mut Id dosPuntos F64 igual EXPRESION ptComa .)
    $end            reduce using rule 14 (DECLARACION -> Let Mut Id dosPuntos F64 igual EXPRESION ptComa .)
    llaveC          reduce using rule 14 (DECLARACION -> Let Mut Id dosPuntos F64 igual EXPRESION ptComa .)


state 205

    (15) DECLARACION -> Let Mut Id dosPuntos StrA igual EXPRESION ptComa .

    Let             reduce using rule 15 (DECLARACION -> Let Mut Id dosPuntos StrA igual EXPRESION ptComa .)
    If              reduce using rule 15 (DECLARACION -> Let Mut Id dosPuntos StrA igual EXPRESION ptComa .)
    Id              reduce using rule 15 (DECLARACION -> Let Mut Id dosPuntos StrA igual EXPRESION ptComa .)
    PrintLn         reduce using rule 15 (DECLARACION -> Let Mut Id dosPuntos StrA igual EXPRESION ptComa .)
    $end            reduce using rule 15 (DECLARACION -> Let Mut Id dosPuntos StrA igual EXPRESION ptComa .)
    llaveC          reduce using rule 15 (DECLARACION -> Let Mut Id dosPuntos StrA igual EXPRESION ptComa .)


state 206

    (16) DECLARACION -> Let Mut Id dosPuntos Str igual EXPRESION ptComa .

    Let             reduce using rule 16 (DECLARACION -> Let Mut Id dosPuntos Str igual EXPRESION ptComa .)
    If              reduce using rule 16 (DECLARACION -> Let Mut Id dosPuntos Str igual EXPRESION ptComa .)
    Id              reduce using rule 16 (DECLARACION -> Let Mut Id dosPuntos Str igual EXPRESION ptComa .)
    PrintLn         reduce using rule 16 (DECLARACION -> Let Mut Id dosPuntos Str igual EXPRESION ptComa .)
    $end            reduce using rule 16 (DECLARACION -> Let Mut Id dosPuntos Str igual EXPRESION ptComa .)
    llaveC          reduce using rule 16 (DECLARACION -> Let Mut Id dosPuntos Str igual EXPRESION ptComa .)


state 207

    (17) DECLARACION -> Let Mut Id dosPuntos Bool igual EXPRESION ptComa .

    Let             reduce using rule 17 (DECLARACION -> Let Mut Id dosPuntos Bool igual EXPRESION ptComa .)
    If              reduce using rule 17 (DECLARACION -> Let Mut Id dosPuntos Bool igual EXPRESION ptComa .)
    Id              reduce using rule 17 (DECLARACION -> Let Mut Id dosPuntos Bool igual EXPRESION ptComa .)
    PrintLn         reduce using rule 17 (DECLARACION -> Let Mut Id dosPuntos Bool igual EXPRESION ptComa .)
    $end            reduce using rule 17 (DECLARACION -> Let Mut Id dosPuntos Bool igual EXPRESION ptComa .)
    llaveC          reduce using rule 17 (DECLARACION -> Let Mut Id dosPuntos Bool igual EXPRESION ptComa .)


state 208

    (18) DECLARACION -> Let Mut Id dosPuntos CharAux igual EXPRESION ptComa .

    Let             reduce using rule 18 (DECLARACION -> Let Mut Id dosPuntos CharAux igual EXPRESION ptComa .)
    If              reduce using rule 18 (DECLARACION -> Let Mut Id dosPuntos CharAux igual EXPRESION ptComa .)
    Id              reduce using rule 18 (DECLARACION -> Let Mut Id dosPuntos CharAux igual EXPRESION ptComa .)
    PrintLn         reduce using rule 18 (DECLARACION -> Let Mut Id dosPuntos CharAux igual EXPRESION ptComa .)
    $end            reduce using rule 18 (DECLARACION -> Let Mut Id dosPuntos CharAux igual EXPRESION ptComa .)
    llaveC          reduce using rule 18 (DECLARACION -> Let Mut Id dosPuntos CharAux igual EXPRESION ptComa .)


state 209

    (31) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue . igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (37) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue . igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 226


state 210

    (32) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue . igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (38) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue . igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 227


state 211

    (33) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue . igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (39) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue . igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 228


state 212

    (34) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue . igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (40) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue . igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 229


state 213

    (35) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue . igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (41) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue . igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 230


state 214

    (36) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue . igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (42) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue . igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 231


state 215

    (52) INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC . ptComa

    ptComa          shift and go to state 232


state 216

    (65) EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma . EXPRESION ParC
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 233
    INSERTVEC                      shift and go to state 27

state 217

    (66) EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma . EXPRESION ParC
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 234
    INSERTVEC                      shift and go to state 27

state 218

    (79) EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .

    mas             reduce using rule 79 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    menos           reduce using rule 79 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    por             reduce using rule 79 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    dividido        reduce using rule 79 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    modulo          reduce using rule 79 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    menorQue        reduce using rule 79 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    mayorQue        reduce using rule 79 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    menorIgual      reduce using rule 79 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    mayorIgual      reduce using rule 79 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    dobleIgual      reduce using rule 79 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    diferenteQue    reduce using rule 79 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    And             reduce using rule 79 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    Or              reduce using rule 79 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    AS              reduce using rule 79 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    llaveA          reduce using rule 79 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    ptComa          reduce using rule 79 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    CorC            reduce using rule 79 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    ParC            reduce using rule 79 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    Coma            reduce using rule 79 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)


state 219

    (55) IMPRIMIR -> PrintLn not ParA String Coma COMASEX ParC ptComa .

    Let             reduce using rule 55 (IMPRIMIR -> PrintLn not ParA String Coma COMASEX ParC ptComa .)
    If              reduce using rule 55 (IMPRIMIR -> PrintLn not ParA String Coma COMASEX ParC ptComa .)
    Id              reduce using rule 55 (IMPRIMIR -> PrintLn not ParA String Coma COMASEX ParC ptComa .)
    PrintLn         reduce using rule 55 (IMPRIMIR -> PrintLn not ParA String Coma COMASEX ParC ptComa .)
    $end            reduce using rule 55 (IMPRIMIR -> PrintLn not ParA String Coma COMASEX ParC ptComa .)
    llaveC          reduce using rule 55 (IMPRIMIR -> PrintLn not ParA String Coma COMASEX ParC ptComa .)


state 220

    (19) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC . dosPuntos dosPuntos New ParA ParC ptComa
    (25) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC . dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 235


state 221

    (20) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC . dosPuntos dosPuntos New ParA ParC ptComa
    (26) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC . dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 236


state 222

    (21) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC . dosPuntos dosPuntos New ParA ParC ptComa
    (27) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC . dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 237


state 223

    (22) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC . dosPuntos dosPuntos New ParA ParC ptComa
    (28) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC . dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 238


state 224

    (23) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC . dosPuntos dosPuntos New ParA ParC ptComa
    (29) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC . dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 239


state 225

    (24) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC . dosPuntos dosPuntos New ParA ParC ptComa
    (30) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC . dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 240


state 226

    (31) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual . VEC dosPuntos dosPuntos New ParA ParC ptComa
    (37) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual . VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    VEC             shift and go to state 241


state 227

    (32) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual . VEC dosPuntos dosPuntos New ParA ParC ptComa
    (38) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual . VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    VEC             shift and go to state 242


state 228

    (33) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual . VEC dosPuntos dosPuntos New ParA ParC ptComa
    (39) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual . VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    VEC             shift and go to state 243


state 229

    (34) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual . VEC dosPuntos dosPuntos New ParA ParC ptComa
    (40) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual . VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    VEC             shift and go to state 244


state 230

    (35) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual . VEC dosPuntos dosPuntos New ParA ParC ptComa
    (41) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual . VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    VEC             shift and go to state 245


state 231

    (36) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual . VEC dosPuntos dosPuntos New ParA ParC ptComa
    (42) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual . VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    VEC             shift and go to state 246


state 232

    (52) INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .

    Let             reduce using rule 52 (INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .)
    If              reduce using rule 52 (INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .)
    Id              reduce using rule 52 (INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 52 (INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .)
    $end            reduce using rule 52 (INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .)
    mas             reduce using rule 52 (INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .)
    menos           reduce using rule 52 (INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .)
    por             reduce using rule 52 (INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .)
    dividido        reduce using rule 52 (INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .)
    modulo          reduce using rule 52 (INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .)
    menorQue        reduce using rule 52 (INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .)
    mayorQue        reduce using rule 52 (INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .)
    menorIgual      reduce using rule 52 (INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .)
    mayorIgual      reduce using rule 52 (INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .)
    dobleIgual      reduce using rule 52 (INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .)
    diferenteQue    reduce using rule 52 (INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .)
    And             reduce using rule 52 (INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .)
    Or              reduce using rule 52 (INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .)
    AS              reduce using rule 52 (INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .)
    llaveA          reduce using rule 52 (INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .)
    ptComa          reduce using rule 52 (INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .)
    CorC            reduce using rule 52 (INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .)
    ParC            reduce using rule 52 (INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .)
    Coma            reduce using rule 52 (INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .)
    llaveC          reduce using rule 52 (INSERTVEC -> Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa .)


state 233

    (65) EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION . ParC
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    ParC            shift and go to state 247
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 234

    (66) EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION . ParC
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    ParC            shift and go to state 248
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 235

    (19) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos . dosPuntos New ParA ParC ptComa
    (25) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos . dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 249


state 236

    (20) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos . dosPuntos New ParA ParC ptComa
    (26) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos . dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 250


state 237

    (21) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos . dosPuntos New ParA ParC ptComa
    (27) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos . dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 251


state 238

    (22) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos . dosPuntos New ParA ParC ptComa
    (28) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos . dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 252


state 239

    (23) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos . dosPuntos New ParA ParC ptComa
    (29) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos . dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 253


state 240

    (24) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos . dosPuntos New ParA ParC ptComa
    (30) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos . dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 254


state 241

    (31) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC . dosPuntos dosPuntos New ParA ParC ptComa
    (37) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC . dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 255


state 242

    (32) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC . dosPuntos dosPuntos New ParA ParC ptComa
    (38) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC . dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 256


state 243

    (33) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC . dosPuntos dosPuntos New ParA ParC ptComa
    (39) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC . dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 257


state 244

    (34) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC . dosPuntos dosPuntos New ParA ParC ptComa
    (40) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC . dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 258


state 245

    (35) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC . dosPuntos dosPuntos New ParA ParC ptComa
    (41) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC . dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 259


state 246

    (36) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC . dosPuntos dosPuntos New ParA ParC ptComa
    (42) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC . dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 260


state 247

    (65) EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .

    mas             reduce using rule 65 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    menos           reduce using rule 65 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    por             reduce using rule 65 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    dividido        reduce using rule 65 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    modulo          reduce using rule 65 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    menorQue        reduce using rule 65 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    mayorQue        reduce using rule 65 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    menorIgual      reduce using rule 65 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    mayorIgual      reduce using rule 65 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    dobleIgual      reduce using rule 65 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    diferenteQue    reduce using rule 65 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    And             reduce using rule 65 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    Or              reduce using rule 65 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    AS              reduce using rule 65 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    llaveA          reduce using rule 65 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    ptComa          reduce using rule 65 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    CorC            reduce using rule 65 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    ParC            reduce using rule 65 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    Coma            reduce using rule 65 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)


state 248

    (66) EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .

    mas             reduce using rule 66 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    menos           reduce using rule 66 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    por             reduce using rule 66 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    dividido        reduce using rule 66 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    modulo          reduce using rule 66 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    menorQue        reduce using rule 66 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    mayorQue        reduce using rule 66 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    menorIgual      reduce using rule 66 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    mayorIgual      reduce using rule 66 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    dobleIgual      reduce using rule 66 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    diferenteQue    reduce using rule 66 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    And             reduce using rule 66 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    Or              reduce using rule 66 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    AS              reduce using rule 66 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    llaveA          reduce using rule 66 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    ptComa          reduce using rule 66 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    CorC            reduce using rule 66 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    ParC            reduce using rule 66 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    Coma            reduce using rule 66 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)


state 249

    (19) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos . New ParA ParC ptComa
    (25) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos . Capacidad ParA EXPRESION ParC ptComa

    New             shift and go to state 261
    Capacidad       shift and go to state 262


state 250

    (20) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos . New ParA ParC ptComa
    (26) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos . Capacidad ParA EXPRESION ParC ptComa

    New             shift and go to state 263
    Capacidad       shift and go to state 264


state 251

    (21) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos . New ParA ParC ptComa
    (27) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos . Capacidad ParA EXPRESION ParC ptComa

    New             shift and go to state 265
    Capacidad       shift and go to state 266


state 252

    (22) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos . New ParA ParC ptComa
    (28) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos . Capacidad ParA EXPRESION ParC ptComa

    New             shift and go to state 267
    Capacidad       shift and go to state 268


state 253

    (23) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos . New ParA ParC ptComa
    (29) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos . Capacidad ParA EXPRESION ParC ptComa

    New             shift and go to state 269
    Capacidad       shift and go to state 270


state 254

    (24) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos . New ParA ParC ptComa
    (30) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos . Capacidad ParA EXPRESION ParC ptComa

    New             shift and go to state 271
    Capacidad       shift and go to state 272


state 255

    (31) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos . dosPuntos New ParA ParC ptComa
    (37) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos . dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 273


state 256

    (32) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos . dosPuntos New ParA ParC ptComa
    (38) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos . dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 274


state 257

    (33) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos . dosPuntos New ParA ParC ptComa
    (39) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos . dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 275


state 258

    (34) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos . dosPuntos New ParA ParC ptComa
    (40) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos . dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 276


state 259

    (35) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos . dosPuntos New ParA ParC ptComa
    (41) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos . dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 277


state 260

    (36) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos . dosPuntos New ParA ParC ptComa
    (42) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos . dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 278


state 261

    (19) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New . ParA ParC ptComa

    ParA            shift and go to state 279


state 262

    (25) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad . ParA EXPRESION ParC ptComa

    ParA            shift and go to state 280


state 263

    (20) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New . ParA ParC ptComa

    ParA            shift and go to state 281


state 264

    (26) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad . ParA EXPRESION ParC ptComa

    ParA            shift and go to state 282


state 265

    (21) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New . ParA ParC ptComa

    ParA            shift and go to state 283


state 266

    (27) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad . ParA EXPRESION ParC ptComa

    ParA            shift and go to state 284


state 267

    (22) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New . ParA ParC ptComa

    ParA            shift and go to state 285


state 268

    (28) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad . ParA EXPRESION ParC ptComa

    ParA            shift and go to state 286


state 269

    (23) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New . ParA ParC ptComa

    ParA            shift and go to state 287


state 270

    (29) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad . ParA EXPRESION ParC ptComa

    ParA            shift and go to state 288


state 271

    (24) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New . ParA ParC ptComa

    ParA            shift and go to state 289


state 272

    (30) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad . ParA EXPRESION ParC ptComa

    ParA            shift and go to state 290


state 273

    (31) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos . New ParA ParC ptComa
    (37) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos . Capacidad ParA EXPRESION ParC ptComa

    New             shift and go to state 291
    Capacidad       shift and go to state 292


state 274

    (32) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos . New ParA ParC ptComa
    (38) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos . Capacidad ParA EXPRESION ParC ptComa

    New             shift and go to state 293
    Capacidad       shift and go to state 294


state 275

    (33) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos . New ParA ParC ptComa
    (39) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos . Capacidad ParA EXPRESION ParC ptComa

    New             shift and go to state 295
    Capacidad       shift and go to state 296


state 276

    (34) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos . New ParA ParC ptComa
    (40) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos . Capacidad ParA EXPRESION ParC ptComa

    New             shift and go to state 297
    Capacidad       shift and go to state 298


state 277

    (35) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos . New ParA ParC ptComa
    (41) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos . Capacidad ParA EXPRESION ParC ptComa

    New             shift and go to state 299
    Capacidad       shift and go to state 300


state 278

    (36) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos . New ParA ParC ptComa
    (42) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos . Capacidad ParA EXPRESION ParC ptComa

    New             shift and go to state 301
    Capacidad       shift and go to state 302


state 279

    (19) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA . ParC ptComa

    ParC            shift and go to state 303


state 280

    (25) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA . EXPRESION ParC ptComa
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 304
    INSERTVEC                      shift and go to state 27

state 281

    (20) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA . ParC ptComa

    ParC            shift and go to state 305


state 282

    (26) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA . EXPRESION ParC ptComa
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 306
    INSERTVEC                      shift and go to state 27

state 283

    (21) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA . ParC ptComa

    ParC            shift and go to state 307


state 284

    (27) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA . EXPRESION ParC ptComa
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 308
    INSERTVEC                      shift and go to state 27

state 285

    (22) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA . ParC ptComa

    ParC            shift and go to state 309


state 286

    (28) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA . EXPRESION ParC ptComa
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 310
    INSERTVEC                      shift and go to state 27

state 287

    (23) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA . ParC ptComa

    ParC            shift and go to state 311


state 288

    (29) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA . EXPRESION ParC ptComa
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 312
    INSERTVEC                      shift and go to state 27

state 289

    (24) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA . ParC ptComa

    ParC            shift and go to state 313


state 290

    (30) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA . EXPRESION ParC ptComa
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 314
    INSERTVEC                      shift and go to state 27

state 291

    (31) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New . ParA ParC ptComa

    ParA            shift and go to state 315


state 292

    (37) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad . ParA EXPRESION ParC ptComa

    ParA            shift and go to state 316


state 293

    (32) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New . ParA ParC ptComa

    ParA            shift and go to state 317


state 294

    (38) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad . ParA EXPRESION ParC ptComa

    ParA            shift and go to state 318


state 295

    (33) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New . ParA ParC ptComa

    ParA            shift and go to state 319


state 296

    (39) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad . ParA EXPRESION ParC ptComa

    ParA            shift and go to state 320


state 297

    (34) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New . ParA ParC ptComa

    ParA            shift and go to state 321


state 298

    (40) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad . ParA EXPRESION ParC ptComa

    ParA            shift and go to state 322


state 299

    (35) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New . ParA ParC ptComa

    ParA            shift and go to state 323


state 300

    (41) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad . ParA EXPRESION ParC ptComa

    ParA            shift and go to state 324


state 301

    (36) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New . ParA ParC ptComa

    ParA            shift and go to state 325


state 302

    (42) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad . ParA EXPRESION ParC ptComa

    ParA            shift and go to state 326


state 303

    (19) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC . ptComa

    ptComa          shift and go to state 327


state 304

    (25) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION . ParC ptComa
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    ParC            shift and go to state 328
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 305

    (20) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC . ptComa

    ptComa          shift and go to state 329


state 306

    (26) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION . ParC ptComa
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    ParC            shift and go to state 330
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 307

    (21) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC . ptComa

    ptComa          shift and go to state 331


state 308

    (27) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION . ParC ptComa
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    ParC            shift and go to state 332
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 309

    (22) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC . ptComa

    ptComa          shift and go to state 333


state 310

    (28) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION . ParC ptComa
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    ParC            shift and go to state 334
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 311

    (23) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC . ptComa

    ptComa          shift and go to state 335


state 312

    (29) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION . ParC ptComa
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    ParC            shift and go to state 336
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 313

    (24) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC . ptComa

    ptComa          shift and go to state 337


state 314

    (30) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION . ParC ptComa
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    ParC            shift and go to state 338
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 315

    (31) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA . ParC ptComa

    ParC            shift and go to state 339


state 316

    (37) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA . EXPRESION ParC ptComa
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 340
    INSERTVEC                      shift and go to state 27

state 317

    (32) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA . ParC ptComa

    ParC            shift and go to state 341


state 318

    (38) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA . EXPRESION ParC ptComa
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 342
    INSERTVEC                      shift and go to state 27

state 319

    (33) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA . ParC ptComa

    ParC            shift and go to state 343


state 320

    (39) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA . EXPRESION ParC ptComa
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 344
    INSERTVEC                      shift and go to state 27

state 321

    (34) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA . ParC ptComa

    ParC            shift and go to state 345


state 322

    (40) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA . EXPRESION ParC ptComa
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 346
    INSERTVEC                      shift and go to state 27

state 323

    (35) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA . ParC ptComa

    ParC            shift and go to state 347


state 324

    (41) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA . EXPRESION ParC ptComa
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 348
    INSERTVEC                      shift and go to state 27

state 325

    (36) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA . ParC ptComa

    ParC            shift and go to state 349


state 326

    (42) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA . EXPRESION ParC ptComa
    (58) EXPRESION -> . EXPRESION mas EXPRESION
    (59) EXPRESION -> . EXPRESION menos EXPRESION
    (60) EXPRESION -> . EXPRESION por EXPRESION
    (61) EXPRESION -> . EXPRESION dividido EXPRESION
    (62) EXPRESION -> . EXPRESION modulo EXPRESION
    (63) EXPRESION -> . menos EXPRESION
    (64) EXPRESION -> . ParA EXPRESION ParC
    (65) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (66) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (67) EXPRESION -> . EXPRESION menorQue EXPRESION
    (68) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (69) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (70) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (71) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (72) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (73) EXPRESION -> . EXPRESION And EXPRESION
    (74) EXPRESION -> . EXPRESION Or EXPRESION
    (75) EXPRESION -> . not EXPRESION
    (76) EXPRESION -> . EXPRESION AS I64
    (77) EXPRESION -> . EXPRESION AS F64
    (78) EXPRESION -> . vec not CorA COMASEX CorC
    (79) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (80) EXPRESION -> . INSERTVEC
    (81) EXPRESION -> . Id punto Remove ParA EXPRESION ParC
    (82) EXPRESION -> . Float
    (83) EXPRESION -> . Entero
    (84) EXPRESION -> . Booleano
    (85) EXPRESION -> . String
    (86) EXPRESION -> . Char
    (87) EXPRESION -> . Id
    (88) EXPRESION -> . Id CorA EXPRESION CorC
    (52) INSERTVEC -> . Id punto Insert ParA EXPRESION Coma EXPRESION ParC ptComa

    menos           shift and go to state 21
    ParA            shift and go to state 22
    I64             shift and go to state 23
    F64             shift and go to state 24
    not             shift and go to state 25
    vec             shift and go to state 26
    Id              shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33

    EXPRESION                      shift and go to state 350
    INSERTVEC                      shift and go to state 27

state 327

    (19) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .

    Let             reduce using rule 19 (DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    If              reduce using rule 19 (DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Id              reduce using rule 19 (DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    PrintLn         reduce using rule 19 (DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    $end            reduce using rule 19 (DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    llaveC          reduce using rule 19 (DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)


state 328

    (25) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 351


state 329

    (20) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .

    Let             reduce using rule 20 (DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    If              reduce using rule 20 (DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Id              reduce using rule 20 (DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    PrintLn         reduce using rule 20 (DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    $end            reduce using rule 20 (DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    llaveC          reduce using rule 20 (DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)


state 330

    (26) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 352


state 331

    (21) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .

    Let             reduce using rule 21 (DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    If              reduce using rule 21 (DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Id              reduce using rule 21 (DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    PrintLn         reduce using rule 21 (DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    $end            reduce using rule 21 (DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    llaveC          reduce using rule 21 (DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)


state 332

    (27) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 353


state 333

    (22) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .

    Let             reduce using rule 22 (DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    If              reduce using rule 22 (DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Id              reduce using rule 22 (DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    PrintLn         reduce using rule 22 (DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    $end            reduce using rule 22 (DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    llaveC          reduce using rule 22 (DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)


state 334

    (28) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 354


state 335

    (23) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .

    Let             reduce using rule 23 (DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    If              reduce using rule 23 (DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Id              reduce using rule 23 (DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    PrintLn         reduce using rule 23 (DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    $end            reduce using rule 23 (DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    llaveC          reduce using rule 23 (DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)


state 336

    (29) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 355


state 337

    (24) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .

    Let             reduce using rule 24 (DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    If              reduce using rule 24 (DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Id              reduce using rule 24 (DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    PrintLn         reduce using rule 24 (DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    $end            reduce using rule 24 (DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    llaveC          reduce using rule 24 (DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)


state 338

    (30) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 356


state 339

    (31) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC . ptComa

    ptComa          shift and go to state 357


state 340

    (37) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION . ParC ptComa
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    ParC            shift and go to state 358
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 341

    (32) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC . ptComa

    ptComa          shift and go to state 359


state 342

    (38) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION . ParC ptComa
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    ParC            shift and go to state 360
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 343

    (33) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC . ptComa

    ptComa          shift and go to state 361


state 344

    (39) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION . ParC ptComa
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    ParC            shift and go to state 362
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 345

    (34) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC . ptComa

    ptComa          shift and go to state 363


state 346

    (40) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION . ParC ptComa
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    ParC            shift and go to state 364
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 347

    (35) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC . ptComa

    ptComa          shift and go to state 365


state 348

    (41) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION . ParC ptComa
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    ParC            shift and go to state 366
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 349

    (36) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC . ptComa

    ptComa          shift and go to state 367


state 350

    (42) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION . ParC ptComa
    (58) EXPRESION -> EXPRESION . mas EXPRESION
    (59) EXPRESION -> EXPRESION . menos EXPRESION
    (60) EXPRESION -> EXPRESION . por EXPRESION
    (61) EXPRESION -> EXPRESION . dividido EXPRESION
    (62) EXPRESION -> EXPRESION . modulo EXPRESION
    (67) EXPRESION -> EXPRESION . menorQue EXPRESION
    (68) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (69) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (70) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (71) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (72) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (73) EXPRESION -> EXPRESION . And EXPRESION
    (74) EXPRESION -> EXPRESION . Or EXPRESION
    (76) EXPRESION -> EXPRESION . AS I64
    (77) EXPRESION -> EXPRESION . AS F64

    ParC            shift and go to state 368
    mas             shift and go to state 43
    menos           shift and go to state 44
    por             shift and go to state 45
    dividido        shift and go to state 46
    modulo          shift and go to state 47
    menorQue        shift and go to state 48
    mayorQue        shift and go to state 49
    menorIgual      shift and go to state 50
    mayorIgual      shift and go to state 51
    dobleIgual      shift and go to state 52
    diferenteQue    shift and go to state 53
    And             shift and go to state 54
    Or              shift and go to state 55
    AS              shift and go to state 56


state 351

    (25) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .

    Let             reduce using rule 25 (DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    If              reduce using rule 25 (DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 25 (DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 25 (DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    $end            reduce using rule 25 (DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    llaveC          reduce using rule 25 (DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)


state 352

    (26) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .

    Let             reduce using rule 26 (DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    If              reduce using rule 26 (DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 26 (DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 26 (DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    $end            reduce using rule 26 (DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    llaveC          reduce using rule 26 (DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)


state 353

    (27) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .

    Let             reduce using rule 27 (DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    If              reduce using rule 27 (DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 27 (DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 27 (DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    $end            reduce using rule 27 (DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    llaveC          reduce using rule 27 (DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)


state 354

    (28) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .

    Let             reduce using rule 28 (DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    If              reduce using rule 28 (DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 28 (DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 28 (DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    $end            reduce using rule 28 (DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    llaveC          reduce using rule 28 (DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)


state 355

    (29) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .

    Let             reduce using rule 29 (DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    If              reduce using rule 29 (DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 29 (DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 29 (DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    $end            reduce using rule 29 (DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    llaveC          reduce using rule 29 (DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)


state 356

    (30) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .

    Let             reduce using rule 30 (DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    If              reduce using rule 30 (DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 30 (DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 30 (DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    $end            reduce using rule 30 (DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    llaveC          reduce using rule 30 (DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)


state 357

    (31) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .

    Let             reduce using rule 31 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    If              reduce using rule 31 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Id              reduce using rule 31 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    PrintLn         reduce using rule 31 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    $end            reduce using rule 31 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    llaveC          reduce using rule 31 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)


state 358

    (37) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 369


state 359

    (32) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .

    Let             reduce using rule 32 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    If              reduce using rule 32 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Id              reduce using rule 32 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    PrintLn         reduce using rule 32 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    $end            reduce using rule 32 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    llaveC          reduce using rule 32 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)


state 360

    (38) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 370


state 361

    (33) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .

    Let             reduce using rule 33 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    If              reduce using rule 33 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Id              reduce using rule 33 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    PrintLn         reduce using rule 33 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    $end            reduce using rule 33 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    llaveC          reduce using rule 33 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)


state 362

    (39) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 371


state 363

    (34) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .

    Let             reduce using rule 34 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    If              reduce using rule 34 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Id              reduce using rule 34 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    PrintLn         reduce using rule 34 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    $end            reduce using rule 34 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    llaveC          reduce using rule 34 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)


state 364

    (40) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 372


state 365

    (35) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .

    Let             reduce using rule 35 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    If              reduce using rule 35 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Id              reduce using rule 35 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    PrintLn         reduce using rule 35 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    $end            reduce using rule 35 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    llaveC          reduce using rule 35 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)


state 366

    (41) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 373


state 367

    (36) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .

    Let             reduce using rule 36 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    If              reduce using rule 36 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Id              reduce using rule 36 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    PrintLn         reduce using rule 36 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    $end            reduce using rule 36 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    llaveC          reduce using rule 36 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)


state 368

    (42) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 374


state 369

    (37) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .

    Let             reduce using rule 37 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    If              reduce using rule 37 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 37 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 37 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    $end            reduce using rule 37 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    llaveC          reduce using rule 37 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)


state 370

    (38) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .

    Let             reduce using rule 38 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    If              reduce using rule 38 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 38 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 38 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    $end            reduce using rule 38 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    llaveC          reduce using rule 38 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)


state 371

    (39) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .

    Let             reduce using rule 39 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    If              reduce using rule 39 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 39 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 39 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    $end            reduce using rule 39 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    llaveC          reduce using rule 39 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)


state 372

    (40) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .

    Let             reduce using rule 40 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    If              reduce using rule 40 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 40 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 40 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    $end            reduce using rule 40 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    llaveC          reduce using rule 40 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)


state 373

    (41) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .

    Let             reduce using rule 41 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    If              reduce using rule 41 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 41 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 41 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    $end            reduce using rule 41 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    llaveC          reduce using rule 41 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)


state 374

    (42) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .

    Let             reduce using rule 42 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    If              reduce using rule 42 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 42 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 42 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    $end            reduce using rule 42 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    llaveC          reduce using rule 42 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)

