Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    Comentario
    False
    True
    llaveA
    llaveC

Grammar

Rule 0     S' -> init
Rule 1     init -> INSTRUCCIONES
Rule 2     INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION
Rule 3     INSTRUCCIONES -> INSTRUCCION
Rule 4     INSTRUCCION -> DECLARACION
Rule 5     DECLARACION -> Let Id igual EXPRESION ptComa
Rule 6     DECLARACION -> Let Id dosPuntos I64 igual EXPRESION ptComa
Rule 7     DECLARACION -> Let Id dosPuntos F64 igual EXPRESION ptComa
Rule 8     DECLARACION -> Let Id dosPuntos StrA igual EXPRESION ptComa
Rule 9     DECLARACION -> Let Id dosPuntos Str igual EXPRESION ptComa
Rule 10    DECLARACION -> Let Id dosPuntos Bool igual EXPRESION ptComa
Rule 11    DECLARACION -> Let Id dosPuntos CharAux igual EXPRESION ptComa
Rule 12    DECLARACION -> Let Mut Id igual EXPRESION ptComa
Rule 13    DECLARACION -> Let Mut Id dosPuntos I64 igual EXPRESION ptComa
Rule 14    DECLARACION -> Let Mut Id dosPuntos F64 igual EXPRESION ptComa
Rule 15    DECLARACION -> Let Mut Id dosPuntos StrA igual EXPRESION ptComa
Rule 16    DECLARACION -> Let Mut Id dosPuntos Str igual EXPRESION ptComa
Rule 17    DECLARACION -> Let Mut Id dosPuntos Bool igual EXPRESION ptComa
Rule 18    DECLARACION -> Let Mut Id dosPuntos CharAux igual EXPRESION ptComa
Rule 19    DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
Rule 20    DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
Rule 21    DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
Rule 22    DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
Rule 23    DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
Rule 24    DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
Rule 25    DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
Rule 26    DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
Rule 27    DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
Rule 28    DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
Rule 29    DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
Rule 30    DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
Rule 31    DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
Rule 32    DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
Rule 33    DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
Rule 34    DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
Rule 35    DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
Rule 36    DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
Rule 37    DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
Rule 38    DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
Rule 39    DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
Rule 40    DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
Rule 41    DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
Rule 42    DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
Rule 43    INSTRUCCION -> ASIGNACION
Rule 44    ASIGNACION -> Id igual EXPRESION ptComa
Rule 45    ASIGNACION -> Id CorA EXPRESION CorC igual EXPRESION ptComa
Rule 46    INSTRUCCION -> PUSH
Rule 47    PUSH -> Id punto Push ParA EXPRESION ParC ptComa
Rule 48    INSTRUCCION -> IMPRIMIR
Rule 49    IMPRIMIR -> PrintLn not ParA String ParC ptComa
Rule 50    IMPRIMIR -> PrintLn not ParA String Coma COMASEX ParC ptComa
Rule 51    COMASEX -> COMASEX Coma EXPRESION
Rule 52    COMASEX -> EXPRESION
Rule 53    EXPRESION -> EXPRESION mas EXPRESION
Rule 54    EXPRESION -> EXPRESION menos EXPRESION
Rule 55    EXPRESION -> EXPRESION por EXPRESION
Rule 56    EXPRESION -> EXPRESION dividido EXPRESION
Rule 57    EXPRESION -> EXPRESION modulo EXPRESION
Rule 58    EXPRESION -> menos EXPRESION
Rule 59    EXPRESION -> ParA EXPRESION ParC
Rule 60    EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
Rule 61    EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
Rule 62    EXPRESION -> EXPRESION menorQue EXPRESION
Rule 63    EXPRESION -> EXPRESION mayorQue EXPRESION
Rule 64    EXPRESION -> EXPRESION menorIgual EXPRESION
Rule 65    EXPRESION -> EXPRESION mayorIgual EXPRESION
Rule 66    EXPRESION -> EXPRESION dobleIgual EXPRESION
Rule 67    EXPRESION -> EXPRESION diferenteQue EXPRESION
Rule 68    EXPRESION -> EXPRESION And EXPRESION
Rule 69    EXPRESION -> EXPRESION Or EXPRESION
Rule 70    EXPRESION -> not EXPRESION
Rule 71    EXPRESION -> EXPRESION AS I64
Rule 72    EXPRESION -> EXPRESION AS F64
Rule 73    EXPRESION -> vec not CorA COMASEX CorC
Rule 74    EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC
Rule 75    EXPRESION -> Float
Rule 76    EXPRESION -> Entero
Rule 77    EXPRESION -> Booleano
Rule 78    EXPRESION -> String
Rule 79    EXPRESION -> Char
Rule 80    EXPRESION -> Id
Rule 81    EXPRESION -> Id CorA EXPRESION CorC

Terminals, with rules where they appear

AS                   : 71 72
And                  : 68
Bool                 : 10 17 23 29 35 41
Booleano             : 77
Capacidad            : 25 26 27 28 29 30 37 38 39 40 41 42
Char                 : 79
CharAux              : 11 18 24 30 36 42
Coma                 : 50 51 60 61
Comentario           : 
CorA                 : 45 73 74 81
CorC                 : 45 73 74 81
Entero               : 76
F64                  : 7 14 20 26 32 38 61 72
False                : 
Float                : 75
I64                  : 6 13 19 25 31 37 60 71
Id                   : 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 44 45 47 80 81
Let                  : 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
Mut                  : 12 13 14 15 16 17 18 31 32 33 34 35 36 37 38 39 40 41 42
New                  : 19 20 21 22 23 24 31 32 33 34 35 36
Or                   : 69
ParA                 : 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 47 49 50 59 60 61
ParC                 : 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 47 49 50 59 60 61
Powf                 : 61
Powi                 : 60
PrintLn              : 49 50
Push                 : 47
Str                  : 9 16 22 28 34 40
StrA                 : 8 15 21 27 33 39
String               : 49 50 78
True                 : 
VEC                  : 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42
diferenteQue         : 67
dividido             : 56
dobleIgual           : 66
dosPuntos            : 6 7 8 9 10 11 13 14 15 16 17 18 19 19 19 20 20 20 21 21 21 22 22 22 23 23 23 24 24 24 25 25 25 26 26 26 27 27 27 28 28 28 29 29 29 30 30 30 31 31 31 32 32 32 33 33 33 34 34 34 35 35 35 36 36 36 37 37 37 38 38 38 39 39 39 40 40 40 41 41 41 42 42 42 60 60 61 61
error                : 
igual                : 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 44 45
llaveA               : 
llaveC               : 
mas                  : 53
mayorIgual           : 65
mayorQue             : 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 63
menorIgual           : 64
menorQue             : 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 62
menos                : 54 58
modulo               : 57
not                  : 49 50 70 73 74
por                  : 55
ptComa               : 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 44 45 47 49 50 74
punto                : 47
vec                  : 73 74

Nonterminals, with rules where they appear

ASIGNACION           : 43
COMASEX              : 50 51 73
DECLARACION          : 4
EXPRESION            : 5 6 7 8 9 10 11 12 13 14 15 16 17 18 25 26 27 28 29 30 37 38 39 40 41 42 44 45 45 47 51 52 53 53 54 54 55 55 56 56 57 57 58 59 60 60 61 61 62 62 63 63 64 64 65 65 66 66 67 67 68 68 69 69 70 71 72 74 74 81
IMPRIMIR             : 48
INSTRUCCION          : 2 3
INSTRUCCIONES        : 1 2
PUSH                 : 46
init                 : 0

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . INSTRUCCIONES
    (2) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (3) INSTRUCCIONES -> . INSTRUCCION
    (4) INSTRUCCION -> . DECLARACION
    (43) INSTRUCCION -> . ASIGNACION
    (46) INSTRUCCION -> . PUSH
    (48) INSTRUCCION -> . IMPRIMIR
    (5) DECLARACION -> . Let Id igual EXPRESION ptComa
    (6) DECLARACION -> . Let Id dosPuntos I64 igual EXPRESION ptComa
    (7) DECLARACION -> . Let Id dosPuntos F64 igual EXPRESION ptComa
    (8) DECLARACION -> . Let Id dosPuntos StrA igual EXPRESION ptComa
    (9) DECLARACION -> . Let Id dosPuntos Str igual EXPRESION ptComa
    (10) DECLARACION -> . Let Id dosPuntos Bool igual EXPRESION ptComa
    (11) DECLARACION -> . Let Id dosPuntos CharAux igual EXPRESION ptComa
    (12) DECLARACION -> . Let Mut Id igual EXPRESION ptComa
    (13) DECLARACION -> . Let Mut Id dosPuntos I64 igual EXPRESION ptComa
    (14) DECLARACION -> . Let Mut Id dosPuntos F64 igual EXPRESION ptComa
    (15) DECLARACION -> . Let Mut Id dosPuntos StrA igual EXPRESION ptComa
    (16) DECLARACION -> . Let Mut Id dosPuntos Str igual EXPRESION ptComa
    (17) DECLARACION -> . Let Mut Id dosPuntos Bool igual EXPRESION ptComa
    (18) DECLARACION -> . Let Mut Id dosPuntos CharAux igual EXPRESION ptComa
    (19) DECLARACION -> . Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (20) DECLARACION -> . Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (21) DECLARACION -> . Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (22) DECLARACION -> . Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (23) DECLARACION -> . Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (24) DECLARACION -> . Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (25) DECLARACION -> . Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (26) DECLARACION -> . Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (27) DECLARACION -> . Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (28) DECLARACION -> . Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (29) DECLARACION -> . Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (30) DECLARACION -> . Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (31) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (32) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (33) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (34) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (35) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (36) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (37) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (38) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (39) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (40) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (41) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (42) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (44) ASIGNACION -> . Id igual EXPRESION ptComa
    (45) ASIGNACION -> . Id CorA EXPRESION CorC igual EXPRESION ptComa
    (47) PUSH -> . Id punto Push ParA EXPRESION ParC ptComa
    (49) IMPRIMIR -> . PrintLn not ParA String ParC ptComa
    (50) IMPRIMIR -> . PrintLn not ParA String Coma COMASEX ParC ptComa

    Let             shift and go to state 8
    Id              shift and go to state 9
    PrintLn         shift and go to state 10

    init                           shift and go to state 1
    INSTRUCCIONES                  shift and go to state 2
    INSTRUCCION                    shift and go to state 3
    DECLARACION                    shift and go to state 4
    ASIGNACION                     shift and go to state 5
    PUSH                           shift and go to state 6
    IMPRIMIR                       shift and go to state 7

state 1

    (0) S' -> init .



state 2

    (1) init -> INSTRUCCIONES .
    (2) INSTRUCCIONES -> INSTRUCCIONES . INSTRUCCION
    (4) INSTRUCCION -> . DECLARACION
    (43) INSTRUCCION -> . ASIGNACION
    (46) INSTRUCCION -> . PUSH
    (48) INSTRUCCION -> . IMPRIMIR
    (5) DECLARACION -> . Let Id igual EXPRESION ptComa
    (6) DECLARACION -> . Let Id dosPuntos I64 igual EXPRESION ptComa
    (7) DECLARACION -> . Let Id dosPuntos F64 igual EXPRESION ptComa
    (8) DECLARACION -> . Let Id dosPuntos StrA igual EXPRESION ptComa
    (9) DECLARACION -> . Let Id dosPuntos Str igual EXPRESION ptComa
    (10) DECLARACION -> . Let Id dosPuntos Bool igual EXPRESION ptComa
    (11) DECLARACION -> . Let Id dosPuntos CharAux igual EXPRESION ptComa
    (12) DECLARACION -> . Let Mut Id igual EXPRESION ptComa
    (13) DECLARACION -> . Let Mut Id dosPuntos I64 igual EXPRESION ptComa
    (14) DECLARACION -> . Let Mut Id dosPuntos F64 igual EXPRESION ptComa
    (15) DECLARACION -> . Let Mut Id dosPuntos StrA igual EXPRESION ptComa
    (16) DECLARACION -> . Let Mut Id dosPuntos Str igual EXPRESION ptComa
    (17) DECLARACION -> . Let Mut Id dosPuntos Bool igual EXPRESION ptComa
    (18) DECLARACION -> . Let Mut Id dosPuntos CharAux igual EXPRESION ptComa
    (19) DECLARACION -> . Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (20) DECLARACION -> . Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (21) DECLARACION -> . Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (22) DECLARACION -> . Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (23) DECLARACION -> . Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (24) DECLARACION -> . Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (25) DECLARACION -> . Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (26) DECLARACION -> . Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (27) DECLARACION -> . Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (28) DECLARACION -> . Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (29) DECLARACION -> . Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (30) DECLARACION -> . Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (31) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (32) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (33) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (34) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (35) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (36) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (37) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (38) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (39) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (40) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (41) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (42) DECLARACION -> . Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (44) ASIGNACION -> . Id igual EXPRESION ptComa
    (45) ASIGNACION -> . Id CorA EXPRESION CorC igual EXPRESION ptComa
    (47) PUSH -> . Id punto Push ParA EXPRESION ParC ptComa
    (49) IMPRIMIR -> . PrintLn not ParA String ParC ptComa
    (50) IMPRIMIR -> . PrintLn not ParA String Coma COMASEX ParC ptComa

    $end            reduce using rule 1 (init -> INSTRUCCIONES .)
    Let             shift and go to state 8
    Id              shift and go to state 9
    PrintLn         shift and go to state 10

    INSTRUCCION                    shift and go to state 11
    DECLARACION                    shift and go to state 4
    ASIGNACION                     shift and go to state 5
    PUSH                           shift and go to state 6
    IMPRIMIR                       shift and go to state 7

state 3

    (3) INSTRUCCIONES -> INSTRUCCION .

    Let             reduce using rule 3 (INSTRUCCIONES -> INSTRUCCION .)
    Id              reduce using rule 3 (INSTRUCCIONES -> INSTRUCCION .)
    PrintLn         reduce using rule 3 (INSTRUCCIONES -> INSTRUCCION .)
    $end            reduce using rule 3 (INSTRUCCIONES -> INSTRUCCION .)


state 4

    (4) INSTRUCCION -> DECLARACION .

    Let             reduce using rule 4 (INSTRUCCION -> DECLARACION .)
    Id              reduce using rule 4 (INSTRUCCION -> DECLARACION .)
    PrintLn         reduce using rule 4 (INSTRUCCION -> DECLARACION .)
    $end            reduce using rule 4 (INSTRUCCION -> DECLARACION .)


state 5

    (43) INSTRUCCION -> ASIGNACION .

    Let             reduce using rule 43 (INSTRUCCION -> ASIGNACION .)
    Id              reduce using rule 43 (INSTRUCCION -> ASIGNACION .)
    PrintLn         reduce using rule 43 (INSTRUCCION -> ASIGNACION .)
    $end            reduce using rule 43 (INSTRUCCION -> ASIGNACION .)


state 6

    (46) INSTRUCCION -> PUSH .

    Let             reduce using rule 46 (INSTRUCCION -> PUSH .)
    Id              reduce using rule 46 (INSTRUCCION -> PUSH .)
    PrintLn         reduce using rule 46 (INSTRUCCION -> PUSH .)
    $end            reduce using rule 46 (INSTRUCCION -> PUSH .)


state 7

    (48) INSTRUCCION -> IMPRIMIR .

    Let             reduce using rule 48 (INSTRUCCION -> IMPRIMIR .)
    Id              reduce using rule 48 (INSTRUCCION -> IMPRIMIR .)
    PrintLn         reduce using rule 48 (INSTRUCCION -> IMPRIMIR .)
    $end            reduce using rule 48 (INSTRUCCION -> IMPRIMIR .)


state 8

    (5) DECLARACION -> Let . Id igual EXPRESION ptComa
    (6) DECLARACION -> Let . Id dosPuntos I64 igual EXPRESION ptComa
    (7) DECLARACION -> Let . Id dosPuntos F64 igual EXPRESION ptComa
    (8) DECLARACION -> Let . Id dosPuntos StrA igual EXPRESION ptComa
    (9) DECLARACION -> Let . Id dosPuntos Str igual EXPRESION ptComa
    (10) DECLARACION -> Let . Id dosPuntos Bool igual EXPRESION ptComa
    (11) DECLARACION -> Let . Id dosPuntos CharAux igual EXPRESION ptComa
    (12) DECLARACION -> Let . Mut Id igual EXPRESION ptComa
    (13) DECLARACION -> Let . Mut Id dosPuntos I64 igual EXPRESION ptComa
    (14) DECLARACION -> Let . Mut Id dosPuntos F64 igual EXPRESION ptComa
    (15) DECLARACION -> Let . Mut Id dosPuntos StrA igual EXPRESION ptComa
    (16) DECLARACION -> Let . Mut Id dosPuntos Str igual EXPRESION ptComa
    (17) DECLARACION -> Let . Mut Id dosPuntos Bool igual EXPRESION ptComa
    (18) DECLARACION -> Let . Mut Id dosPuntos CharAux igual EXPRESION ptComa
    (19) DECLARACION -> Let . Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (20) DECLARACION -> Let . Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (21) DECLARACION -> Let . Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (22) DECLARACION -> Let . Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (23) DECLARACION -> Let . Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (24) DECLARACION -> Let . Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (25) DECLARACION -> Let . Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (26) DECLARACION -> Let . Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (27) DECLARACION -> Let . Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (28) DECLARACION -> Let . Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (29) DECLARACION -> Let . Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (30) DECLARACION -> Let . Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (31) DECLARACION -> Let . Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (32) DECLARACION -> Let . Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (33) DECLARACION -> Let . Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (34) DECLARACION -> Let . Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (35) DECLARACION -> Let . Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (36) DECLARACION -> Let . Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (37) DECLARACION -> Let . Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (38) DECLARACION -> Let . Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (39) DECLARACION -> Let . Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (40) DECLARACION -> Let . Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (41) DECLARACION -> Let . Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (42) DECLARACION -> Let . Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    Id              shift and go to state 12
    Mut             shift and go to state 13


state 9

    (44) ASIGNACION -> Id . igual EXPRESION ptComa
    (45) ASIGNACION -> Id . CorA EXPRESION CorC igual EXPRESION ptComa
    (47) PUSH -> Id . punto Push ParA EXPRESION ParC ptComa

    igual           shift and go to state 14
    CorA            shift and go to state 15
    punto           shift and go to state 16


state 10

    (49) IMPRIMIR -> PrintLn . not ParA String ParC ptComa
    (50) IMPRIMIR -> PrintLn . not ParA String Coma COMASEX ParC ptComa

    not             shift and go to state 17


state 11

    (2) INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .

    Let             reduce using rule 2 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    Id              reduce using rule 2 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    PrintLn         reduce using rule 2 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    $end            reduce using rule 2 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)


state 12

    (5) DECLARACION -> Let Id . igual EXPRESION ptComa
    (6) DECLARACION -> Let Id . dosPuntos I64 igual EXPRESION ptComa
    (7) DECLARACION -> Let Id . dosPuntos F64 igual EXPRESION ptComa
    (8) DECLARACION -> Let Id . dosPuntos StrA igual EXPRESION ptComa
    (9) DECLARACION -> Let Id . dosPuntos Str igual EXPRESION ptComa
    (10) DECLARACION -> Let Id . dosPuntos Bool igual EXPRESION ptComa
    (11) DECLARACION -> Let Id . dosPuntos CharAux igual EXPRESION ptComa
    (19) DECLARACION -> Let Id . dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (20) DECLARACION -> Let Id . dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (21) DECLARACION -> Let Id . dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (22) DECLARACION -> Let Id . dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (23) DECLARACION -> Let Id . dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (24) DECLARACION -> Let Id . dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (25) DECLARACION -> Let Id . dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (26) DECLARACION -> Let Id . dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (27) DECLARACION -> Let Id . dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (28) DECLARACION -> Let Id . dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (29) DECLARACION -> Let Id . dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (30) DECLARACION -> Let Id . dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 18
    dosPuntos       shift and go to state 19


state 13

    (12) DECLARACION -> Let Mut . Id igual EXPRESION ptComa
    (13) DECLARACION -> Let Mut . Id dosPuntos I64 igual EXPRESION ptComa
    (14) DECLARACION -> Let Mut . Id dosPuntos F64 igual EXPRESION ptComa
    (15) DECLARACION -> Let Mut . Id dosPuntos StrA igual EXPRESION ptComa
    (16) DECLARACION -> Let Mut . Id dosPuntos Str igual EXPRESION ptComa
    (17) DECLARACION -> Let Mut . Id dosPuntos Bool igual EXPRESION ptComa
    (18) DECLARACION -> Let Mut . Id dosPuntos CharAux igual EXPRESION ptComa
    (31) DECLARACION -> Let Mut . Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (32) DECLARACION -> Let Mut . Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (33) DECLARACION -> Let Mut . Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (34) DECLARACION -> Let Mut . Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (35) DECLARACION -> Let Mut . Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (36) DECLARACION -> Let Mut . Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (37) DECLARACION -> Let Mut . Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (38) DECLARACION -> Let Mut . Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (39) DECLARACION -> Let Mut . Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (40) DECLARACION -> Let Mut . Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (41) DECLARACION -> Let Mut . Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (42) DECLARACION -> Let Mut . Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    Id              shift and go to state 20


state 14

    (44) ASIGNACION -> Id igual . EXPRESION ptComa
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 22

state 15

    (45) ASIGNACION -> Id CorA . EXPRESION CorC igual EXPRESION ptComa
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 34

state 16

    (47) PUSH -> Id punto . Push ParA EXPRESION ParC ptComa

    Push            shift and go to state 35


state 17

    (49) IMPRIMIR -> PrintLn not . ParA String ParC ptComa
    (50) IMPRIMIR -> PrintLn not . ParA String Coma COMASEX ParC ptComa

    ParA            shift and go to state 36


state 18

    (5) DECLARACION -> Let Id igual . EXPRESION ptComa
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 37

state 19

    (6) DECLARACION -> Let Id dosPuntos . I64 igual EXPRESION ptComa
    (7) DECLARACION -> Let Id dosPuntos . F64 igual EXPRESION ptComa
    (8) DECLARACION -> Let Id dosPuntos . StrA igual EXPRESION ptComa
    (9) DECLARACION -> Let Id dosPuntos . Str igual EXPRESION ptComa
    (10) DECLARACION -> Let Id dosPuntos . Bool igual EXPRESION ptComa
    (11) DECLARACION -> Let Id dosPuntos . CharAux igual EXPRESION ptComa
    (19) DECLARACION -> Let Id dosPuntos . VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (20) DECLARACION -> Let Id dosPuntos . VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (21) DECLARACION -> Let Id dosPuntos . VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (22) DECLARACION -> Let Id dosPuntos . VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (23) DECLARACION -> Let Id dosPuntos . VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (24) DECLARACION -> Let Id dosPuntos . VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (25) DECLARACION -> Let Id dosPuntos . VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (26) DECLARACION -> Let Id dosPuntos . VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (27) DECLARACION -> Let Id dosPuntos . VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (28) DECLARACION -> Let Id dosPuntos . VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (29) DECLARACION -> Let Id dosPuntos . VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (30) DECLARACION -> Let Id dosPuntos . VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    I64             shift and go to state 38
    F64             shift and go to state 39
    StrA            shift and go to state 40
    Str             shift and go to state 41
    Bool            shift and go to state 42
    CharAux         shift and go to state 43
    VEC             shift and go to state 44


state 20

    (12) DECLARACION -> Let Mut Id . igual EXPRESION ptComa
    (13) DECLARACION -> Let Mut Id . dosPuntos I64 igual EXPRESION ptComa
    (14) DECLARACION -> Let Mut Id . dosPuntos F64 igual EXPRESION ptComa
    (15) DECLARACION -> Let Mut Id . dosPuntos StrA igual EXPRESION ptComa
    (16) DECLARACION -> Let Mut Id . dosPuntos Str igual EXPRESION ptComa
    (17) DECLARACION -> Let Mut Id . dosPuntos Bool igual EXPRESION ptComa
    (18) DECLARACION -> Let Mut Id . dosPuntos CharAux igual EXPRESION ptComa
    (31) DECLARACION -> Let Mut Id . dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (32) DECLARACION -> Let Mut Id . dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (33) DECLARACION -> Let Mut Id . dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (34) DECLARACION -> Let Mut Id . dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (35) DECLARACION -> Let Mut Id . dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (36) DECLARACION -> Let Mut Id . dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (37) DECLARACION -> Let Mut Id . dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (38) DECLARACION -> Let Mut Id . dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (39) DECLARACION -> Let Mut Id . dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (40) DECLARACION -> Let Mut Id . dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (41) DECLARACION -> Let Mut Id . dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (42) DECLARACION -> Let Mut Id . dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 45
    dosPuntos       shift and go to state 46


state 21

    (80) EXPRESION -> Id .
    (81) EXPRESION -> Id . CorA EXPRESION CorC

    ptComa          reduce using rule 80 (EXPRESION -> Id .)
    mas             reduce using rule 80 (EXPRESION -> Id .)
    menos           reduce using rule 80 (EXPRESION -> Id .)
    por             reduce using rule 80 (EXPRESION -> Id .)
    dividido        reduce using rule 80 (EXPRESION -> Id .)
    modulo          reduce using rule 80 (EXPRESION -> Id .)
    menorQue        reduce using rule 80 (EXPRESION -> Id .)
    mayorQue        reduce using rule 80 (EXPRESION -> Id .)
    menorIgual      reduce using rule 80 (EXPRESION -> Id .)
    mayorIgual      reduce using rule 80 (EXPRESION -> Id .)
    dobleIgual      reduce using rule 80 (EXPRESION -> Id .)
    diferenteQue    reduce using rule 80 (EXPRESION -> Id .)
    And             reduce using rule 80 (EXPRESION -> Id .)
    Or              reduce using rule 80 (EXPRESION -> Id .)
    AS              reduce using rule 80 (EXPRESION -> Id .)
    CorC            reduce using rule 80 (EXPRESION -> Id .)
    ParC            reduce using rule 80 (EXPRESION -> Id .)
    Coma            reduce using rule 80 (EXPRESION -> Id .)
    CorA            shift and go to state 47


state 22

    (44) ASIGNACION -> Id igual EXPRESION . ptComa
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    ptComa          shift and go to state 48
    mas             shift and go to state 49
    menos           shift and go to state 50
    por             shift and go to state 51
    dividido        shift and go to state 52
    modulo          shift and go to state 53
    menorQue        shift and go to state 54
    mayorQue        shift and go to state 55
    menorIgual      shift and go to state 56
    mayorIgual      shift and go to state 57
    dobleIgual      shift and go to state 58
    diferenteQue    shift and go to state 59
    And             shift and go to state 60
    Or              shift and go to state 61
    AS              shift and go to state 62


state 23

    (58) EXPRESION -> menos . EXPRESION
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 63

state 24

    (59) EXPRESION -> ParA . EXPRESION ParC
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 64

state 25

    (60) EXPRESION -> I64 . dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC

    dosPuntos       shift and go to state 65


state 26

    (61) EXPRESION -> F64 . dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC

    dosPuntos       shift and go to state 66


state 27

    (70) EXPRESION -> not . EXPRESION
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 67

state 28

    (73) EXPRESION -> vec . not CorA COMASEX CorC
    (74) EXPRESION -> vec . not CorA EXPRESION ptComa EXPRESION CorC

    not             shift and go to state 68


state 29

    (75) EXPRESION -> Float .

    ptComa          reduce using rule 75 (EXPRESION -> Float .)
    mas             reduce using rule 75 (EXPRESION -> Float .)
    menos           reduce using rule 75 (EXPRESION -> Float .)
    por             reduce using rule 75 (EXPRESION -> Float .)
    dividido        reduce using rule 75 (EXPRESION -> Float .)
    modulo          reduce using rule 75 (EXPRESION -> Float .)
    menorQue        reduce using rule 75 (EXPRESION -> Float .)
    mayorQue        reduce using rule 75 (EXPRESION -> Float .)
    menorIgual      reduce using rule 75 (EXPRESION -> Float .)
    mayorIgual      reduce using rule 75 (EXPRESION -> Float .)
    dobleIgual      reduce using rule 75 (EXPRESION -> Float .)
    diferenteQue    reduce using rule 75 (EXPRESION -> Float .)
    And             reduce using rule 75 (EXPRESION -> Float .)
    Or              reduce using rule 75 (EXPRESION -> Float .)
    AS              reduce using rule 75 (EXPRESION -> Float .)
    CorC            reduce using rule 75 (EXPRESION -> Float .)
    ParC            reduce using rule 75 (EXPRESION -> Float .)
    Coma            reduce using rule 75 (EXPRESION -> Float .)


state 30

    (76) EXPRESION -> Entero .

    ptComa          reduce using rule 76 (EXPRESION -> Entero .)
    mas             reduce using rule 76 (EXPRESION -> Entero .)
    menos           reduce using rule 76 (EXPRESION -> Entero .)
    por             reduce using rule 76 (EXPRESION -> Entero .)
    dividido        reduce using rule 76 (EXPRESION -> Entero .)
    modulo          reduce using rule 76 (EXPRESION -> Entero .)
    menorQue        reduce using rule 76 (EXPRESION -> Entero .)
    mayorQue        reduce using rule 76 (EXPRESION -> Entero .)
    menorIgual      reduce using rule 76 (EXPRESION -> Entero .)
    mayorIgual      reduce using rule 76 (EXPRESION -> Entero .)
    dobleIgual      reduce using rule 76 (EXPRESION -> Entero .)
    diferenteQue    reduce using rule 76 (EXPRESION -> Entero .)
    And             reduce using rule 76 (EXPRESION -> Entero .)
    Or              reduce using rule 76 (EXPRESION -> Entero .)
    AS              reduce using rule 76 (EXPRESION -> Entero .)
    CorC            reduce using rule 76 (EXPRESION -> Entero .)
    ParC            reduce using rule 76 (EXPRESION -> Entero .)
    Coma            reduce using rule 76 (EXPRESION -> Entero .)


state 31

    (77) EXPRESION -> Booleano .

    ptComa          reduce using rule 77 (EXPRESION -> Booleano .)
    mas             reduce using rule 77 (EXPRESION -> Booleano .)
    menos           reduce using rule 77 (EXPRESION -> Booleano .)
    por             reduce using rule 77 (EXPRESION -> Booleano .)
    dividido        reduce using rule 77 (EXPRESION -> Booleano .)
    modulo          reduce using rule 77 (EXPRESION -> Booleano .)
    menorQue        reduce using rule 77 (EXPRESION -> Booleano .)
    mayorQue        reduce using rule 77 (EXPRESION -> Booleano .)
    menorIgual      reduce using rule 77 (EXPRESION -> Booleano .)
    mayorIgual      reduce using rule 77 (EXPRESION -> Booleano .)
    dobleIgual      reduce using rule 77 (EXPRESION -> Booleano .)
    diferenteQue    reduce using rule 77 (EXPRESION -> Booleano .)
    And             reduce using rule 77 (EXPRESION -> Booleano .)
    Or              reduce using rule 77 (EXPRESION -> Booleano .)
    AS              reduce using rule 77 (EXPRESION -> Booleano .)
    CorC            reduce using rule 77 (EXPRESION -> Booleano .)
    ParC            reduce using rule 77 (EXPRESION -> Booleano .)
    Coma            reduce using rule 77 (EXPRESION -> Booleano .)


state 32

    (78) EXPRESION -> String .

    ptComa          reduce using rule 78 (EXPRESION -> String .)
    mas             reduce using rule 78 (EXPRESION -> String .)
    menos           reduce using rule 78 (EXPRESION -> String .)
    por             reduce using rule 78 (EXPRESION -> String .)
    dividido        reduce using rule 78 (EXPRESION -> String .)
    modulo          reduce using rule 78 (EXPRESION -> String .)
    menorQue        reduce using rule 78 (EXPRESION -> String .)
    mayorQue        reduce using rule 78 (EXPRESION -> String .)
    menorIgual      reduce using rule 78 (EXPRESION -> String .)
    mayorIgual      reduce using rule 78 (EXPRESION -> String .)
    dobleIgual      reduce using rule 78 (EXPRESION -> String .)
    diferenteQue    reduce using rule 78 (EXPRESION -> String .)
    And             reduce using rule 78 (EXPRESION -> String .)
    Or              reduce using rule 78 (EXPRESION -> String .)
    AS              reduce using rule 78 (EXPRESION -> String .)
    CorC            reduce using rule 78 (EXPRESION -> String .)
    ParC            reduce using rule 78 (EXPRESION -> String .)
    Coma            reduce using rule 78 (EXPRESION -> String .)


state 33

    (79) EXPRESION -> Char .

    ptComa          reduce using rule 79 (EXPRESION -> Char .)
    mas             reduce using rule 79 (EXPRESION -> Char .)
    menos           reduce using rule 79 (EXPRESION -> Char .)
    por             reduce using rule 79 (EXPRESION -> Char .)
    dividido        reduce using rule 79 (EXPRESION -> Char .)
    modulo          reduce using rule 79 (EXPRESION -> Char .)
    menorQue        reduce using rule 79 (EXPRESION -> Char .)
    mayorQue        reduce using rule 79 (EXPRESION -> Char .)
    menorIgual      reduce using rule 79 (EXPRESION -> Char .)
    mayorIgual      reduce using rule 79 (EXPRESION -> Char .)
    dobleIgual      reduce using rule 79 (EXPRESION -> Char .)
    diferenteQue    reduce using rule 79 (EXPRESION -> Char .)
    And             reduce using rule 79 (EXPRESION -> Char .)
    Or              reduce using rule 79 (EXPRESION -> Char .)
    AS              reduce using rule 79 (EXPRESION -> Char .)
    CorC            reduce using rule 79 (EXPRESION -> Char .)
    ParC            reduce using rule 79 (EXPRESION -> Char .)
    Coma            reduce using rule 79 (EXPRESION -> Char .)


state 34

    (45) ASIGNACION -> Id CorA EXPRESION . CorC igual EXPRESION ptComa
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    CorC            shift and go to state 69
    mas             shift and go to state 49
    menos           shift and go to state 50
    por             shift and go to state 51
    dividido        shift and go to state 52
    modulo          shift and go to state 53
    menorQue        shift and go to state 54
    mayorQue        shift and go to state 55
    menorIgual      shift and go to state 56
    mayorIgual      shift and go to state 57
    dobleIgual      shift and go to state 58
    diferenteQue    shift and go to state 59
    And             shift and go to state 60
    Or              shift and go to state 61
    AS              shift and go to state 62


state 35

    (47) PUSH -> Id punto Push . ParA EXPRESION ParC ptComa

    ParA            shift and go to state 70


state 36

    (49) IMPRIMIR -> PrintLn not ParA . String ParC ptComa
    (50) IMPRIMIR -> PrintLn not ParA . String Coma COMASEX ParC ptComa

    String          shift and go to state 71


state 37

    (5) DECLARACION -> Let Id igual EXPRESION . ptComa
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    ptComa          shift and go to state 72
    mas             shift and go to state 49
    menos           shift and go to state 50
    por             shift and go to state 51
    dividido        shift and go to state 52
    modulo          shift and go to state 53
    menorQue        shift and go to state 54
    mayorQue        shift and go to state 55
    menorIgual      shift and go to state 56
    mayorIgual      shift and go to state 57
    dobleIgual      shift and go to state 58
    diferenteQue    shift and go to state 59
    And             shift and go to state 60
    Or              shift and go to state 61
    AS              shift and go to state 62


state 38

    (6) DECLARACION -> Let Id dosPuntos I64 . igual EXPRESION ptComa

    igual           shift and go to state 73


state 39

    (7) DECLARACION -> Let Id dosPuntos F64 . igual EXPRESION ptComa

    igual           shift and go to state 74


state 40

    (8) DECLARACION -> Let Id dosPuntos StrA . igual EXPRESION ptComa

    igual           shift and go to state 75


state 41

    (9) DECLARACION -> Let Id dosPuntos Str . igual EXPRESION ptComa

    igual           shift and go to state 76


state 42

    (10) DECLARACION -> Let Id dosPuntos Bool . igual EXPRESION ptComa

    igual           shift and go to state 77


state 43

    (11) DECLARACION -> Let Id dosPuntos CharAux . igual EXPRESION ptComa

    igual           shift and go to state 78


state 44

    (19) DECLARACION -> Let Id dosPuntos VEC . menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (20) DECLARACION -> Let Id dosPuntos VEC . menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (21) DECLARACION -> Let Id dosPuntos VEC . menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (22) DECLARACION -> Let Id dosPuntos VEC . menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (23) DECLARACION -> Let Id dosPuntos VEC . menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (24) DECLARACION -> Let Id dosPuntos VEC . menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (25) DECLARACION -> Let Id dosPuntos VEC . menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (26) DECLARACION -> Let Id dosPuntos VEC . menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (27) DECLARACION -> Let Id dosPuntos VEC . menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (28) DECLARACION -> Let Id dosPuntos VEC . menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (29) DECLARACION -> Let Id dosPuntos VEC . menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (30) DECLARACION -> Let Id dosPuntos VEC . menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    menorQue        shift and go to state 79


state 45

    (12) DECLARACION -> Let Mut Id igual . EXPRESION ptComa
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 80

state 46

    (13) DECLARACION -> Let Mut Id dosPuntos . I64 igual EXPRESION ptComa
    (14) DECLARACION -> Let Mut Id dosPuntos . F64 igual EXPRESION ptComa
    (15) DECLARACION -> Let Mut Id dosPuntos . StrA igual EXPRESION ptComa
    (16) DECLARACION -> Let Mut Id dosPuntos . Str igual EXPRESION ptComa
    (17) DECLARACION -> Let Mut Id dosPuntos . Bool igual EXPRESION ptComa
    (18) DECLARACION -> Let Mut Id dosPuntos . CharAux igual EXPRESION ptComa
    (31) DECLARACION -> Let Mut Id dosPuntos . VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (32) DECLARACION -> Let Mut Id dosPuntos . VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (33) DECLARACION -> Let Mut Id dosPuntos . VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (34) DECLARACION -> Let Mut Id dosPuntos . VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (35) DECLARACION -> Let Mut Id dosPuntos . VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (36) DECLARACION -> Let Mut Id dosPuntos . VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (37) DECLARACION -> Let Mut Id dosPuntos . VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (38) DECLARACION -> Let Mut Id dosPuntos . VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (39) DECLARACION -> Let Mut Id dosPuntos . VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (40) DECLARACION -> Let Mut Id dosPuntos . VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (41) DECLARACION -> Let Mut Id dosPuntos . VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (42) DECLARACION -> Let Mut Id dosPuntos . VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    I64             shift and go to state 81
    F64             shift and go to state 82
    StrA            shift and go to state 83
    Str             shift and go to state 84
    Bool            shift and go to state 85
    CharAux         shift and go to state 86
    VEC             shift and go to state 87


state 47

    (81) EXPRESION -> Id CorA . EXPRESION CorC
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 88

state 48

    (44) ASIGNACION -> Id igual EXPRESION ptComa .

    Let             reduce using rule 44 (ASIGNACION -> Id igual EXPRESION ptComa .)
    Id              reduce using rule 44 (ASIGNACION -> Id igual EXPRESION ptComa .)
    PrintLn         reduce using rule 44 (ASIGNACION -> Id igual EXPRESION ptComa .)
    $end            reduce using rule 44 (ASIGNACION -> Id igual EXPRESION ptComa .)


state 49

    (53) EXPRESION -> EXPRESION mas . EXPRESION
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 89

state 50

    (54) EXPRESION -> EXPRESION menos . EXPRESION
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 90

state 51

    (55) EXPRESION -> EXPRESION por . EXPRESION
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 91

state 52

    (56) EXPRESION -> EXPRESION dividido . EXPRESION
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 92

state 53

    (57) EXPRESION -> EXPRESION modulo . EXPRESION
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 93

state 54

    (62) EXPRESION -> EXPRESION menorQue . EXPRESION
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 94

state 55

    (63) EXPRESION -> EXPRESION mayorQue . EXPRESION
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 95

state 56

    (64) EXPRESION -> EXPRESION menorIgual . EXPRESION
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 96

state 57

    (65) EXPRESION -> EXPRESION mayorIgual . EXPRESION
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 97

state 58

    (66) EXPRESION -> EXPRESION dobleIgual . EXPRESION
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 98

state 59

    (67) EXPRESION -> EXPRESION diferenteQue . EXPRESION
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 99

state 60

    (68) EXPRESION -> EXPRESION And . EXPRESION
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 100

state 61

    (69) EXPRESION -> EXPRESION Or . EXPRESION
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 101

state 62

    (71) EXPRESION -> EXPRESION AS . I64
    (72) EXPRESION -> EXPRESION AS . F64

    I64             shift and go to state 102
    F64             shift and go to state 103


state 63

    (58) EXPRESION -> menos EXPRESION .
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    ptComa          reduce using rule 58 (EXPRESION -> menos EXPRESION .)
    mas             reduce using rule 58 (EXPRESION -> menos EXPRESION .)
    menos           reduce using rule 58 (EXPRESION -> menos EXPRESION .)
    por             reduce using rule 58 (EXPRESION -> menos EXPRESION .)
    dividido        reduce using rule 58 (EXPRESION -> menos EXPRESION .)
    modulo          reduce using rule 58 (EXPRESION -> menos EXPRESION .)
    menorQue        reduce using rule 58 (EXPRESION -> menos EXPRESION .)
    mayorQue        reduce using rule 58 (EXPRESION -> menos EXPRESION .)
    menorIgual      reduce using rule 58 (EXPRESION -> menos EXPRESION .)
    mayorIgual      reduce using rule 58 (EXPRESION -> menos EXPRESION .)
    dobleIgual      reduce using rule 58 (EXPRESION -> menos EXPRESION .)
    diferenteQue    reduce using rule 58 (EXPRESION -> menos EXPRESION .)
    And             reduce using rule 58 (EXPRESION -> menos EXPRESION .)
    Or              reduce using rule 58 (EXPRESION -> menos EXPRESION .)
    AS              reduce using rule 58 (EXPRESION -> menos EXPRESION .)
    CorC            reduce using rule 58 (EXPRESION -> menos EXPRESION .)
    ParC            reduce using rule 58 (EXPRESION -> menos EXPRESION .)
    Coma            reduce using rule 58 (EXPRESION -> menos EXPRESION .)

  ! mas             [ shift and go to state 49 ]
  ! menos           [ shift and go to state 50 ]
  ! por             [ shift and go to state 51 ]
  ! dividido        [ shift and go to state 52 ]
  ! modulo          [ shift and go to state 53 ]
  ! menorQue        [ shift and go to state 54 ]
  ! mayorQue        [ shift and go to state 55 ]
  ! menorIgual      [ shift and go to state 56 ]
  ! mayorIgual      [ shift and go to state 57 ]
  ! dobleIgual      [ shift and go to state 58 ]
  ! diferenteQue    [ shift and go to state 59 ]
  ! And             [ shift and go to state 60 ]
  ! Or              [ shift and go to state 61 ]
  ! AS              [ shift and go to state 62 ]


state 64

    (59) EXPRESION -> ParA EXPRESION . ParC
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    ParC            shift and go to state 104
    mas             shift and go to state 49
    menos           shift and go to state 50
    por             shift and go to state 51
    dividido        shift and go to state 52
    modulo          shift and go to state 53
    menorQue        shift and go to state 54
    mayorQue        shift and go to state 55
    menorIgual      shift and go to state 56
    mayorIgual      shift and go to state 57
    dobleIgual      shift and go to state 58
    diferenteQue    shift and go to state 59
    And             shift and go to state 60
    Or              shift and go to state 61
    AS              shift and go to state 62


state 65

    (60) EXPRESION -> I64 dosPuntos . dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC

    dosPuntos       shift and go to state 105


state 66

    (61) EXPRESION -> F64 dosPuntos . dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC

    dosPuntos       shift and go to state 106


state 67

    (70) EXPRESION -> not EXPRESION .
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    ptComa          reduce using rule 70 (EXPRESION -> not EXPRESION .)
    mas             reduce using rule 70 (EXPRESION -> not EXPRESION .)
    menos           reduce using rule 70 (EXPRESION -> not EXPRESION .)
    por             reduce using rule 70 (EXPRESION -> not EXPRESION .)
    dividido        reduce using rule 70 (EXPRESION -> not EXPRESION .)
    modulo          reduce using rule 70 (EXPRESION -> not EXPRESION .)
    menorQue        reduce using rule 70 (EXPRESION -> not EXPRESION .)
    mayorQue        reduce using rule 70 (EXPRESION -> not EXPRESION .)
    menorIgual      reduce using rule 70 (EXPRESION -> not EXPRESION .)
    mayorIgual      reduce using rule 70 (EXPRESION -> not EXPRESION .)
    dobleIgual      reduce using rule 70 (EXPRESION -> not EXPRESION .)
    diferenteQue    reduce using rule 70 (EXPRESION -> not EXPRESION .)
    And             reduce using rule 70 (EXPRESION -> not EXPRESION .)
    Or              reduce using rule 70 (EXPRESION -> not EXPRESION .)
    AS              reduce using rule 70 (EXPRESION -> not EXPRESION .)
    CorC            reduce using rule 70 (EXPRESION -> not EXPRESION .)
    ParC            reduce using rule 70 (EXPRESION -> not EXPRESION .)
    Coma            reduce using rule 70 (EXPRESION -> not EXPRESION .)

  ! mas             [ shift and go to state 49 ]
  ! menos           [ shift and go to state 50 ]
  ! por             [ shift and go to state 51 ]
  ! dividido        [ shift and go to state 52 ]
  ! modulo          [ shift and go to state 53 ]
  ! menorQue        [ shift and go to state 54 ]
  ! mayorQue        [ shift and go to state 55 ]
  ! menorIgual      [ shift and go to state 56 ]
  ! mayorIgual      [ shift and go to state 57 ]
  ! dobleIgual      [ shift and go to state 58 ]
  ! diferenteQue    [ shift and go to state 59 ]
  ! And             [ shift and go to state 60 ]
  ! Or              [ shift and go to state 61 ]
  ! AS              [ shift and go to state 62 ]


state 68

    (73) EXPRESION -> vec not . CorA COMASEX CorC
    (74) EXPRESION -> vec not . CorA EXPRESION ptComa EXPRESION CorC

    CorA            shift and go to state 107


state 69

    (45) ASIGNACION -> Id CorA EXPRESION CorC . igual EXPRESION ptComa

    igual           shift and go to state 108


state 70

    (47) PUSH -> Id punto Push ParA . EXPRESION ParC ptComa
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 109

state 71

    (49) IMPRIMIR -> PrintLn not ParA String . ParC ptComa
    (50) IMPRIMIR -> PrintLn not ParA String . Coma COMASEX ParC ptComa

    ParC            shift and go to state 110
    Coma            shift and go to state 111


state 72

    (5) DECLARACION -> Let Id igual EXPRESION ptComa .

    Let             reduce using rule 5 (DECLARACION -> Let Id igual EXPRESION ptComa .)
    Id              reduce using rule 5 (DECLARACION -> Let Id igual EXPRESION ptComa .)
    PrintLn         reduce using rule 5 (DECLARACION -> Let Id igual EXPRESION ptComa .)
    $end            reduce using rule 5 (DECLARACION -> Let Id igual EXPRESION ptComa .)


state 73

    (6) DECLARACION -> Let Id dosPuntos I64 igual . EXPRESION ptComa
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 112

state 74

    (7) DECLARACION -> Let Id dosPuntos F64 igual . EXPRESION ptComa
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 113

state 75

    (8) DECLARACION -> Let Id dosPuntos StrA igual . EXPRESION ptComa
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 114

state 76

    (9) DECLARACION -> Let Id dosPuntos Str igual . EXPRESION ptComa
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 115

state 77

    (10) DECLARACION -> Let Id dosPuntos Bool igual . EXPRESION ptComa
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 116

state 78

    (11) DECLARACION -> Let Id dosPuntos CharAux igual . EXPRESION ptComa
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 117

state 79

    (19) DECLARACION -> Let Id dosPuntos VEC menorQue . I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (20) DECLARACION -> Let Id dosPuntos VEC menorQue . F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (21) DECLARACION -> Let Id dosPuntos VEC menorQue . StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (22) DECLARACION -> Let Id dosPuntos VEC menorQue . Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (23) DECLARACION -> Let Id dosPuntos VEC menorQue . Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (24) DECLARACION -> Let Id dosPuntos VEC menorQue . CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (25) DECLARACION -> Let Id dosPuntos VEC menorQue . I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (26) DECLARACION -> Let Id dosPuntos VEC menorQue . F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (27) DECLARACION -> Let Id dosPuntos VEC menorQue . StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (28) DECLARACION -> Let Id dosPuntos VEC menorQue . Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (29) DECLARACION -> Let Id dosPuntos VEC menorQue . Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (30) DECLARACION -> Let Id dosPuntos VEC menorQue . CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    I64             shift and go to state 118
    F64             shift and go to state 119
    StrA            shift and go to state 120
    Str             shift and go to state 121
    Bool            shift and go to state 122
    CharAux         shift and go to state 123


state 80

    (12) DECLARACION -> Let Mut Id igual EXPRESION . ptComa
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    ptComa          shift and go to state 124
    mas             shift and go to state 49
    menos           shift and go to state 50
    por             shift and go to state 51
    dividido        shift and go to state 52
    modulo          shift and go to state 53
    menorQue        shift and go to state 54
    mayorQue        shift and go to state 55
    menorIgual      shift and go to state 56
    mayorIgual      shift and go to state 57
    dobleIgual      shift and go to state 58
    diferenteQue    shift and go to state 59
    And             shift and go to state 60
    Or              shift and go to state 61
    AS              shift and go to state 62


state 81

    (13) DECLARACION -> Let Mut Id dosPuntos I64 . igual EXPRESION ptComa

    igual           shift and go to state 125


state 82

    (14) DECLARACION -> Let Mut Id dosPuntos F64 . igual EXPRESION ptComa

    igual           shift and go to state 126


state 83

    (15) DECLARACION -> Let Mut Id dosPuntos StrA . igual EXPRESION ptComa

    igual           shift and go to state 127


state 84

    (16) DECLARACION -> Let Mut Id dosPuntos Str . igual EXPRESION ptComa

    igual           shift and go to state 128


state 85

    (17) DECLARACION -> Let Mut Id dosPuntos Bool . igual EXPRESION ptComa

    igual           shift and go to state 129


state 86

    (18) DECLARACION -> Let Mut Id dosPuntos CharAux . igual EXPRESION ptComa

    igual           shift and go to state 130


state 87

    (31) DECLARACION -> Let Mut Id dosPuntos VEC . menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (32) DECLARACION -> Let Mut Id dosPuntos VEC . menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (33) DECLARACION -> Let Mut Id dosPuntos VEC . menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (34) DECLARACION -> Let Mut Id dosPuntos VEC . menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (35) DECLARACION -> Let Mut Id dosPuntos VEC . menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (36) DECLARACION -> Let Mut Id dosPuntos VEC . menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (37) DECLARACION -> Let Mut Id dosPuntos VEC . menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (38) DECLARACION -> Let Mut Id dosPuntos VEC . menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (39) DECLARACION -> Let Mut Id dosPuntos VEC . menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (40) DECLARACION -> Let Mut Id dosPuntos VEC . menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (41) DECLARACION -> Let Mut Id dosPuntos VEC . menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (42) DECLARACION -> Let Mut Id dosPuntos VEC . menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    menorQue        shift and go to state 131


state 88

    (81) EXPRESION -> Id CorA EXPRESION . CorC
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    CorC            shift and go to state 132
    mas             shift and go to state 49
    menos           shift and go to state 50
    por             shift and go to state 51
    dividido        shift and go to state 52
    modulo          shift and go to state 53
    menorQue        shift and go to state 54
    mayorQue        shift and go to state 55
    menorIgual      shift and go to state 56
    mayorIgual      shift and go to state 57
    dobleIgual      shift and go to state 58
    diferenteQue    shift and go to state 59
    And             shift and go to state 60
    Or              shift and go to state 61
    AS              shift and go to state 62


state 89

    (53) EXPRESION -> EXPRESION mas EXPRESION .
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    ptComa          reduce using rule 53 (EXPRESION -> EXPRESION mas EXPRESION .)
    mas             reduce using rule 53 (EXPRESION -> EXPRESION mas EXPRESION .)
    menos           reduce using rule 53 (EXPRESION -> EXPRESION mas EXPRESION .)
    And             reduce using rule 53 (EXPRESION -> EXPRESION mas EXPRESION .)
    Or              reduce using rule 53 (EXPRESION -> EXPRESION mas EXPRESION .)
    AS              reduce using rule 53 (EXPRESION -> EXPRESION mas EXPRESION .)
    CorC            reduce using rule 53 (EXPRESION -> EXPRESION mas EXPRESION .)
    ParC            reduce using rule 53 (EXPRESION -> EXPRESION mas EXPRESION .)
    Coma            reduce using rule 53 (EXPRESION -> EXPRESION mas EXPRESION .)
    por             shift and go to state 51
    dividido        shift and go to state 52
    modulo          shift and go to state 53
    menorQue        shift and go to state 54
    mayorQue        shift and go to state 55
    menorIgual      shift and go to state 56
    mayorIgual      shift and go to state 57
    dobleIgual      shift and go to state 58
    diferenteQue    shift and go to state 59

  ! por             [ reduce using rule 53 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! dividido        [ reduce using rule 53 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! modulo          [ reduce using rule 53 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! menorQue        [ reduce using rule 53 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! mayorQue        [ reduce using rule 53 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! menorIgual      [ reduce using rule 53 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! mayorIgual      [ reduce using rule 53 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! dobleIgual      [ reduce using rule 53 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! diferenteQue    [ reduce using rule 53 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! mas             [ shift and go to state 49 ]
  ! menos           [ shift and go to state 50 ]
  ! And             [ shift and go to state 60 ]
  ! Or              [ shift and go to state 61 ]
  ! AS              [ shift and go to state 62 ]


state 90

    (54) EXPRESION -> EXPRESION menos EXPRESION .
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    ptComa          reduce using rule 54 (EXPRESION -> EXPRESION menos EXPRESION .)
    mas             reduce using rule 54 (EXPRESION -> EXPRESION menos EXPRESION .)
    menos           reduce using rule 54 (EXPRESION -> EXPRESION menos EXPRESION .)
    And             reduce using rule 54 (EXPRESION -> EXPRESION menos EXPRESION .)
    Or              reduce using rule 54 (EXPRESION -> EXPRESION menos EXPRESION .)
    AS              reduce using rule 54 (EXPRESION -> EXPRESION menos EXPRESION .)
    CorC            reduce using rule 54 (EXPRESION -> EXPRESION menos EXPRESION .)
    ParC            reduce using rule 54 (EXPRESION -> EXPRESION menos EXPRESION .)
    Coma            reduce using rule 54 (EXPRESION -> EXPRESION menos EXPRESION .)
    por             shift and go to state 51
    dividido        shift and go to state 52
    modulo          shift and go to state 53
    menorQue        shift and go to state 54
    mayorQue        shift and go to state 55
    menorIgual      shift and go to state 56
    mayorIgual      shift and go to state 57
    dobleIgual      shift and go to state 58
    diferenteQue    shift and go to state 59

  ! por             [ reduce using rule 54 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! dividido        [ reduce using rule 54 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! modulo          [ reduce using rule 54 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! menorQue        [ reduce using rule 54 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! mayorQue        [ reduce using rule 54 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! menorIgual      [ reduce using rule 54 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! mayorIgual      [ reduce using rule 54 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! dobleIgual      [ reduce using rule 54 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! diferenteQue    [ reduce using rule 54 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! mas             [ shift and go to state 49 ]
  ! menos           [ shift and go to state 50 ]
  ! And             [ shift and go to state 60 ]
  ! Or              [ shift and go to state 61 ]
  ! AS              [ shift and go to state 62 ]


state 91

    (55) EXPRESION -> EXPRESION por EXPRESION .
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    ptComa          reduce using rule 55 (EXPRESION -> EXPRESION por EXPRESION .)
    mas             reduce using rule 55 (EXPRESION -> EXPRESION por EXPRESION .)
    menos           reduce using rule 55 (EXPRESION -> EXPRESION por EXPRESION .)
    por             reduce using rule 55 (EXPRESION -> EXPRESION por EXPRESION .)
    dividido        reduce using rule 55 (EXPRESION -> EXPRESION por EXPRESION .)
    modulo          reduce using rule 55 (EXPRESION -> EXPRESION por EXPRESION .)
    menorQue        reduce using rule 55 (EXPRESION -> EXPRESION por EXPRESION .)
    mayorQue        reduce using rule 55 (EXPRESION -> EXPRESION por EXPRESION .)
    menorIgual      reduce using rule 55 (EXPRESION -> EXPRESION por EXPRESION .)
    mayorIgual      reduce using rule 55 (EXPRESION -> EXPRESION por EXPRESION .)
    dobleIgual      reduce using rule 55 (EXPRESION -> EXPRESION por EXPRESION .)
    diferenteQue    reduce using rule 55 (EXPRESION -> EXPRESION por EXPRESION .)
    And             reduce using rule 55 (EXPRESION -> EXPRESION por EXPRESION .)
    Or              reduce using rule 55 (EXPRESION -> EXPRESION por EXPRESION .)
    AS              reduce using rule 55 (EXPRESION -> EXPRESION por EXPRESION .)
    CorC            reduce using rule 55 (EXPRESION -> EXPRESION por EXPRESION .)
    ParC            reduce using rule 55 (EXPRESION -> EXPRESION por EXPRESION .)
    Coma            reduce using rule 55 (EXPRESION -> EXPRESION por EXPRESION .)

  ! mas             [ shift and go to state 49 ]
  ! menos           [ shift and go to state 50 ]
  ! por             [ shift and go to state 51 ]
  ! dividido        [ shift and go to state 52 ]
  ! modulo          [ shift and go to state 53 ]
  ! menorQue        [ shift and go to state 54 ]
  ! mayorQue        [ shift and go to state 55 ]
  ! menorIgual      [ shift and go to state 56 ]
  ! mayorIgual      [ shift and go to state 57 ]
  ! dobleIgual      [ shift and go to state 58 ]
  ! diferenteQue    [ shift and go to state 59 ]
  ! And             [ shift and go to state 60 ]
  ! Or              [ shift and go to state 61 ]
  ! AS              [ shift and go to state 62 ]


state 92

    (56) EXPRESION -> EXPRESION dividido EXPRESION .
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    ptComa          reduce using rule 56 (EXPRESION -> EXPRESION dividido EXPRESION .)
    mas             reduce using rule 56 (EXPRESION -> EXPRESION dividido EXPRESION .)
    menos           reduce using rule 56 (EXPRESION -> EXPRESION dividido EXPRESION .)
    por             reduce using rule 56 (EXPRESION -> EXPRESION dividido EXPRESION .)
    dividido        reduce using rule 56 (EXPRESION -> EXPRESION dividido EXPRESION .)
    modulo          reduce using rule 56 (EXPRESION -> EXPRESION dividido EXPRESION .)
    menorQue        reduce using rule 56 (EXPRESION -> EXPRESION dividido EXPRESION .)
    mayorQue        reduce using rule 56 (EXPRESION -> EXPRESION dividido EXPRESION .)
    menorIgual      reduce using rule 56 (EXPRESION -> EXPRESION dividido EXPRESION .)
    mayorIgual      reduce using rule 56 (EXPRESION -> EXPRESION dividido EXPRESION .)
    dobleIgual      reduce using rule 56 (EXPRESION -> EXPRESION dividido EXPRESION .)
    diferenteQue    reduce using rule 56 (EXPRESION -> EXPRESION dividido EXPRESION .)
    And             reduce using rule 56 (EXPRESION -> EXPRESION dividido EXPRESION .)
    Or              reduce using rule 56 (EXPRESION -> EXPRESION dividido EXPRESION .)
    AS              reduce using rule 56 (EXPRESION -> EXPRESION dividido EXPRESION .)
    CorC            reduce using rule 56 (EXPRESION -> EXPRESION dividido EXPRESION .)
    ParC            reduce using rule 56 (EXPRESION -> EXPRESION dividido EXPRESION .)
    Coma            reduce using rule 56 (EXPRESION -> EXPRESION dividido EXPRESION .)

  ! mas             [ shift and go to state 49 ]
  ! menos           [ shift and go to state 50 ]
  ! por             [ shift and go to state 51 ]
  ! dividido        [ shift and go to state 52 ]
  ! modulo          [ shift and go to state 53 ]
  ! menorQue        [ shift and go to state 54 ]
  ! mayorQue        [ shift and go to state 55 ]
  ! menorIgual      [ shift and go to state 56 ]
  ! mayorIgual      [ shift and go to state 57 ]
  ! dobleIgual      [ shift and go to state 58 ]
  ! diferenteQue    [ shift and go to state 59 ]
  ! And             [ shift and go to state 60 ]
  ! Or              [ shift and go to state 61 ]
  ! AS              [ shift and go to state 62 ]


state 93

    (57) EXPRESION -> EXPRESION modulo EXPRESION .
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    ptComa          reduce using rule 57 (EXPRESION -> EXPRESION modulo EXPRESION .)
    mas             reduce using rule 57 (EXPRESION -> EXPRESION modulo EXPRESION .)
    menos           reduce using rule 57 (EXPRESION -> EXPRESION modulo EXPRESION .)
    por             reduce using rule 57 (EXPRESION -> EXPRESION modulo EXPRESION .)
    dividido        reduce using rule 57 (EXPRESION -> EXPRESION modulo EXPRESION .)
    modulo          reduce using rule 57 (EXPRESION -> EXPRESION modulo EXPRESION .)
    menorQue        reduce using rule 57 (EXPRESION -> EXPRESION modulo EXPRESION .)
    mayorQue        reduce using rule 57 (EXPRESION -> EXPRESION modulo EXPRESION .)
    menorIgual      reduce using rule 57 (EXPRESION -> EXPRESION modulo EXPRESION .)
    mayorIgual      reduce using rule 57 (EXPRESION -> EXPRESION modulo EXPRESION .)
    dobleIgual      reduce using rule 57 (EXPRESION -> EXPRESION modulo EXPRESION .)
    diferenteQue    reduce using rule 57 (EXPRESION -> EXPRESION modulo EXPRESION .)
    And             reduce using rule 57 (EXPRESION -> EXPRESION modulo EXPRESION .)
    Or              reduce using rule 57 (EXPRESION -> EXPRESION modulo EXPRESION .)
    AS              reduce using rule 57 (EXPRESION -> EXPRESION modulo EXPRESION .)
    CorC            reduce using rule 57 (EXPRESION -> EXPRESION modulo EXPRESION .)
    ParC            reduce using rule 57 (EXPRESION -> EXPRESION modulo EXPRESION .)
    Coma            reduce using rule 57 (EXPRESION -> EXPRESION modulo EXPRESION .)

  ! mas             [ shift and go to state 49 ]
  ! menos           [ shift and go to state 50 ]
  ! por             [ shift and go to state 51 ]
  ! dividido        [ shift and go to state 52 ]
  ! modulo          [ shift and go to state 53 ]
  ! menorQue        [ shift and go to state 54 ]
  ! mayorQue        [ shift and go to state 55 ]
  ! menorIgual      [ shift and go to state 56 ]
  ! mayorIgual      [ shift and go to state 57 ]
  ! dobleIgual      [ shift and go to state 58 ]
  ! diferenteQue    [ shift and go to state 59 ]
  ! And             [ shift and go to state 60 ]
  ! Or              [ shift and go to state 61 ]
  ! AS              [ shift and go to state 62 ]


state 94

    (62) EXPRESION -> EXPRESION menorQue EXPRESION .
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    ptComa          reduce using rule 62 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    mas             reduce using rule 62 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    menos           reduce using rule 62 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    menorQue        reduce using rule 62 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    mayorQue        reduce using rule 62 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    menorIgual      reduce using rule 62 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    mayorIgual      reduce using rule 62 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    dobleIgual      reduce using rule 62 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    diferenteQue    reduce using rule 62 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    And             reduce using rule 62 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    Or              reduce using rule 62 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    AS              reduce using rule 62 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    CorC            reduce using rule 62 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    ParC            reduce using rule 62 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    Coma            reduce using rule 62 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    por             shift and go to state 51
    dividido        shift and go to state 52
    modulo          shift and go to state 53

  ! por             [ reduce using rule 62 (EXPRESION -> EXPRESION menorQue EXPRESION .) ]
  ! dividido        [ reduce using rule 62 (EXPRESION -> EXPRESION menorQue EXPRESION .) ]
  ! modulo          [ reduce using rule 62 (EXPRESION -> EXPRESION menorQue EXPRESION .) ]
  ! mas             [ shift and go to state 49 ]
  ! menos           [ shift and go to state 50 ]
  ! menorQue        [ shift and go to state 54 ]
  ! mayorQue        [ shift and go to state 55 ]
  ! menorIgual      [ shift and go to state 56 ]
  ! mayorIgual      [ shift and go to state 57 ]
  ! dobleIgual      [ shift and go to state 58 ]
  ! diferenteQue    [ shift and go to state 59 ]
  ! And             [ shift and go to state 60 ]
  ! Or              [ shift and go to state 61 ]
  ! AS              [ shift and go to state 62 ]


state 95

    (63) EXPRESION -> EXPRESION mayorQue EXPRESION .
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    ptComa          reduce using rule 63 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    mas             reduce using rule 63 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    menos           reduce using rule 63 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    menorQue        reduce using rule 63 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    mayorQue        reduce using rule 63 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    menorIgual      reduce using rule 63 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    mayorIgual      reduce using rule 63 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    dobleIgual      reduce using rule 63 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    diferenteQue    reduce using rule 63 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    And             reduce using rule 63 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    Or              reduce using rule 63 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    AS              reduce using rule 63 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    CorC            reduce using rule 63 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    ParC            reduce using rule 63 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    Coma            reduce using rule 63 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    por             shift and go to state 51
    dividido        shift and go to state 52
    modulo          shift and go to state 53

  ! por             [ reduce using rule 63 (EXPRESION -> EXPRESION mayorQue EXPRESION .) ]
  ! dividido        [ reduce using rule 63 (EXPRESION -> EXPRESION mayorQue EXPRESION .) ]
  ! modulo          [ reduce using rule 63 (EXPRESION -> EXPRESION mayorQue EXPRESION .) ]
  ! mas             [ shift and go to state 49 ]
  ! menos           [ shift and go to state 50 ]
  ! menorQue        [ shift and go to state 54 ]
  ! mayorQue        [ shift and go to state 55 ]
  ! menorIgual      [ shift and go to state 56 ]
  ! mayorIgual      [ shift and go to state 57 ]
  ! dobleIgual      [ shift and go to state 58 ]
  ! diferenteQue    [ shift and go to state 59 ]
  ! And             [ shift and go to state 60 ]
  ! Or              [ shift and go to state 61 ]
  ! AS              [ shift and go to state 62 ]


state 96

    (64) EXPRESION -> EXPRESION menorIgual EXPRESION .
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    ptComa          reduce using rule 64 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    mas             reduce using rule 64 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    menos           reduce using rule 64 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    menorQue        reduce using rule 64 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    mayorQue        reduce using rule 64 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    menorIgual      reduce using rule 64 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    mayorIgual      reduce using rule 64 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    dobleIgual      reduce using rule 64 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    diferenteQue    reduce using rule 64 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    And             reduce using rule 64 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    Or              reduce using rule 64 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    AS              reduce using rule 64 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    CorC            reduce using rule 64 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    ParC            reduce using rule 64 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    Coma            reduce using rule 64 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    por             shift and go to state 51
    dividido        shift and go to state 52
    modulo          shift and go to state 53

  ! por             [ reduce using rule 64 (EXPRESION -> EXPRESION menorIgual EXPRESION .) ]
  ! dividido        [ reduce using rule 64 (EXPRESION -> EXPRESION menorIgual EXPRESION .) ]
  ! modulo          [ reduce using rule 64 (EXPRESION -> EXPRESION menorIgual EXPRESION .) ]
  ! mas             [ shift and go to state 49 ]
  ! menos           [ shift and go to state 50 ]
  ! menorQue        [ shift and go to state 54 ]
  ! mayorQue        [ shift and go to state 55 ]
  ! menorIgual      [ shift and go to state 56 ]
  ! mayorIgual      [ shift and go to state 57 ]
  ! dobleIgual      [ shift and go to state 58 ]
  ! diferenteQue    [ shift and go to state 59 ]
  ! And             [ shift and go to state 60 ]
  ! Or              [ shift and go to state 61 ]
  ! AS              [ shift and go to state 62 ]


state 97

    (65) EXPRESION -> EXPRESION mayorIgual EXPRESION .
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    ptComa          reduce using rule 65 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    mas             reduce using rule 65 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    menos           reduce using rule 65 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    menorQue        reduce using rule 65 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    mayorQue        reduce using rule 65 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    menorIgual      reduce using rule 65 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    mayorIgual      reduce using rule 65 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    dobleIgual      reduce using rule 65 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    diferenteQue    reduce using rule 65 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    And             reduce using rule 65 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    Or              reduce using rule 65 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    AS              reduce using rule 65 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    CorC            reduce using rule 65 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    ParC            reduce using rule 65 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    Coma            reduce using rule 65 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    por             shift and go to state 51
    dividido        shift and go to state 52
    modulo          shift and go to state 53

  ! por             [ reduce using rule 65 (EXPRESION -> EXPRESION mayorIgual EXPRESION .) ]
  ! dividido        [ reduce using rule 65 (EXPRESION -> EXPRESION mayorIgual EXPRESION .) ]
  ! modulo          [ reduce using rule 65 (EXPRESION -> EXPRESION mayorIgual EXPRESION .) ]
  ! mas             [ shift and go to state 49 ]
  ! menos           [ shift and go to state 50 ]
  ! menorQue        [ shift and go to state 54 ]
  ! mayorQue        [ shift and go to state 55 ]
  ! menorIgual      [ shift and go to state 56 ]
  ! mayorIgual      [ shift and go to state 57 ]
  ! dobleIgual      [ shift and go to state 58 ]
  ! diferenteQue    [ shift and go to state 59 ]
  ! And             [ shift and go to state 60 ]
  ! Or              [ shift and go to state 61 ]
  ! AS              [ shift and go to state 62 ]


state 98

    (66) EXPRESION -> EXPRESION dobleIgual EXPRESION .
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    ptComa          reduce using rule 66 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    mas             reduce using rule 66 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    menos           reduce using rule 66 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    menorQue        reduce using rule 66 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    mayorQue        reduce using rule 66 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    menorIgual      reduce using rule 66 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    mayorIgual      reduce using rule 66 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    dobleIgual      reduce using rule 66 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    diferenteQue    reduce using rule 66 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    And             reduce using rule 66 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    Or              reduce using rule 66 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    AS              reduce using rule 66 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    CorC            reduce using rule 66 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    ParC            reduce using rule 66 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    Coma            reduce using rule 66 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    por             shift and go to state 51
    dividido        shift and go to state 52
    modulo          shift and go to state 53

  ! por             [ reduce using rule 66 (EXPRESION -> EXPRESION dobleIgual EXPRESION .) ]
  ! dividido        [ reduce using rule 66 (EXPRESION -> EXPRESION dobleIgual EXPRESION .) ]
  ! modulo          [ reduce using rule 66 (EXPRESION -> EXPRESION dobleIgual EXPRESION .) ]
  ! mas             [ shift and go to state 49 ]
  ! menos           [ shift and go to state 50 ]
  ! menorQue        [ shift and go to state 54 ]
  ! mayorQue        [ shift and go to state 55 ]
  ! menorIgual      [ shift and go to state 56 ]
  ! mayorIgual      [ shift and go to state 57 ]
  ! dobleIgual      [ shift and go to state 58 ]
  ! diferenteQue    [ shift and go to state 59 ]
  ! And             [ shift and go to state 60 ]
  ! Or              [ shift and go to state 61 ]
  ! AS              [ shift and go to state 62 ]


state 99

    (67) EXPRESION -> EXPRESION diferenteQue EXPRESION .
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    ptComa          reduce using rule 67 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    mas             reduce using rule 67 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    menos           reduce using rule 67 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    menorQue        reduce using rule 67 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    mayorQue        reduce using rule 67 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    menorIgual      reduce using rule 67 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    mayorIgual      reduce using rule 67 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    dobleIgual      reduce using rule 67 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    diferenteQue    reduce using rule 67 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    And             reduce using rule 67 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    Or              reduce using rule 67 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    AS              reduce using rule 67 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    CorC            reduce using rule 67 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    ParC            reduce using rule 67 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    Coma            reduce using rule 67 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    por             shift and go to state 51
    dividido        shift and go to state 52
    modulo          shift and go to state 53

  ! por             [ reduce using rule 67 (EXPRESION -> EXPRESION diferenteQue EXPRESION .) ]
  ! dividido        [ reduce using rule 67 (EXPRESION -> EXPRESION diferenteQue EXPRESION .) ]
  ! modulo          [ reduce using rule 67 (EXPRESION -> EXPRESION diferenteQue EXPRESION .) ]
  ! mas             [ shift and go to state 49 ]
  ! menos           [ shift and go to state 50 ]
  ! menorQue        [ shift and go to state 54 ]
  ! mayorQue        [ shift and go to state 55 ]
  ! menorIgual      [ shift and go to state 56 ]
  ! mayorIgual      [ shift and go to state 57 ]
  ! dobleIgual      [ shift and go to state 58 ]
  ! diferenteQue    [ shift and go to state 59 ]
  ! And             [ shift and go to state 60 ]
  ! Or              [ shift and go to state 61 ]
  ! AS              [ shift and go to state 62 ]


state 100

    (68) EXPRESION -> EXPRESION And EXPRESION .
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    ptComa          reduce using rule 68 (EXPRESION -> EXPRESION And EXPRESION .)
    And             reduce using rule 68 (EXPRESION -> EXPRESION And EXPRESION .)
    Or              reduce using rule 68 (EXPRESION -> EXPRESION And EXPRESION .)
    AS              reduce using rule 68 (EXPRESION -> EXPRESION And EXPRESION .)
    CorC            reduce using rule 68 (EXPRESION -> EXPRESION And EXPRESION .)
    ParC            reduce using rule 68 (EXPRESION -> EXPRESION And EXPRESION .)
    Coma            reduce using rule 68 (EXPRESION -> EXPRESION And EXPRESION .)
    mas             shift and go to state 49
    menos           shift and go to state 50
    por             shift and go to state 51
    dividido        shift and go to state 52
    modulo          shift and go to state 53
    menorQue        shift and go to state 54
    mayorQue        shift and go to state 55
    menorIgual      shift and go to state 56
    mayorIgual      shift and go to state 57
    dobleIgual      shift and go to state 58
    diferenteQue    shift and go to state 59

  ! mas             [ reduce using rule 68 (EXPRESION -> EXPRESION And EXPRESION .) ]
  ! menos           [ reduce using rule 68 (EXPRESION -> EXPRESION And EXPRESION .) ]
  ! por             [ reduce using rule 68 (EXPRESION -> EXPRESION And EXPRESION .) ]
  ! dividido        [ reduce using rule 68 (EXPRESION -> EXPRESION And EXPRESION .) ]
  ! modulo          [ reduce using rule 68 (EXPRESION -> EXPRESION And EXPRESION .) ]
  ! menorQue        [ reduce using rule 68 (EXPRESION -> EXPRESION And EXPRESION .) ]
  ! mayorQue        [ reduce using rule 68 (EXPRESION -> EXPRESION And EXPRESION .) ]
  ! menorIgual      [ reduce using rule 68 (EXPRESION -> EXPRESION And EXPRESION .) ]
  ! mayorIgual      [ reduce using rule 68 (EXPRESION -> EXPRESION And EXPRESION .) ]
  ! dobleIgual      [ reduce using rule 68 (EXPRESION -> EXPRESION And EXPRESION .) ]
  ! diferenteQue    [ reduce using rule 68 (EXPRESION -> EXPRESION And EXPRESION .) ]
  ! And             [ shift and go to state 60 ]
  ! Or              [ shift and go to state 61 ]
  ! AS              [ shift and go to state 62 ]


state 101

    (69) EXPRESION -> EXPRESION Or EXPRESION .
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    ptComa          reduce using rule 69 (EXPRESION -> EXPRESION Or EXPRESION .)
    Or              reduce using rule 69 (EXPRESION -> EXPRESION Or EXPRESION .)
    AS              reduce using rule 69 (EXPRESION -> EXPRESION Or EXPRESION .)
    CorC            reduce using rule 69 (EXPRESION -> EXPRESION Or EXPRESION .)
    ParC            reduce using rule 69 (EXPRESION -> EXPRESION Or EXPRESION .)
    Coma            reduce using rule 69 (EXPRESION -> EXPRESION Or EXPRESION .)
    mas             shift and go to state 49
    menos           shift and go to state 50
    por             shift and go to state 51
    dividido        shift and go to state 52
    modulo          shift and go to state 53
    menorQue        shift and go to state 54
    mayorQue        shift and go to state 55
    menorIgual      shift and go to state 56
    mayorIgual      shift and go to state 57
    dobleIgual      shift and go to state 58
    diferenteQue    shift and go to state 59
    And             shift and go to state 60

  ! mas             [ reduce using rule 69 (EXPRESION -> EXPRESION Or EXPRESION .) ]
  ! menos           [ reduce using rule 69 (EXPRESION -> EXPRESION Or EXPRESION .) ]
  ! por             [ reduce using rule 69 (EXPRESION -> EXPRESION Or EXPRESION .) ]
  ! dividido        [ reduce using rule 69 (EXPRESION -> EXPRESION Or EXPRESION .) ]
  ! modulo          [ reduce using rule 69 (EXPRESION -> EXPRESION Or EXPRESION .) ]
  ! menorQue        [ reduce using rule 69 (EXPRESION -> EXPRESION Or EXPRESION .) ]
  ! mayorQue        [ reduce using rule 69 (EXPRESION -> EXPRESION Or EXPRESION .) ]
  ! menorIgual      [ reduce using rule 69 (EXPRESION -> EXPRESION Or EXPRESION .) ]
  ! mayorIgual      [ reduce using rule 69 (EXPRESION -> EXPRESION Or EXPRESION .) ]
  ! dobleIgual      [ reduce using rule 69 (EXPRESION -> EXPRESION Or EXPRESION .) ]
  ! diferenteQue    [ reduce using rule 69 (EXPRESION -> EXPRESION Or EXPRESION .) ]
  ! And             [ reduce using rule 69 (EXPRESION -> EXPRESION Or EXPRESION .) ]
  ! Or              [ shift and go to state 61 ]
  ! AS              [ shift and go to state 62 ]


state 102

    (71) EXPRESION -> EXPRESION AS I64 .

    ptComa          reduce using rule 71 (EXPRESION -> EXPRESION AS I64 .)
    mas             reduce using rule 71 (EXPRESION -> EXPRESION AS I64 .)
    menos           reduce using rule 71 (EXPRESION -> EXPRESION AS I64 .)
    por             reduce using rule 71 (EXPRESION -> EXPRESION AS I64 .)
    dividido        reduce using rule 71 (EXPRESION -> EXPRESION AS I64 .)
    modulo          reduce using rule 71 (EXPRESION -> EXPRESION AS I64 .)
    menorQue        reduce using rule 71 (EXPRESION -> EXPRESION AS I64 .)
    mayorQue        reduce using rule 71 (EXPRESION -> EXPRESION AS I64 .)
    menorIgual      reduce using rule 71 (EXPRESION -> EXPRESION AS I64 .)
    mayorIgual      reduce using rule 71 (EXPRESION -> EXPRESION AS I64 .)
    dobleIgual      reduce using rule 71 (EXPRESION -> EXPRESION AS I64 .)
    diferenteQue    reduce using rule 71 (EXPRESION -> EXPRESION AS I64 .)
    And             reduce using rule 71 (EXPRESION -> EXPRESION AS I64 .)
    Or              reduce using rule 71 (EXPRESION -> EXPRESION AS I64 .)
    AS              reduce using rule 71 (EXPRESION -> EXPRESION AS I64 .)
    CorC            reduce using rule 71 (EXPRESION -> EXPRESION AS I64 .)
    ParC            reduce using rule 71 (EXPRESION -> EXPRESION AS I64 .)
    Coma            reduce using rule 71 (EXPRESION -> EXPRESION AS I64 .)


state 103

    (72) EXPRESION -> EXPRESION AS F64 .

    ptComa          reduce using rule 72 (EXPRESION -> EXPRESION AS F64 .)
    mas             reduce using rule 72 (EXPRESION -> EXPRESION AS F64 .)
    menos           reduce using rule 72 (EXPRESION -> EXPRESION AS F64 .)
    por             reduce using rule 72 (EXPRESION -> EXPRESION AS F64 .)
    dividido        reduce using rule 72 (EXPRESION -> EXPRESION AS F64 .)
    modulo          reduce using rule 72 (EXPRESION -> EXPRESION AS F64 .)
    menorQue        reduce using rule 72 (EXPRESION -> EXPRESION AS F64 .)
    mayorQue        reduce using rule 72 (EXPRESION -> EXPRESION AS F64 .)
    menorIgual      reduce using rule 72 (EXPRESION -> EXPRESION AS F64 .)
    mayorIgual      reduce using rule 72 (EXPRESION -> EXPRESION AS F64 .)
    dobleIgual      reduce using rule 72 (EXPRESION -> EXPRESION AS F64 .)
    diferenteQue    reduce using rule 72 (EXPRESION -> EXPRESION AS F64 .)
    And             reduce using rule 72 (EXPRESION -> EXPRESION AS F64 .)
    Or              reduce using rule 72 (EXPRESION -> EXPRESION AS F64 .)
    AS              reduce using rule 72 (EXPRESION -> EXPRESION AS F64 .)
    CorC            reduce using rule 72 (EXPRESION -> EXPRESION AS F64 .)
    ParC            reduce using rule 72 (EXPRESION -> EXPRESION AS F64 .)
    Coma            reduce using rule 72 (EXPRESION -> EXPRESION AS F64 .)


state 104

    (59) EXPRESION -> ParA EXPRESION ParC .

    ptComa          reduce using rule 59 (EXPRESION -> ParA EXPRESION ParC .)
    mas             reduce using rule 59 (EXPRESION -> ParA EXPRESION ParC .)
    menos           reduce using rule 59 (EXPRESION -> ParA EXPRESION ParC .)
    por             reduce using rule 59 (EXPRESION -> ParA EXPRESION ParC .)
    dividido        reduce using rule 59 (EXPRESION -> ParA EXPRESION ParC .)
    modulo          reduce using rule 59 (EXPRESION -> ParA EXPRESION ParC .)
    menorQue        reduce using rule 59 (EXPRESION -> ParA EXPRESION ParC .)
    mayorQue        reduce using rule 59 (EXPRESION -> ParA EXPRESION ParC .)
    menorIgual      reduce using rule 59 (EXPRESION -> ParA EXPRESION ParC .)
    mayorIgual      reduce using rule 59 (EXPRESION -> ParA EXPRESION ParC .)
    dobleIgual      reduce using rule 59 (EXPRESION -> ParA EXPRESION ParC .)
    diferenteQue    reduce using rule 59 (EXPRESION -> ParA EXPRESION ParC .)
    And             reduce using rule 59 (EXPRESION -> ParA EXPRESION ParC .)
    Or              reduce using rule 59 (EXPRESION -> ParA EXPRESION ParC .)
    AS              reduce using rule 59 (EXPRESION -> ParA EXPRESION ParC .)
    CorC            reduce using rule 59 (EXPRESION -> ParA EXPRESION ParC .)
    ParC            reduce using rule 59 (EXPRESION -> ParA EXPRESION ParC .)
    Coma            reduce using rule 59 (EXPRESION -> ParA EXPRESION ParC .)


state 105

    (60) EXPRESION -> I64 dosPuntos dosPuntos . Powi ParA EXPRESION Coma EXPRESION ParC

    Powi            shift and go to state 133


state 106

    (61) EXPRESION -> F64 dosPuntos dosPuntos . Powf ParA EXPRESION Coma EXPRESION ParC

    Powf            shift and go to state 134


state 107

    (73) EXPRESION -> vec not CorA . COMASEX CorC
    (74) EXPRESION -> vec not CorA . EXPRESION ptComa EXPRESION CorC
    (51) COMASEX -> . COMASEX Coma EXPRESION
    (52) COMASEX -> . EXPRESION
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    COMASEX                        shift and go to state 135
    EXPRESION                      shift and go to state 136

state 108

    (45) ASIGNACION -> Id CorA EXPRESION CorC igual . EXPRESION ptComa
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 137

state 109

    (47) PUSH -> Id punto Push ParA EXPRESION . ParC ptComa
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    ParC            shift and go to state 138
    mas             shift and go to state 49
    menos           shift and go to state 50
    por             shift and go to state 51
    dividido        shift and go to state 52
    modulo          shift and go to state 53
    menorQue        shift and go to state 54
    mayorQue        shift and go to state 55
    menorIgual      shift and go to state 56
    mayorIgual      shift and go to state 57
    dobleIgual      shift and go to state 58
    diferenteQue    shift and go to state 59
    And             shift and go to state 60
    Or              shift and go to state 61
    AS              shift and go to state 62


state 110

    (49) IMPRIMIR -> PrintLn not ParA String ParC . ptComa

    ptComa          shift and go to state 139


state 111

    (50) IMPRIMIR -> PrintLn not ParA String Coma . COMASEX ParC ptComa
    (51) COMASEX -> . COMASEX Coma EXPRESION
    (52) COMASEX -> . EXPRESION
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    COMASEX                        shift and go to state 140
    EXPRESION                      shift and go to state 141

state 112

    (6) DECLARACION -> Let Id dosPuntos I64 igual EXPRESION . ptComa
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    ptComa          shift and go to state 142
    mas             shift and go to state 49
    menos           shift and go to state 50
    por             shift and go to state 51
    dividido        shift and go to state 52
    modulo          shift and go to state 53
    menorQue        shift and go to state 54
    mayorQue        shift and go to state 55
    menorIgual      shift and go to state 56
    mayorIgual      shift and go to state 57
    dobleIgual      shift and go to state 58
    diferenteQue    shift and go to state 59
    And             shift and go to state 60
    Or              shift and go to state 61
    AS              shift and go to state 62


state 113

    (7) DECLARACION -> Let Id dosPuntos F64 igual EXPRESION . ptComa
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    ptComa          shift and go to state 143
    mas             shift and go to state 49
    menos           shift and go to state 50
    por             shift and go to state 51
    dividido        shift and go to state 52
    modulo          shift and go to state 53
    menorQue        shift and go to state 54
    mayorQue        shift and go to state 55
    menorIgual      shift and go to state 56
    mayorIgual      shift and go to state 57
    dobleIgual      shift and go to state 58
    diferenteQue    shift and go to state 59
    And             shift and go to state 60
    Or              shift and go to state 61
    AS              shift and go to state 62


state 114

    (8) DECLARACION -> Let Id dosPuntos StrA igual EXPRESION . ptComa
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    ptComa          shift and go to state 144
    mas             shift and go to state 49
    menos           shift and go to state 50
    por             shift and go to state 51
    dividido        shift and go to state 52
    modulo          shift and go to state 53
    menorQue        shift and go to state 54
    mayorQue        shift and go to state 55
    menorIgual      shift and go to state 56
    mayorIgual      shift and go to state 57
    dobleIgual      shift and go to state 58
    diferenteQue    shift and go to state 59
    And             shift and go to state 60
    Or              shift and go to state 61
    AS              shift and go to state 62


state 115

    (9) DECLARACION -> Let Id dosPuntos Str igual EXPRESION . ptComa
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    ptComa          shift and go to state 145
    mas             shift and go to state 49
    menos           shift and go to state 50
    por             shift and go to state 51
    dividido        shift and go to state 52
    modulo          shift and go to state 53
    menorQue        shift and go to state 54
    mayorQue        shift and go to state 55
    menorIgual      shift and go to state 56
    mayorIgual      shift and go to state 57
    dobleIgual      shift and go to state 58
    diferenteQue    shift and go to state 59
    And             shift and go to state 60
    Or              shift and go to state 61
    AS              shift and go to state 62


state 116

    (10) DECLARACION -> Let Id dosPuntos Bool igual EXPRESION . ptComa
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    ptComa          shift and go to state 146
    mas             shift and go to state 49
    menos           shift and go to state 50
    por             shift and go to state 51
    dividido        shift and go to state 52
    modulo          shift and go to state 53
    menorQue        shift and go to state 54
    mayorQue        shift and go to state 55
    menorIgual      shift and go to state 56
    mayorIgual      shift and go to state 57
    dobleIgual      shift and go to state 58
    diferenteQue    shift and go to state 59
    And             shift and go to state 60
    Or              shift and go to state 61
    AS              shift and go to state 62


state 117

    (11) DECLARACION -> Let Id dosPuntos CharAux igual EXPRESION . ptComa
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    ptComa          shift and go to state 147
    mas             shift and go to state 49
    menos           shift and go to state 50
    por             shift and go to state 51
    dividido        shift and go to state 52
    modulo          shift and go to state 53
    menorQue        shift and go to state 54
    mayorQue        shift and go to state 55
    menorIgual      shift and go to state 56
    mayorIgual      shift and go to state 57
    dobleIgual      shift and go to state 58
    diferenteQue    shift and go to state 59
    And             shift and go to state 60
    Or              shift and go to state 61
    AS              shift and go to state 62


state 118

    (19) DECLARACION -> Let Id dosPuntos VEC menorQue I64 . mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (25) DECLARACION -> Let Id dosPuntos VEC menorQue I64 . mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    mayorQue        shift and go to state 148


state 119

    (20) DECLARACION -> Let Id dosPuntos VEC menorQue F64 . mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (26) DECLARACION -> Let Id dosPuntos VEC menorQue F64 . mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    mayorQue        shift and go to state 149


state 120

    (21) DECLARACION -> Let Id dosPuntos VEC menorQue StrA . mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (27) DECLARACION -> Let Id dosPuntos VEC menorQue StrA . mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    mayorQue        shift and go to state 150


state 121

    (22) DECLARACION -> Let Id dosPuntos VEC menorQue Str . mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (28) DECLARACION -> Let Id dosPuntos VEC menorQue Str . mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    mayorQue        shift and go to state 151


state 122

    (23) DECLARACION -> Let Id dosPuntos VEC menorQue Bool . mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (29) DECLARACION -> Let Id dosPuntos VEC menorQue Bool . mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    mayorQue        shift and go to state 152


state 123

    (24) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux . mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (30) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux . mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    mayorQue        shift and go to state 153


state 124

    (12) DECLARACION -> Let Mut Id igual EXPRESION ptComa .

    Let             reduce using rule 12 (DECLARACION -> Let Mut Id igual EXPRESION ptComa .)
    Id              reduce using rule 12 (DECLARACION -> Let Mut Id igual EXPRESION ptComa .)
    PrintLn         reduce using rule 12 (DECLARACION -> Let Mut Id igual EXPRESION ptComa .)
    $end            reduce using rule 12 (DECLARACION -> Let Mut Id igual EXPRESION ptComa .)


state 125

    (13) DECLARACION -> Let Mut Id dosPuntos I64 igual . EXPRESION ptComa
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 154

state 126

    (14) DECLARACION -> Let Mut Id dosPuntos F64 igual . EXPRESION ptComa
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 155

state 127

    (15) DECLARACION -> Let Mut Id dosPuntos StrA igual . EXPRESION ptComa
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 156

state 128

    (16) DECLARACION -> Let Mut Id dosPuntos Str igual . EXPRESION ptComa
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 157

state 129

    (17) DECLARACION -> Let Mut Id dosPuntos Bool igual . EXPRESION ptComa
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 158

state 130

    (18) DECLARACION -> Let Mut Id dosPuntos CharAux igual . EXPRESION ptComa
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 159

state 131

    (31) DECLARACION -> Let Mut Id dosPuntos VEC menorQue . I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (32) DECLARACION -> Let Mut Id dosPuntos VEC menorQue . F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (33) DECLARACION -> Let Mut Id dosPuntos VEC menorQue . StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (34) DECLARACION -> Let Mut Id dosPuntos VEC menorQue . Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (35) DECLARACION -> Let Mut Id dosPuntos VEC menorQue . Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (36) DECLARACION -> Let Mut Id dosPuntos VEC menorQue . CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (37) DECLARACION -> Let Mut Id dosPuntos VEC menorQue . I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (38) DECLARACION -> Let Mut Id dosPuntos VEC menorQue . F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (39) DECLARACION -> Let Mut Id dosPuntos VEC menorQue . StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (40) DECLARACION -> Let Mut Id dosPuntos VEC menorQue . Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (41) DECLARACION -> Let Mut Id dosPuntos VEC menorQue . Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa
    (42) DECLARACION -> Let Mut Id dosPuntos VEC menorQue . CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    I64             shift and go to state 160
    F64             shift and go to state 161
    StrA            shift and go to state 162
    Str             shift and go to state 163
    Bool            shift and go to state 164
    CharAux         shift and go to state 165


state 132

    (81) EXPRESION -> Id CorA EXPRESION CorC .

    ptComa          reduce using rule 81 (EXPRESION -> Id CorA EXPRESION CorC .)
    mas             reduce using rule 81 (EXPRESION -> Id CorA EXPRESION CorC .)
    menos           reduce using rule 81 (EXPRESION -> Id CorA EXPRESION CorC .)
    por             reduce using rule 81 (EXPRESION -> Id CorA EXPRESION CorC .)
    dividido        reduce using rule 81 (EXPRESION -> Id CorA EXPRESION CorC .)
    modulo          reduce using rule 81 (EXPRESION -> Id CorA EXPRESION CorC .)
    menorQue        reduce using rule 81 (EXPRESION -> Id CorA EXPRESION CorC .)
    mayorQue        reduce using rule 81 (EXPRESION -> Id CorA EXPRESION CorC .)
    menorIgual      reduce using rule 81 (EXPRESION -> Id CorA EXPRESION CorC .)
    mayorIgual      reduce using rule 81 (EXPRESION -> Id CorA EXPRESION CorC .)
    dobleIgual      reduce using rule 81 (EXPRESION -> Id CorA EXPRESION CorC .)
    diferenteQue    reduce using rule 81 (EXPRESION -> Id CorA EXPRESION CorC .)
    And             reduce using rule 81 (EXPRESION -> Id CorA EXPRESION CorC .)
    Or              reduce using rule 81 (EXPRESION -> Id CorA EXPRESION CorC .)
    AS              reduce using rule 81 (EXPRESION -> Id CorA EXPRESION CorC .)
    CorC            reduce using rule 81 (EXPRESION -> Id CorA EXPRESION CorC .)
    ParC            reduce using rule 81 (EXPRESION -> Id CorA EXPRESION CorC .)
    Coma            reduce using rule 81 (EXPRESION -> Id CorA EXPRESION CorC .)


state 133

    (60) EXPRESION -> I64 dosPuntos dosPuntos Powi . ParA EXPRESION Coma EXPRESION ParC

    ParA            shift and go to state 166


state 134

    (61) EXPRESION -> F64 dosPuntos dosPuntos Powf . ParA EXPRESION Coma EXPRESION ParC

    ParA            shift and go to state 167


state 135

    (73) EXPRESION -> vec not CorA COMASEX . CorC
    (51) COMASEX -> COMASEX . Coma EXPRESION

    CorC            shift and go to state 168
    Coma            shift and go to state 169


state 136

    (74) EXPRESION -> vec not CorA EXPRESION . ptComa EXPRESION CorC
    (52) COMASEX -> EXPRESION .
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    ptComa          shift and go to state 170
    CorC            reduce using rule 52 (COMASEX -> EXPRESION .)
    Coma            reduce using rule 52 (COMASEX -> EXPRESION .)
    mas             shift and go to state 49
    menos           shift and go to state 50
    por             shift and go to state 51
    dividido        shift and go to state 52
    modulo          shift and go to state 53
    menorQue        shift and go to state 54
    mayorQue        shift and go to state 55
    menorIgual      shift and go to state 56
    mayorIgual      shift and go to state 57
    dobleIgual      shift and go to state 58
    diferenteQue    shift and go to state 59
    And             shift and go to state 60
    Or              shift and go to state 61
    AS              shift and go to state 62


state 137

    (45) ASIGNACION -> Id CorA EXPRESION CorC igual EXPRESION . ptComa
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    ptComa          shift and go to state 171
    mas             shift and go to state 49
    menos           shift and go to state 50
    por             shift and go to state 51
    dividido        shift and go to state 52
    modulo          shift and go to state 53
    menorQue        shift and go to state 54
    mayorQue        shift and go to state 55
    menorIgual      shift and go to state 56
    mayorIgual      shift and go to state 57
    dobleIgual      shift and go to state 58
    diferenteQue    shift and go to state 59
    And             shift and go to state 60
    Or              shift and go to state 61
    AS              shift and go to state 62


state 138

    (47) PUSH -> Id punto Push ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 172


state 139

    (49) IMPRIMIR -> PrintLn not ParA String ParC ptComa .

    Let             reduce using rule 49 (IMPRIMIR -> PrintLn not ParA String ParC ptComa .)
    Id              reduce using rule 49 (IMPRIMIR -> PrintLn not ParA String ParC ptComa .)
    PrintLn         reduce using rule 49 (IMPRIMIR -> PrintLn not ParA String ParC ptComa .)
    $end            reduce using rule 49 (IMPRIMIR -> PrintLn not ParA String ParC ptComa .)


state 140

    (50) IMPRIMIR -> PrintLn not ParA String Coma COMASEX . ParC ptComa
    (51) COMASEX -> COMASEX . Coma EXPRESION

    ParC            shift and go to state 173
    Coma            shift and go to state 169


state 141

    (52) COMASEX -> EXPRESION .
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    ParC            reduce using rule 52 (COMASEX -> EXPRESION .)
    Coma            reduce using rule 52 (COMASEX -> EXPRESION .)
    mas             shift and go to state 49
    menos           shift and go to state 50
    por             shift and go to state 51
    dividido        shift and go to state 52
    modulo          shift and go to state 53
    menorQue        shift and go to state 54
    mayorQue        shift and go to state 55
    menorIgual      shift and go to state 56
    mayorIgual      shift and go to state 57
    dobleIgual      shift and go to state 58
    diferenteQue    shift and go to state 59
    And             shift and go to state 60
    Or              shift and go to state 61
    AS              shift and go to state 62


state 142

    (6) DECLARACION -> Let Id dosPuntos I64 igual EXPRESION ptComa .

    Let             reduce using rule 6 (DECLARACION -> Let Id dosPuntos I64 igual EXPRESION ptComa .)
    Id              reduce using rule 6 (DECLARACION -> Let Id dosPuntos I64 igual EXPRESION ptComa .)
    PrintLn         reduce using rule 6 (DECLARACION -> Let Id dosPuntos I64 igual EXPRESION ptComa .)
    $end            reduce using rule 6 (DECLARACION -> Let Id dosPuntos I64 igual EXPRESION ptComa .)


state 143

    (7) DECLARACION -> Let Id dosPuntos F64 igual EXPRESION ptComa .

    Let             reduce using rule 7 (DECLARACION -> Let Id dosPuntos F64 igual EXPRESION ptComa .)
    Id              reduce using rule 7 (DECLARACION -> Let Id dosPuntos F64 igual EXPRESION ptComa .)
    PrintLn         reduce using rule 7 (DECLARACION -> Let Id dosPuntos F64 igual EXPRESION ptComa .)
    $end            reduce using rule 7 (DECLARACION -> Let Id dosPuntos F64 igual EXPRESION ptComa .)


state 144

    (8) DECLARACION -> Let Id dosPuntos StrA igual EXPRESION ptComa .

    Let             reduce using rule 8 (DECLARACION -> Let Id dosPuntos StrA igual EXPRESION ptComa .)
    Id              reduce using rule 8 (DECLARACION -> Let Id dosPuntos StrA igual EXPRESION ptComa .)
    PrintLn         reduce using rule 8 (DECLARACION -> Let Id dosPuntos StrA igual EXPRESION ptComa .)
    $end            reduce using rule 8 (DECLARACION -> Let Id dosPuntos StrA igual EXPRESION ptComa .)


state 145

    (9) DECLARACION -> Let Id dosPuntos Str igual EXPRESION ptComa .

    Let             reduce using rule 9 (DECLARACION -> Let Id dosPuntos Str igual EXPRESION ptComa .)
    Id              reduce using rule 9 (DECLARACION -> Let Id dosPuntos Str igual EXPRESION ptComa .)
    PrintLn         reduce using rule 9 (DECLARACION -> Let Id dosPuntos Str igual EXPRESION ptComa .)
    $end            reduce using rule 9 (DECLARACION -> Let Id dosPuntos Str igual EXPRESION ptComa .)


state 146

    (10) DECLARACION -> Let Id dosPuntos Bool igual EXPRESION ptComa .

    Let             reduce using rule 10 (DECLARACION -> Let Id dosPuntos Bool igual EXPRESION ptComa .)
    Id              reduce using rule 10 (DECLARACION -> Let Id dosPuntos Bool igual EXPRESION ptComa .)
    PrintLn         reduce using rule 10 (DECLARACION -> Let Id dosPuntos Bool igual EXPRESION ptComa .)
    $end            reduce using rule 10 (DECLARACION -> Let Id dosPuntos Bool igual EXPRESION ptComa .)


state 147

    (11) DECLARACION -> Let Id dosPuntos CharAux igual EXPRESION ptComa .

    Let             reduce using rule 11 (DECLARACION -> Let Id dosPuntos CharAux igual EXPRESION ptComa .)
    Id              reduce using rule 11 (DECLARACION -> Let Id dosPuntos CharAux igual EXPRESION ptComa .)
    PrintLn         reduce using rule 11 (DECLARACION -> Let Id dosPuntos CharAux igual EXPRESION ptComa .)
    $end            reduce using rule 11 (DECLARACION -> Let Id dosPuntos CharAux igual EXPRESION ptComa .)


state 148

    (19) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue . igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (25) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue . igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 174


state 149

    (20) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue . igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (26) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue . igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 175


state 150

    (21) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue . igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (27) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue . igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 176


state 151

    (22) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue . igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (28) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue . igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 177


state 152

    (23) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue . igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (29) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue . igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 178


state 153

    (24) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue . igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (30) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue . igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 179


state 154

    (13) DECLARACION -> Let Mut Id dosPuntos I64 igual EXPRESION . ptComa
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    ptComa          shift and go to state 180
    mas             shift and go to state 49
    menos           shift and go to state 50
    por             shift and go to state 51
    dividido        shift and go to state 52
    modulo          shift and go to state 53
    menorQue        shift and go to state 54
    mayorQue        shift and go to state 55
    menorIgual      shift and go to state 56
    mayorIgual      shift and go to state 57
    dobleIgual      shift and go to state 58
    diferenteQue    shift and go to state 59
    And             shift and go to state 60
    Or              shift and go to state 61
    AS              shift and go to state 62


state 155

    (14) DECLARACION -> Let Mut Id dosPuntos F64 igual EXPRESION . ptComa
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    ptComa          shift and go to state 181
    mas             shift and go to state 49
    menos           shift and go to state 50
    por             shift and go to state 51
    dividido        shift and go to state 52
    modulo          shift and go to state 53
    menorQue        shift and go to state 54
    mayorQue        shift and go to state 55
    menorIgual      shift and go to state 56
    mayorIgual      shift and go to state 57
    dobleIgual      shift and go to state 58
    diferenteQue    shift and go to state 59
    And             shift and go to state 60
    Or              shift and go to state 61
    AS              shift and go to state 62


state 156

    (15) DECLARACION -> Let Mut Id dosPuntos StrA igual EXPRESION . ptComa
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    ptComa          shift and go to state 182
    mas             shift and go to state 49
    menos           shift and go to state 50
    por             shift and go to state 51
    dividido        shift and go to state 52
    modulo          shift and go to state 53
    menorQue        shift and go to state 54
    mayorQue        shift and go to state 55
    menorIgual      shift and go to state 56
    mayorIgual      shift and go to state 57
    dobleIgual      shift and go to state 58
    diferenteQue    shift and go to state 59
    And             shift and go to state 60
    Or              shift and go to state 61
    AS              shift and go to state 62


state 157

    (16) DECLARACION -> Let Mut Id dosPuntos Str igual EXPRESION . ptComa
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    ptComa          shift and go to state 183
    mas             shift and go to state 49
    menos           shift and go to state 50
    por             shift and go to state 51
    dividido        shift and go to state 52
    modulo          shift and go to state 53
    menorQue        shift and go to state 54
    mayorQue        shift and go to state 55
    menorIgual      shift and go to state 56
    mayorIgual      shift and go to state 57
    dobleIgual      shift and go to state 58
    diferenteQue    shift and go to state 59
    And             shift and go to state 60
    Or              shift and go to state 61
    AS              shift and go to state 62


state 158

    (17) DECLARACION -> Let Mut Id dosPuntos Bool igual EXPRESION . ptComa
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    ptComa          shift and go to state 184
    mas             shift and go to state 49
    menos           shift and go to state 50
    por             shift and go to state 51
    dividido        shift and go to state 52
    modulo          shift and go to state 53
    menorQue        shift and go to state 54
    mayorQue        shift and go to state 55
    menorIgual      shift and go to state 56
    mayorIgual      shift and go to state 57
    dobleIgual      shift and go to state 58
    diferenteQue    shift and go to state 59
    And             shift and go to state 60
    Or              shift and go to state 61
    AS              shift and go to state 62


state 159

    (18) DECLARACION -> Let Mut Id dosPuntos CharAux igual EXPRESION . ptComa
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    ptComa          shift and go to state 185
    mas             shift and go to state 49
    menos           shift and go to state 50
    por             shift and go to state 51
    dividido        shift and go to state 52
    modulo          shift and go to state 53
    menorQue        shift and go to state 54
    mayorQue        shift and go to state 55
    menorIgual      shift and go to state 56
    mayorIgual      shift and go to state 57
    dobleIgual      shift and go to state 58
    diferenteQue    shift and go to state 59
    And             shift and go to state 60
    Or              shift and go to state 61
    AS              shift and go to state 62


state 160

    (31) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 . mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (37) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 . mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    mayorQue        shift and go to state 186


state 161

    (32) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 . mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (38) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 . mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    mayorQue        shift and go to state 187


state 162

    (33) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA . mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (39) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA . mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    mayorQue        shift and go to state 188


state 163

    (34) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str . mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (40) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str . mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    mayorQue        shift and go to state 189


state 164

    (35) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool . mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (41) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool . mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    mayorQue        shift and go to state 190


state 165

    (36) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux . mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (42) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux . mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    mayorQue        shift and go to state 191


state 166

    (60) EXPRESION -> I64 dosPuntos dosPuntos Powi ParA . EXPRESION Coma EXPRESION ParC
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 192

state 167

    (61) EXPRESION -> F64 dosPuntos dosPuntos Powf ParA . EXPRESION Coma EXPRESION ParC
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 193

state 168

    (73) EXPRESION -> vec not CorA COMASEX CorC .

    ptComa          reduce using rule 73 (EXPRESION -> vec not CorA COMASEX CorC .)
    mas             reduce using rule 73 (EXPRESION -> vec not CorA COMASEX CorC .)
    menos           reduce using rule 73 (EXPRESION -> vec not CorA COMASEX CorC .)
    por             reduce using rule 73 (EXPRESION -> vec not CorA COMASEX CorC .)
    dividido        reduce using rule 73 (EXPRESION -> vec not CorA COMASEX CorC .)
    modulo          reduce using rule 73 (EXPRESION -> vec not CorA COMASEX CorC .)
    menorQue        reduce using rule 73 (EXPRESION -> vec not CorA COMASEX CorC .)
    mayorQue        reduce using rule 73 (EXPRESION -> vec not CorA COMASEX CorC .)
    menorIgual      reduce using rule 73 (EXPRESION -> vec not CorA COMASEX CorC .)
    mayorIgual      reduce using rule 73 (EXPRESION -> vec not CorA COMASEX CorC .)
    dobleIgual      reduce using rule 73 (EXPRESION -> vec not CorA COMASEX CorC .)
    diferenteQue    reduce using rule 73 (EXPRESION -> vec not CorA COMASEX CorC .)
    And             reduce using rule 73 (EXPRESION -> vec not CorA COMASEX CorC .)
    Or              reduce using rule 73 (EXPRESION -> vec not CorA COMASEX CorC .)
    AS              reduce using rule 73 (EXPRESION -> vec not CorA COMASEX CorC .)
    CorC            reduce using rule 73 (EXPRESION -> vec not CorA COMASEX CorC .)
    ParC            reduce using rule 73 (EXPRESION -> vec not CorA COMASEX CorC .)
    Coma            reduce using rule 73 (EXPRESION -> vec not CorA COMASEX CorC .)


state 169

    (51) COMASEX -> COMASEX Coma . EXPRESION
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 194

state 170

    (74) EXPRESION -> vec not CorA EXPRESION ptComa . EXPRESION CorC
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 195

state 171

    (45) ASIGNACION -> Id CorA EXPRESION CorC igual EXPRESION ptComa .

    Let             reduce using rule 45 (ASIGNACION -> Id CorA EXPRESION CorC igual EXPRESION ptComa .)
    Id              reduce using rule 45 (ASIGNACION -> Id CorA EXPRESION CorC igual EXPRESION ptComa .)
    PrintLn         reduce using rule 45 (ASIGNACION -> Id CorA EXPRESION CorC igual EXPRESION ptComa .)
    $end            reduce using rule 45 (ASIGNACION -> Id CorA EXPRESION CorC igual EXPRESION ptComa .)


state 172

    (47) PUSH -> Id punto Push ParA EXPRESION ParC ptComa .

    Let             reduce using rule 47 (PUSH -> Id punto Push ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 47 (PUSH -> Id punto Push ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 47 (PUSH -> Id punto Push ParA EXPRESION ParC ptComa .)
    $end            reduce using rule 47 (PUSH -> Id punto Push ParA EXPRESION ParC ptComa .)


state 173

    (50) IMPRIMIR -> PrintLn not ParA String Coma COMASEX ParC . ptComa

    ptComa          shift and go to state 196


state 174

    (19) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual . VEC dosPuntos dosPuntos New ParA ParC ptComa
    (25) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual . VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    VEC             shift and go to state 197


state 175

    (20) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual . VEC dosPuntos dosPuntos New ParA ParC ptComa
    (26) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual . VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    VEC             shift and go to state 198


state 176

    (21) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual . VEC dosPuntos dosPuntos New ParA ParC ptComa
    (27) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual . VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    VEC             shift and go to state 199


state 177

    (22) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual . VEC dosPuntos dosPuntos New ParA ParC ptComa
    (28) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual . VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    VEC             shift and go to state 200


state 178

    (23) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual . VEC dosPuntos dosPuntos New ParA ParC ptComa
    (29) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual . VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    VEC             shift and go to state 201


state 179

    (24) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual . VEC dosPuntos dosPuntos New ParA ParC ptComa
    (30) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual . VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    VEC             shift and go to state 202


state 180

    (13) DECLARACION -> Let Mut Id dosPuntos I64 igual EXPRESION ptComa .

    Let             reduce using rule 13 (DECLARACION -> Let Mut Id dosPuntos I64 igual EXPRESION ptComa .)
    Id              reduce using rule 13 (DECLARACION -> Let Mut Id dosPuntos I64 igual EXPRESION ptComa .)
    PrintLn         reduce using rule 13 (DECLARACION -> Let Mut Id dosPuntos I64 igual EXPRESION ptComa .)
    $end            reduce using rule 13 (DECLARACION -> Let Mut Id dosPuntos I64 igual EXPRESION ptComa .)


state 181

    (14) DECLARACION -> Let Mut Id dosPuntos F64 igual EXPRESION ptComa .

    Let             reduce using rule 14 (DECLARACION -> Let Mut Id dosPuntos F64 igual EXPRESION ptComa .)
    Id              reduce using rule 14 (DECLARACION -> Let Mut Id dosPuntos F64 igual EXPRESION ptComa .)
    PrintLn         reduce using rule 14 (DECLARACION -> Let Mut Id dosPuntos F64 igual EXPRESION ptComa .)
    $end            reduce using rule 14 (DECLARACION -> Let Mut Id dosPuntos F64 igual EXPRESION ptComa .)


state 182

    (15) DECLARACION -> Let Mut Id dosPuntos StrA igual EXPRESION ptComa .

    Let             reduce using rule 15 (DECLARACION -> Let Mut Id dosPuntos StrA igual EXPRESION ptComa .)
    Id              reduce using rule 15 (DECLARACION -> Let Mut Id dosPuntos StrA igual EXPRESION ptComa .)
    PrintLn         reduce using rule 15 (DECLARACION -> Let Mut Id dosPuntos StrA igual EXPRESION ptComa .)
    $end            reduce using rule 15 (DECLARACION -> Let Mut Id dosPuntos StrA igual EXPRESION ptComa .)


state 183

    (16) DECLARACION -> Let Mut Id dosPuntos Str igual EXPRESION ptComa .

    Let             reduce using rule 16 (DECLARACION -> Let Mut Id dosPuntos Str igual EXPRESION ptComa .)
    Id              reduce using rule 16 (DECLARACION -> Let Mut Id dosPuntos Str igual EXPRESION ptComa .)
    PrintLn         reduce using rule 16 (DECLARACION -> Let Mut Id dosPuntos Str igual EXPRESION ptComa .)
    $end            reduce using rule 16 (DECLARACION -> Let Mut Id dosPuntos Str igual EXPRESION ptComa .)


state 184

    (17) DECLARACION -> Let Mut Id dosPuntos Bool igual EXPRESION ptComa .

    Let             reduce using rule 17 (DECLARACION -> Let Mut Id dosPuntos Bool igual EXPRESION ptComa .)
    Id              reduce using rule 17 (DECLARACION -> Let Mut Id dosPuntos Bool igual EXPRESION ptComa .)
    PrintLn         reduce using rule 17 (DECLARACION -> Let Mut Id dosPuntos Bool igual EXPRESION ptComa .)
    $end            reduce using rule 17 (DECLARACION -> Let Mut Id dosPuntos Bool igual EXPRESION ptComa .)


state 185

    (18) DECLARACION -> Let Mut Id dosPuntos CharAux igual EXPRESION ptComa .

    Let             reduce using rule 18 (DECLARACION -> Let Mut Id dosPuntos CharAux igual EXPRESION ptComa .)
    Id              reduce using rule 18 (DECLARACION -> Let Mut Id dosPuntos CharAux igual EXPRESION ptComa .)
    PrintLn         reduce using rule 18 (DECLARACION -> Let Mut Id dosPuntos CharAux igual EXPRESION ptComa .)
    $end            reduce using rule 18 (DECLARACION -> Let Mut Id dosPuntos CharAux igual EXPRESION ptComa .)


state 186

    (31) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue . igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (37) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue . igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 203


state 187

    (32) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue . igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (38) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue . igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 204


state 188

    (33) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue . igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (39) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue . igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 205


state 189

    (34) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue . igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (40) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue . igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 206


state 190

    (35) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue . igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (41) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue . igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 207


state 191

    (36) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue . igual VEC dosPuntos dosPuntos New ParA ParC ptComa
    (42) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue . igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    igual           shift and go to state 208


state 192

    (60) EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION . Coma EXPRESION ParC
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    Coma            shift and go to state 209
    mas             shift and go to state 49
    menos           shift and go to state 50
    por             shift and go to state 51
    dividido        shift and go to state 52
    modulo          shift and go to state 53
    menorQue        shift and go to state 54
    mayorQue        shift and go to state 55
    menorIgual      shift and go to state 56
    mayorIgual      shift and go to state 57
    dobleIgual      shift and go to state 58
    diferenteQue    shift and go to state 59
    And             shift and go to state 60
    Or              shift and go to state 61
    AS              shift and go to state 62


state 193

    (61) EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION . Coma EXPRESION ParC
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    Coma            shift and go to state 210
    mas             shift and go to state 49
    menos           shift and go to state 50
    por             shift and go to state 51
    dividido        shift and go to state 52
    modulo          shift and go to state 53
    menorQue        shift and go to state 54
    mayorQue        shift and go to state 55
    menorIgual      shift and go to state 56
    mayorIgual      shift and go to state 57
    dobleIgual      shift and go to state 58
    diferenteQue    shift and go to state 59
    And             shift and go to state 60
    Or              shift and go to state 61
    AS              shift and go to state 62


state 194

    (51) COMASEX -> COMASEX Coma EXPRESION .
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    CorC            reduce using rule 51 (COMASEX -> COMASEX Coma EXPRESION .)
    Coma            reduce using rule 51 (COMASEX -> COMASEX Coma EXPRESION .)
    ParC            reduce using rule 51 (COMASEX -> COMASEX Coma EXPRESION .)
    mas             shift and go to state 49
    menos           shift and go to state 50
    por             shift and go to state 51
    dividido        shift and go to state 52
    modulo          shift and go to state 53
    menorQue        shift and go to state 54
    mayorQue        shift and go to state 55
    menorIgual      shift and go to state 56
    mayorIgual      shift and go to state 57
    dobleIgual      shift and go to state 58
    diferenteQue    shift and go to state 59
    And             shift and go to state 60
    Or              shift and go to state 61
    AS              shift and go to state 62


state 195

    (74) EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION . CorC
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    CorC            shift and go to state 211
    mas             shift and go to state 49
    menos           shift and go to state 50
    por             shift and go to state 51
    dividido        shift and go to state 52
    modulo          shift and go to state 53
    menorQue        shift and go to state 54
    mayorQue        shift and go to state 55
    menorIgual      shift and go to state 56
    mayorIgual      shift and go to state 57
    dobleIgual      shift and go to state 58
    diferenteQue    shift and go to state 59
    And             shift and go to state 60
    Or              shift and go to state 61
    AS              shift and go to state 62


state 196

    (50) IMPRIMIR -> PrintLn not ParA String Coma COMASEX ParC ptComa .

    Let             reduce using rule 50 (IMPRIMIR -> PrintLn not ParA String Coma COMASEX ParC ptComa .)
    Id              reduce using rule 50 (IMPRIMIR -> PrintLn not ParA String Coma COMASEX ParC ptComa .)
    PrintLn         reduce using rule 50 (IMPRIMIR -> PrintLn not ParA String Coma COMASEX ParC ptComa .)
    $end            reduce using rule 50 (IMPRIMIR -> PrintLn not ParA String Coma COMASEX ParC ptComa .)


state 197

    (19) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC . dosPuntos dosPuntos New ParA ParC ptComa
    (25) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC . dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 212


state 198

    (20) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC . dosPuntos dosPuntos New ParA ParC ptComa
    (26) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC . dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 213


state 199

    (21) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC . dosPuntos dosPuntos New ParA ParC ptComa
    (27) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC . dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 214


state 200

    (22) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC . dosPuntos dosPuntos New ParA ParC ptComa
    (28) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC . dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 215


state 201

    (23) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC . dosPuntos dosPuntos New ParA ParC ptComa
    (29) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC . dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 216


state 202

    (24) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC . dosPuntos dosPuntos New ParA ParC ptComa
    (30) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC . dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 217


state 203

    (31) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual . VEC dosPuntos dosPuntos New ParA ParC ptComa
    (37) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual . VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    VEC             shift and go to state 218


state 204

    (32) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual . VEC dosPuntos dosPuntos New ParA ParC ptComa
    (38) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual . VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    VEC             shift and go to state 219


state 205

    (33) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual . VEC dosPuntos dosPuntos New ParA ParC ptComa
    (39) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual . VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    VEC             shift and go to state 220


state 206

    (34) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual . VEC dosPuntos dosPuntos New ParA ParC ptComa
    (40) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual . VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    VEC             shift and go to state 221


state 207

    (35) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual . VEC dosPuntos dosPuntos New ParA ParC ptComa
    (41) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual . VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    VEC             shift and go to state 222


state 208

    (36) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual . VEC dosPuntos dosPuntos New ParA ParC ptComa
    (42) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual . VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    VEC             shift and go to state 223


state 209

    (60) EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma . EXPRESION ParC
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 224

state 210

    (61) EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma . EXPRESION ParC
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 225

state 211

    (74) EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .

    ptComa          reduce using rule 74 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    mas             reduce using rule 74 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    menos           reduce using rule 74 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    por             reduce using rule 74 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    dividido        reduce using rule 74 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    modulo          reduce using rule 74 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    menorQue        reduce using rule 74 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    mayorQue        reduce using rule 74 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    menorIgual      reduce using rule 74 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    mayorIgual      reduce using rule 74 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    dobleIgual      reduce using rule 74 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    diferenteQue    reduce using rule 74 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    And             reduce using rule 74 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    Or              reduce using rule 74 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    AS              reduce using rule 74 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    CorC            reduce using rule 74 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    ParC            reduce using rule 74 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)
    Coma            reduce using rule 74 (EXPRESION -> vec not CorA EXPRESION ptComa EXPRESION CorC .)


state 212

    (19) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos . dosPuntos New ParA ParC ptComa
    (25) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos . dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 226


state 213

    (20) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos . dosPuntos New ParA ParC ptComa
    (26) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos . dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 227


state 214

    (21) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos . dosPuntos New ParA ParC ptComa
    (27) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos . dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 228


state 215

    (22) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos . dosPuntos New ParA ParC ptComa
    (28) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos . dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 229


state 216

    (23) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos . dosPuntos New ParA ParC ptComa
    (29) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos . dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 230


state 217

    (24) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos . dosPuntos New ParA ParC ptComa
    (30) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos . dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 231


state 218

    (31) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC . dosPuntos dosPuntos New ParA ParC ptComa
    (37) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC . dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 232


state 219

    (32) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC . dosPuntos dosPuntos New ParA ParC ptComa
    (38) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC . dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 233


state 220

    (33) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC . dosPuntos dosPuntos New ParA ParC ptComa
    (39) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC . dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 234


state 221

    (34) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC . dosPuntos dosPuntos New ParA ParC ptComa
    (40) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC . dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 235


state 222

    (35) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC . dosPuntos dosPuntos New ParA ParC ptComa
    (41) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC . dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 236


state 223

    (36) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC . dosPuntos dosPuntos New ParA ParC ptComa
    (42) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC . dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 237


state 224

    (60) EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION . ParC
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    ParC            shift and go to state 238
    mas             shift and go to state 49
    menos           shift and go to state 50
    por             shift and go to state 51
    dividido        shift and go to state 52
    modulo          shift and go to state 53
    menorQue        shift and go to state 54
    mayorQue        shift and go to state 55
    menorIgual      shift and go to state 56
    mayorIgual      shift and go to state 57
    dobleIgual      shift and go to state 58
    diferenteQue    shift and go to state 59
    And             shift and go to state 60
    Or              shift and go to state 61
    AS              shift and go to state 62


state 225

    (61) EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION . ParC
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    ParC            shift and go to state 239
    mas             shift and go to state 49
    menos           shift and go to state 50
    por             shift and go to state 51
    dividido        shift and go to state 52
    modulo          shift and go to state 53
    menorQue        shift and go to state 54
    mayorQue        shift and go to state 55
    menorIgual      shift and go to state 56
    mayorIgual      shift and go to state 57
    dobleIgual      shift and go to state 58
    diferenteQue    shift and go to state 59
    And             shift and go to state 60
    Or              shift and go to state 61
    AS              shift and go to state 62


state 226

    (19) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos . New ParA ParC ptComa
    (25) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos . Capacidad ParA EXPRESION ParC ptComa

    New             shift and go to state 240
    Capacidad       shift and go to state 241


state 227

    (20) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos . New ParA ParC ptComa
    (26) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos . Capacidad ParA EXPRESION ParC ptComa

    New             shift and go to state 242
    Capacidad       shift and go to state 243


state 228

    (21) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos . New ParA ParC ptComa
    (27) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos . Capacidad ParA EXPRESION ParC ptComa

    New             shift and go to state 244
    Capacidad       shift and go to state 245


state 229

    (22) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos . New ParA ParC ptComa
    (28) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos . Capacidad ParA EXPRESION ParC ptComa

    New             shift and go to state 246
    Capacidad       shift and go to state 247


state 230

    (23) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos . New ParA ParC ptComa
    (29) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos . Capacidad ParA EXPRESION ParC ptComa

    New             shift and go to state 248
    Capacidad       shift and go to state 249


state 231

    (24) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos . New ParA ParC ptComa
    (30) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos . Capacidad ParA EXPRESION ParC ptComa

    New             shift and go to state 250
    Capacidad       shift and go to state 251


state 232

    (31) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos . dosPuntos New ParA ParC ptComa
    (37) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos . dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 252


state 233

    (32) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos . dosPuntos New ParA ParC ptComa
    (38) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos . dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 253


state 234

    (33) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos . dosPuntos New ParA ParC ptComa
    (39) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos . dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 254


state 235

    (34) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos . dosPuntos New ParA ParC ptComa
    (40) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos . dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 255


state 236

    (35) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos . dosPuntos New ParA ParC ptComa
    (41) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos . dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 256


state 237

    (36) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos . dosPuntos New ParA ParC ptComa
    (42) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos . dosPuntos Capacidad ParA EXPRESION ParC ptComa

    dosPuntos       shift and go to state 257


state 238

    (60) EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .

    ptComa          reduce using rule 60 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    mas             reduce using rule 60 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    menos           reduce using rule 60 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    por             reduce using rule 60 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    dividido        reduce using rule 60 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    modulo          reduce using rule 60 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    menorQue        reduce using rule 60 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    mayorQue        reduce using rule 60 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    menorIgual      reduce using rule 60 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    mayorIgual      reduce using rule 60 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    dobleIgual      reduce using rule 60 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    diferenteQue    reduce using rule 60 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    And             reduce using rule 60 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    Or              reduce using rule 60 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    AS              reduce using rule 60 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    CorC            reduce using rule 60 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    ParC            reduce using rule 60 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    Coma            reduce using rule 60 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)


state 239

    (61) EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .

    ptComa          reduce using rule 61 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    mas             reduce using rule 61 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    menos           reduce using rule 61 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    por             reduce using rule 61 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    dividido        reduce using rule 61 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    modulo          reduce using rule 61 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    menorQue        reduce using rule 61 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    mayorQue        reduce using rule 61 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    menorIgual      reduce using rule 61 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    mayorIgual      reduce using rule 61 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    dobleIgual      reduce using rule 61 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    diferenteQue    reduce using rule 61 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    And             reduce using rule 61 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    Or              reduce using rule 61 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    AS              reduce using rule 61 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    CorC            reduce using rule 61 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    ParC            reduce using rule 61 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    Coma            reduce using rule 61 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)


state 240

    (19) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New . ParA ParC ptComa

    ParA            shift and go to state 258


state 241

    (25) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad . ParA EXPRESION ParC ptComa

    ParA            shift and go to state 259


state 242

    (20) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New . ParA ParC ptComa

    ParA            shift and go to state 260


state 243

    (26) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad . ParA EXPRESION ParC ptComa

    ParA            shift and go to state 261


state 244

    (21) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New . ParA ParC ptComa

    ParA            shift and go to state 262


state 245

    (27) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad . ParA EXPRESION ParC ptComa

    ParA            shift and go to state 263


state 246

    (22) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New . ParA ParC ptComa

    ParA            shift and go to state 264


state 247

    (28) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad . ParA EXPRESION ParC ptComa

    ParA            shift and go to state 265


state 248

    (23) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New . ParA ParC ptComa

    ParA            shift and go to state 266


state 249

    (29) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad . ParA EXPRESION ParC ptComa

    ParA            shift and go to state 267


state 250

    (24) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New . ParA ParC ptComa

    ParA            shift and go to state 268


state 251

    (30) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad . ParA EXPRESION ParC ptComa

    ParA            shift and go to state 269


state 252

    (31) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos . New ParA ParC ptComa
    (37) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos . Capacidad ParA EXPRESION ParC ptComa

    New             shift and go to state 270
    Capacidad       shift and go to state 271


state 253

    (32) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos . New ParA ParC ptComa
    (38) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos . Capacidad ParA EXPRESION ParC ptComa

    New             shift and go to state 272
    Capacidad       shift and go to state 273


state 254

    (33) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos . New ParA ParC ptComa
    (39) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos . Capacidad ParA EXPRESION ParC ptComa

    New             shift and go to state 274
    Capacidad       shift and go to state 275


state 255

    (34) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos . New ParA ParC ptComa
    (40) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos . Capacidad ParA EXPRESION ParC ptComa

    New             shift and go to state 276
    Capacidad       shift and go to state 277


state 256

    (35) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos . New ParA ParC ptComa
    (41) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos . Capacidad ParA EXPRESION ParC ptComa

    New             shift and go to state 278
    Capacidad       shift and go to state 279


state 257

    (36) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos . New ParA ParC ptComa
    (42) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos . Capacidad ParA EXPRESION ParC ptComa

    New             shift and go to state 280
    Capacidad       shift and go to state 281


state 258

    (19) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA . ParC ptComa

    ParC            shift and go to state 282


state 259

    (25) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA . EXPRESION ParC ptComa
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 283

state 260

    (20) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA . ParC ptComa

    ParC            shift and go to state 284


state 261

    (26) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA . EXPRESION ParC ptComa
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 285

state 262

    (21) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA . ParC ptComa

    ParC            shift and go to state 286


state 263

    (27) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA . EXPRESION ParC ptComa
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 287

state 264

    (22) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA . ParC ptComa

    ParC            shift and go to state 288


state 265

    (28) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA . EXPRESION ParC ptComa
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 289

state 266

    (23) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA . ParC ptComa

    ParC            shift and go to state 290


state 267

    (29) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA . EXPRESION ParC ptComa
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 291

state 268

    (24) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA . ParC ptComa

    ParC            shift and go to state 292


state 269

    (30) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA . EXPRESION ParC ptComa
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 293

state 270

    (31) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New . ParA ParC ptComa

    ParA            shift and go to state 294


state 271

    (37) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad . ParA EXPRESION ParC ptComa

    ParA            shift and go to state 295


state 272

    (32) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New . ParA ParC ptComa

    ParA            shift and go to state 296


state 273

    (38) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad . ParA EXPRESION ParC ptComa

    ParA            shift and go to state 297


state 274

    (33) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New . ParA ParC ptComa

    ParA            shift and go to state 298


state 275

    (39) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad . ParA EXPRESION ParC ptComa

    ParA            shift and go to state 299


state 276

    (34) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New . ParA ParC ptComa

    ParA            shift and go to state 300


state 277

    (40) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad . ParA EXPRESION ParC ptComa

    ParA            shift and go to state 301


state 278

    (35) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New . ParA ParC ptComa

    ParA            shift and go to state 302


state 279

    (41) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad . ParA EXPRESION ParC ptComa

    ParA            shift and go to state 303


state 280

    (36) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New . ParA ParC ptComa

    ParA            shift and go to state 304


state 281

    (42) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad . ParA EXPRESION ParC ptComa

    ParA            shift and go to state 305


state 282

    (19) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC . ptComa

    ptComa          shift and go to state 306


state 283

    (25) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION . ParC ptComa
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    ParC            shift and go to state 307
    mas             shift and go to state 49
    menos           shift and go to state 50
    por             shift and go to state 51
    dividido        shift and go to state 52
    modulo          shift and go to state 53
    menorQue        shift and go to state 54
    mayorQue        shift and go to state 55
    menorIgual      shift and go to state 56
    mayorIgual      shift and go to state 57
    dobleIgual      shift and go to state 58
    diferenteQue    shift and go to state 59
    And             shift and go to state 60
    Or              shift and go to state 61
    AS              shift and go to state 62


state 284

    (20) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC . ptComa

    ptComa          shift and go to state 308


state 285

    (26) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION . ParC ptComa
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    ParC            shift and go to state 309
    mas             shift and go to state 49
    menos           shift and go to state 50
    por             shift and go to state 51
    dividido        shift and go to state 52
    modulo          shift and go to state 53
    menorQue        shift and go to state 54
    mayorQue        shift and go to state 55
    menorIgual      shift and go to state 56
    mayorIgual      shift and go to state 57
    dobleIgual      shift and go to state 58
    diferenteQue    shift and go to state 59
    And             shift and go to state 60
    Or              shift and go to state 61
    AS              shift and go to state 62


state 286

    (21) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC . ptComa

    ptComa          shift and go to state 310


state 287

    (27) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION . ParC ptComa
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    ParC            shift and go to state 311
    mas             shift and go to state 49
    menos           shift and go to state 50
    por             shift and go to state 51
    dividido        shift and go to state 52
    modulo          shift and go to state 53
    menorQue        shift and go to state 54
    mayorQue        shift and go to state 55
    menorIgual      shift and go to state 56
    mayorIgual      shift and go to state 57
    dobleIgual      shift and go to state 58
    diferenteQue    shift and go to state 59
    And             shift and go to state 60
    Or              shift and go to state 61
    AS              shift and go to state 62


state 288

    (22) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC . ptComa

    ptComa          shift and go to state 312


state 289

    (28) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION . ParC ptComa
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    ParC            shift and go to state 313
    mas             shift and go to state 49
    menos           shift and go to state 50
    por             shift and go to state 51
    dividido        shift and go to state 52
    modulo          shift and go to state 53
    menorQue        shift and go to state 54
    mayorQue        shift and go to state 55
    menorIgual      shift and go to state 56
    mayorIgual      shift and go to state 57
    dobleIgual      shift and go to state 58
    diferenteQue    shift and go to state 59
    And             shift and go to state 60
    Or              shift and go to state 61
    AS              shift and go to state 62


state 290

    (23) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC . ptComa

    ptComa          shift and go to state 314


state 291

    (29) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION . ParC ptComa
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    ParC            shift and go to state 315
    mas             shift and go to state 49
    menos           shift and go to state 50
    por             shift and go to state 51
    dividido        shift and go to state 52
    modulo          shift and go to state 53
    menorQue        shift and go to state 54
    mayorQue        shift and go to state 55
    menorIgual      shift and go to state 56
    mayorIgual      shift and go to state 57
    dobleIgual      shift and go to state 58
    diferenteQue    shift and go to state 59
    And             shift and go to state 60
    Or              shift and go to state 61
    AS              shift and go to state 62


state 292

    (24) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC . ptComa

    ptComa          shift and go to state 316


state 293

    (30) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION . ParC ptComa
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    ParC            shift and go to state 317
    mas             shift and go to state 49
    menos           shift and go to state 50
    por             shift and go to state 51
    dividido        shift and go to state 52
    modulo          shift and go to state 53
    menorQue        shift and go to state 54
    mayorQue        shift and go to state 55
    menorIgual      shift and go to state 56
    mayorIgual      shift and go to state 57
    dobleIgual      shift and go to state 58
    diferenteQue    shift and go to state 59
    And             shift and go to state 60
    Or              shift and go to state 61
    AS              shift and go to state 62


state 294

    (31) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA . ParC ptComa

    ParC            shift and go to state 318


state 295

    (37) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA . EXPRESION ParC ptComa
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 319

state 296

    (32) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA . ParC ptComa

    ParC            shift and go to state 320


state 297

    (38) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA . EXPRESION ParC ptComa
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 321

state 298

    (33) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA . ParC ptComa

    ParC            shift and go to state 322


state 299

    (39) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA . EXPRESION ParC ptComa
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 323

state 300

    (34) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA . ParC ptComa

    ParC            shift and go to state 324


state 301

    (40) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA . EXPRESION ParC ptComa
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 325

state 302

    (35) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA . ParC ptComa

    ParC            shift and go to state 326


state 303

    (41) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA . EXPRESION ParC ptComa
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 327

state 304

    (36) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA . ParC ptComa

    ParC            shift and go to state 328


state 305

    (42) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA . EXPRESION ParC ptComa
    (53) EXPRESION -> . EXPRESION mas EXPRESION
    (54) EXPRESION -> . EXPRESION menos EXPRESION
    (55) EXPRESION -> . EXPRESION por EXPRESION
    (56) EXPRESION -> . EXPRESION dividido EXPRESION
    (57) EXPRESION -> . EXPRESION modulo EXPRESION
    (58) EXPRESION -> . menos EXPRESION
    (59) EXPRESION -> . ParA EXPRESION ParC
    (60) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (61) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (62) EXPRESION -> . EXPRESION menorQue EXPRESION
    (63) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (64) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (65) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (66) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (67) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (68) EXPRESION -> . EXPRESION And EXPRESION
    (69) EXPRESION -> . EXPRESION Or EXPRESION
    (70) EXPRESION -> . not EXPRESION
    (71) EXPRESION -> . EXPRESION AS I64
    (72) EXPRESION -> . EXPRESION AS F64
    (73) EXPRESION -> . vec not CorA COMASEX CorC
    (74) EXPRESION -> . vec not CorA EXPRESION ptComa EXPRESION CorC
    (75) EXPRESION -> . Float
    (76) EXPRESION -> . Entero
    (77) EXPRESION -> . Booleano
    (78) EXPRESION -> . String
    (79) EXPRESION -> . Char
    (80) EXPRESION -> . Id
    (81) EXPRESION -> . Id CorA EXPRESION CorC

    menos           shift and go to state 23
    ParA            shift and go to state 24
    I64             shift and go to state 25
    F64             shift and go to state 26
    not             shift and go to state 27
    vec             shift and go to state 28
    Float           shift and go to state 29
    Entero          shift and go to state 30
    Booleano        shift and go to state 31
    String          shift and go to state 32
    Char            shift and go to state 33
    Id              shift and go to state 21

    EXPRESION                      shift and go to state 329

state 306

    (19) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .

    Let             reduce using rule 19 (DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Id              reduce using rule 19 (DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    PrintLn         reduce using rule 19 (DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    $end            reduce using rule 19 (DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)


state 307

    (25) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 330


state 308

    (20) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .

    Let             reduce using rule 20 (DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Id              reduce using rule 20 (DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    PrintLn         reduce using rule 20 (DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    $end            reduce using rule 20 (DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)


state 309

    (26) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 331


state 310

    (21) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .

    Let             reduce using rule 21 (DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Id              reduce using rule 21 (DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    PrintLn         reduce using rule 21 (DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    $end            reduce using rule 21 (DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)


state 311

    (27) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 332


state 312

    (22) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .

    Let             reduce using rule 22 (DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Id              reduce using rule 22 (DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    PrintLn         reduce using rule 22 (DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    $end            reduce using rule 22 (DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)


state 313

    (28) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 333


state 314

    (23) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .

    Let             reduce using rule 23 (DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Id              reduce using rule 23 (DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    PrintLn         reduce using rule 23 (DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    $end            reduce using rule 23 (DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)


state 315

    (29) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 334


state 316

    (24) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .

    Let             reduce using rule 24 (DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Id              reduce using rule 24 (DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    PrintLn         reduce using rule 24 (DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    $end            reduce using rule 24 (DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)


state 317

    (30) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 335


state 318

    (31) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC . ptComa

    ptComa          shift and go to state 336


state 319

    (37) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION . ParC ptComa
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    ParC            shift and go to state 337
    mas             shift and go to state 49
    menos           shift and go to state 50
    por             shift and go to state 51
    dividido        shift and go to state 52
    modulo          shift and go to state 53
    menorQue        shift and go to state 54
    mayorQue        shift and go to state 55
    menorIgual      shift and go to state 56
    mayorIgual      shift and go to state 57
    dobleIgual      shift and go to state 58
    diferenteQue    shift and go to state 59
    And             shift and go to state 60
    Or              shift and go to state 61
    AS              shift and go to state 62


state 320

    (32) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC . ptComa

    ptComa          shift and go to state 338


state 321

    (38) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION . ParC ptComa
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    ParC            shift and go to state 339
    mas             shift and go to state 49
    menos           shift and go to state 50
    por             shift and go to state 51
    dividido        shift and go to state 52
    modulo          shift and go to state 53
    menorQue        shift and go to state 54
    mayorQue        shift and go to state 55
    menorIgual      shift and go to state 56
    mayorIgual      shift and go to state 57
    dobleIgual      shift and go to state 58
    diferenteQue    shift and go to state 59
    And             shift and go to state 60
    Or              shift and go to state 61
    AS              shift and go to state 62


state 322

    (33) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC . ptComa

    ptComa          shift and go to state 340


state 323

    (39) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION . ParC ptComa
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    ParC            shift and go to state 341
    mas             shift and go to state 49
    menos           shift and go to state 50
    por             shift and go to state 51
    dividido        shift and go to state 52
    modulo          shift and go to state 53
    menorQue        shift and go to state 54
    mayorQue        shift and go to state 55
    menorIgual      shift and go to state 56
    mayorIgual      shift and go to state 57
    dobleIgual      shift and go to state 58
    diferenteQue    shift and go to state 59
    And             shift and go to state 60
    Or              shift and go to state 61
    AS              shift and go to state 62


state 324

    (34) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC . ptComa

    ptComa          shift and go to state 342


state 325

    (40) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION . ParC ptComa
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    ParC            shift and go to state 343
    mas             shift and go to state 49
    menos           shift and go to state 50
    por             shift and go to state 51
    dividido        shift and go to state 52
    modulo          shift and go to state 53
    menorQue        shift and go to state 54
    mayorQue        shift and go to state 55
    menorIgual      shift and go to state 56
    mayorIgual      shift and go to state 57
    dobleIgual      shift and go to state 58
    diferenteQue    shift and go to state 59
    And             shift and go to state 60
    Or              shift and go to state 61
    AS              shift and go to state 62


state 326

    (35) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC . ptComa

    ptComa          shift and go to state 344


state 327

    (41) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION . ParC ptComa
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    ParC            shift and go to state 345
    mas             shift and go to state 49
    menos           shift and go to state 50
    por             shift and go to state 51
    dividido        shift and go to state 52
    modulo          shift and go to state 53
    menorQue        shift and go to state 54
    mayorQue        shift and go to state 55
    menorIgual      shift and go to state 56
    mayorIgual      shift and go to state 57
    dobleIgual      shift and go to state 58
    diferenteQue    shift and go to state 59
    And             shift and go to state 60
    Or              shift and go to state 61
    AS              shift and go to state 62


state 328

    (36) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC . ptComa

    ptComa          shift and go to state 346


state 329

    (42) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION . ParC ptComa
    (53) EXPRESION -> EXPRESION . mas EXPRESION
    (54) EXPRESION -> EXPRESION . menos EXPRESION
    (55) EXPRESION -> EXPRESION . por EXPRESION
    (56) EXPRESION -> EXPRESION . dividido EXPRESION
    (57) EXPRESION -> EXPRESION . modulo EXPRESION
    (62) EXPRESION -> EXPRESION . menorQue EXPRESION
    (63) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (64) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (65) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (66) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (67) EXPRESION -> EXPRESION . diferenteQue EXPRESION
    (68) EXPRESION -> EXPRESION . And EXPRESION
    (69) EXPRESION -> EXPRESION . Or EXPRESION
    (71) EXPRESION -> EXPRESION . AS I64
    (72) EXPRESION -> EXPRESION . AS F64

    ParC            shift and go to state 347
    mas             shift and go to state 49
    menos           shift and go to state 50
    por             shift and go to state 51
    dividido        shift and go to state 52
    modulo          shift and go to state 53
    menorQue        shift and go to state 54
    mayorQue        shift and go to state 55
    menorIgual      shift and go to state 56
    mayorIgual      shift and go to state 57
    dobleIgual      shift and go to state 58
    diferenteQue    shift and go to state 59
    And             shift and go to state 60
    Or              shift and go to state 61
    AS              shift and go to state 62


state 330

    (25) DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .

    Let             reduce using rule 25 (DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 25 (DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 25 (DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    $end            reduce using rule 25 (DECLARACION -> Let Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)


state 331

    (26) DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .

    Let             reduce using rule 26 (DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 26 (DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 26 (DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    $end            reduce using rule 26 (DECLARACION -> Let Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)


state 332

    (27) DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .

    Let             reduce using rule 27 (DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 27 (DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 27 (DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    $end            reduce using rule 27 (DECLARACION -> Let Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)


state 333

    (28) DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .

    Let             reduce using rule 28 (DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 28 (DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 28 (DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    $end            reduce using rule 28 (DECLARACION -> Let Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)


state 334

    (29) DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .

    Let             reduce using rule 29 (DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 29 (DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 29 (DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    $end            reduce using rule 29 (DECLARACION -> Let Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)


state 335

    (30) DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .

    Let             reduce using rule 30 (DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 30 (DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 30 (DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    $end            reduce using rule 30 (DECLARACION -> Let Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)


state 336

    (31) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .

    Let             reduce using rule 31 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Id              reduce using rule 31 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    PrintLn         reduce using rule 31 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    $end            reduce using rule 31 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)


state 337

    (37) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 348


state 338

    (32) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .

    Let             reduce using rule 32 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Id              reduce using rule 32 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    PrintLn         reduce using rule 32 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    $end            reduce using rule 32 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)


state 339

    (38) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 349


state 340

    (33) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .

    Let             reduce using rule 33 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Id              reduce using rule 33 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    PrintLn         reduce using rule 33 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    $end            reduce using rule 33 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)


state 341

    (39) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 350


state 342

    (34) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .

    Let             reduce using rule 34 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Id              reduce using rule 34 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    PrintLn         reduce using rule 34 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    $end            reduce using rule 34 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)


state 343

    (40) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 351


state 344

    (35) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .

    Let             reduce using rule 35 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Id              reduce using rule 35 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    PrintLn         reduce using rule 35 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    $end            reduce using rule 35 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)


state 345

    (41) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 352


state 346

    (36) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .

    Let             reduce using rule 36 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    Id              reduce using rule 36 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    PrintLn         reduce using rule 36 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)
    $end            reduce using rule 36 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos New ParA ParC ptComa .)


state 347

    (42) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC . ptComa

    ptComa          shift and go to state 353


state 348

    (37) DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .

    Let             reduce using rule 37 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 37 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 37 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    $end            reduce using rule 37 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue I64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)


state 349

    (38) DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .

    Let             reduce using rule 38 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 38 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 38 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    $end            reduce using rule 38 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue F64 mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)


state 350

    (39) DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .

    Let             reduce using rule 39 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 39 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 39 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    $end            reduce using rule 39 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue StrA mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)


state 351

    (40) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .

    Let             reduce using rule 40 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 40 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 40 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    $end            reduce using rule 40 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Str mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)


state 352

    (41) DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .

    Let             reduce using rule 41 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 41 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 41 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    $end            reduce using rule 41 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue Bool mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)


state 353

    (42) DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .

    Let             reduce using rule 42 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    Id              reduce using rule 42 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    PrintLn         reduce using rule 42 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)
    $end            reduce using rule 42 (DECLARACION -> Let Mut Id dosPuntos VEC menorQue CharAux mayorQue igual VEC dosPuntos dosPuntos Capacidad ParA EXPRESION ParC ptComa .)

