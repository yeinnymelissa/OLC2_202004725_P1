Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    And
    Comentario
    False
    Or
    True
    llaveA
    llaveC

Grammar

Rule 0     S' -> init
Rule 1     init -> INSTRUCCIONES
Rule 2     INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION
Rule 3     INSTRUCCIONES -> INSTRUCCION
Rule 4     INSTRUCCION -> DECLARACION
Rule 5     DECLARACION -> Let Id igual EXPRESION ptComa
Rule 6     DECLARACION -> Let Id dosPuntos I64 igual EXPRESION ptComa
Rule 7     DECLARACION -> Let Id dosPuntos F64 igual EXPRESION ptComa
Rule 8     DECLARACION -> Let Id dosPuntos StrA igual EXPRESION ptComa
Rule 9     DECLARACION -> Let Id dosPuntos Str igual EXPRESION ptComa
Rule 10    DECLARACION -> Let Id dosPuntos Bool igual EXPRESION ptComa
Rule 11    DECLARACION -> Let Id dosPuntos CharAux igual EXPRESION ptComa
Rule 12    DECLARACION -> Let Mut Id igual EXPRESION ptComa
Rule 13    DECLARACION -> Let Mut Id dosPuntos I64 igual EXPRESION ptComa
Rule 14    DECLARACION -> Let Mut Id dosPuntos F64 igual EXPRESION ptComa
Rule 15    DECLARACION -> Let Mut Id dosPuntos StrA igual EXPRESION ptComa
Rule 16    DECLARACION -> Let Mut Id dosPuntos Str igual EXPRESION ptComa
Rule 17    DECLARACION -> Let Mut Id dosPuntos Bool igual EXPRESION ptComa
Rule 18    DECLARACION -> Let Mut Id dosPuntos CharAux igual EXPRESION ptComa
Rule 19    INSTRUCCION -> ASIGNACION
Rule 20    ASIGNACION -> Id igual EXPRESION ptComa
Rule 21    INSTRUCCION -> IMPRIMIR
Rule 22    IMPRIMIR -> PrintLn not ParA String ParC ptComa
Rule 23    IMPRIMIR -> PrintLn not ParA String Coma COMASEX ParC ptComa
Rule 24    COMASEX -> COMASEX Coma EXPRESION
Rule 25    COMASEX -> EXPRESION
Rule 26    EXPRESION -> EXPRESION mas EXPRESION
Rule 27    EXPRESION -> EXPRESION menos EXPRESION
Rule 28    EXPRESION -> EXPRESION por EXPRESION
Rule 29    EXPRESION -> EXPRESION dividido EXPRESION
Rule 30    EXPRESION -> EXPRESION modulo EXPRESION
Rule 31    EXPRESION -> menos EXPRESION
Rule 32    EXPRESION -> ParA EXPRESION ParC
Rule 33    EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
Rule 34    EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
Rule 35    EXPRESION -> EXPRESION menorQue EXPRESION
Rule 36    EXPRESION -> EXPRESION mayorQue EXPRESION
Rule 37    EXPRESION -> EXPRESION menorIgual EXPRESION
Rule 38    EXPRESION -> EXPRESION mayorIgual EXPRESION
Rule 39    EXPRESION -> EXPRESION dobleIgual EXPRESION
Rule 40    EXPRESION -> EXPRESION diferenteQue EXPRESION
Rule 41    EXPRESION -> Float
Rule 42    EXPRESION -> Entero
Rule 43    EXPRESION -> Booleano
Rule 44    EXPRESION -> String
Rule 45    EXPRESION -> Char
Rule 46    EXPRESION -> Id

Terminals, with rules where they appear

And                  : 
Bool                 : 10 17
Booleano             : 43
Char                 : 45
CharAux              : 11 18
Coma                 : 23 24 33 34
Comentario           : 
Entero               : 42
F64                  : 7 14 34
False                : 
Float                : 41
I64                  : 6 13 33
Id                   : 5 6 7 8 9 10 11 12 13 14 15 16 17 18 20 46
Let                  : 5 6 7 8 9 10 11 12 13 14 15 16 17 18
Mut                  : 12 13 14 15 16 17 18
Or                   : 
ParA                 : 22 23 32 33 34
ParC                 : 22 23 32 33 34
Powf                 : 34
Powi                 : 33
PrintLn              : 22 23
Str                  : 9 16
StrA                 : 8 15
String               : 22 23 44
True                 : 
diferenteQue         : 40
dividido             : 29
dobleIgual           : 39
dosPuntos            : 6 7 8 9 10 11 13 14 15 16 17 18 33 33 34 34
error                : 
igual                : 5 6 7 8 9 10 11 12 13 14 15 16 17 18 20
llaveA               : 
llaveC               : 
mas                  : 26
mayorIgual           : 38
mayorQue             : 36
menorIgual           : 37
menorQue             : 35
menos                : 27 31
modulo               : 30
not                  : 22 23
por                  : 28
ptComa               : 5 6 7 8 9 10 11 12 13 14 15 16 17 18 20 22 23

Nonterminals, with rules where they appear

ASIGNACION           : 19
COMASEX              : 23 24
DECLARACION          : 4
EXPRESION            : 5 6 7 8 9 10 11 12 13 14 15 16 17 18 20 24 25 26 26 27 27 28 28 29 29 30 30 31 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40
IMPRIMIR             : 21
INSTRUCCION          : 2 3
INSTRUCCIONES        : 1 2
init                 : 0

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . INSTRUCCIONES
    (2) INSTRUCCIONES -> . INSTRUCCIONES INSTRUCCION
    (3) INSTRUCCIONES -> . INSTRUCCION
    (4) INSTRUCCION -> . DECLARACION
    (19) INSTRUCCION -> . ASIGNACION
    (21) INSTRUCCION -> . IMPRIMIR
    (5) DECLARACION -> . Let Id igual EXPRESION ptComa
    (6) DECLARACION -> . Let Id dosPuntos I64 igual EXPRESION ptComa
    (7) DECLARACION -> . Let Id dosPuntos F64 igual EXPRESION ptComa
    (8) DECLARACION -> . Let Id dosPuntos StrA igual EXPRESION ptComa
    (9) DECLARACION -> . Let Id dosPuntos Str igual EXPRESION ptComa
    (10) DECLARACION -> . Let Id dosPuntos Bool igual EXPRESION ptComa
    (11) DECLARACION -> . Let Id dosPuntos CharAux igual EXPRESION ptComa
    (12) DECLARACION -> . Let Mut Id igual EXPRESION ptComa
    (13) DECLARACION -> . Let Mut Id dosPuntos I64 igual EXPRESION ptComa
    (14) DECLARACION -> . Let Mut Id dosPuntos F64 igual EXPRESION ptComa
    (15) DECLARACION -> . Let Mut Id dosPuntos StrA igual EXPRESION ptComa
    (16) DECLARACION -> . Let Mut Id dosPuntos Str igual EXPRESION ptComa
    (17) DECLARACION -> . Let Mut Id dosPuntos Bool igual EXPRESION ptComa
    (18) DECLARACION -> . Let Mut Id dosPuntos CharAux igual EXPRESION ptComa
    (20) ASIGNACION -> . Id igual EXPRESION ptComa
    (22) IMPRIMIR -> . PrintLn not ParA String ParC ptComa
    (23) IMPRIMIR -> . PrintLn not ParA String Coma COMASEX ParC ptComa

    Let             shift and go to state 7
    Id              shift and go to state 8
    PrintLn         shift and go to state 9

    init                           shift and go to state 1
    INSTRUCCIONES                  shift and go to state 2
    INSTRUCCION                    shift and go to state 3
    DECLARACION                    shift and go to state 4
    ASIGNACION                     shift and go to state 5
    IMPRIMIR                       shift and go to state 6

state 1

    (0) S' -> init .



state 2

    (1) init -> INSTRUCCIONES .
    (2) INSTRUCCIONES -> INSTRUCCIONES . INSTRUCCION
    (4) INSTRUCCION -> . DECLARACION
    (19) INSTRUCCION -> . ASIGNACION
    (21) INSTRUCCION -> . IMPRIMIR
    (5) DECLARACION -> . Let Id igual EXPRESION ptComa
    (6) DECLARACION -> . Let Id dosPuntos I64 igual EXPRESION ptComa
    (7) DECLARACION -> . Let Id dosPuntos F64 igual EXPRESION ptComa
    (8) DECLARACION -> . Let Id dosPuntos StrA igual EXPRESION ptComa
    (9) DECLARACION -> . Let Id dosPuntos Str igual EXPRESION ptComa
    (10) DECLARACION -> . Let Id dosPuntos Bool igual EXPRESION ptComa
    (11) DECLARACION -> . Let Id dosPuntos CharAux igual EXPRESION ptComa
    (12) DECLARACION -> . Let Mut Id igual EXPRESION ptComa
    (13) DECLARACION -> . Let Mut Id dosPuntos I64 igual EXPRESION ptComa
    (14) DECLARACION -> . Let Mut Id dosPuntos F64 igual EXPRESION ptComa
    (15) DECLARACION -> . Let Mut Id dosPuntos StrA igual EXPRESION ptComa
    (16) DECLARACION -> . Let Mut Id dosPuntos Str igual EXPRESION ptComa
    (17) DECLARACION -> . Let Mut Id dosPuntos Bool igual EXPRESION ptComa
    (18) DECLARACION -> . Let Mut Id dosPuntos CharAux igual EXPRESION ptComa
    (20) ASIGNACION -> . Id igual EXPRESION ptComa
    (22) IMPRIMIR -> . PrintLn not ParA String ParC ptComa
    (23) IMPRIMIR -> . PrintLn not ParA String Coma COMASEX ParC ptComa

    $end            reduce using rule 1 (init -> INSTRUCCIONES .)
    Let             shift and go to state 7
    Id              shift and go to state 8
    PrintLn         shift and go to state 9

    INSTRUCCION                    shift and go to state 10
    DECLARACION                    shift and go to state 4
    ASIGNACION                     shift and go to state 5
    IMPRIMIR                       shift and go to state 6

state 3

    (3) INSTRUCCIONES -> INSTRUCCION .

    Let             reduce using rule 3 (INSTRUCCIONES -> INSTRUCCION .)
    Id              reduce using rule 3 (INSTRUCCIONES -> INSTRUCCION .)
    PrintLn         reduce using rule 3 (INSTRUCCIONES -> INSTRUCCION .)
    $end            reduce using rule 3 (INSTRUCCIONES -> INSTRUCCION .)


state 4

    (4) INSTRUCCION -> DECLARACION .

    Let             reduce using rule 4 (INSTRUCCION -> DECLARACION .)
    Id              reduce using rule 4 (INSTRUCCION -> DECLARACION .)
    PrintLn         reduce using rule 4 (INSTRUCCION -> DECLARACION .)
    $end            reduce using rule 4 (INSTRUCCION -> DECLARACION .)


state 5

    (19) INSTRUCCION -> ASIGNACION .

    Let             reduce using rule 19 (INSTRUCCION -> ASIGNACION .)
    Id              reduce using rule 19 (INSTRUCCION -> ASIGNACION .)
    PrintLn         reduce using rule 19 (INSTRUCCION -> ASIGNACION .)
    $end            reduce using rule 19 (INSTRUCCION -> ASIGNACION .)


state 6

    (21) INSTRUCCION -> IMPRIMIR .

    Let             reduce using rule 21 (INSTRUCCION -> IMPRIMIR .)
    Id              reduce using rule 21 (INSTRUCCION -> IMPRIMIR .)
    PrintLn         reduce using rule 21 (INSTRUCCION -> IMPRIMIR .)
    $end            reduce using rule 21 (INSTRUCCION -> IMPRIMIR .)


state 7

    (5) DECLARACION -> Let . Id igual EXPRESION ptComa
    (6) DECLARACION -> Let . Id dosPuntos I64 igual EXPRESION ptComa
    (7) DECLARACION -> Let . Id dosPuntos F64 igual EXPRESION ptComa
    (8) DECLARACION -> Let . Id dosPuntos StrA igual EXPRESION ptComa
    (9) DECLARACION -> Let . Id dosPuntos Str igual EXPRESION ptComa
    (10) DECLARACION -> Let . Id dosPuntos Bool igual EXPRESION ptComa
    (11) DECLARACION -> Let . Id dosPuntos CharAux igual EXPRESION ptComa
    (12) DECLARACION -> Let . Mut Id igual EXPRESION ptComa
    (13) DECLARACION -> Let . Mut Id dosPuntos I64 igual EXPRESION ptComa
    (14) DECLARACION -> Let . Mut Id dosPuntos F64 igual EXPRESION ptComa
    (15) DECLARACION -> Let . Mut Id dosPuntos StrA igual EXPRESION ptComa
    (16) DECLARACION -> Let . Mut Id dosPuntos Str igual EXPRESION ptComa
    (17) DECLARACION -> Let . Mut Id dosPuntos Bool igual EXPRESION ptComa
    (18) DECLARACION -> Let . Mut Id dosPuntos CharAux igual EXPRESION ptComa

    Id              shift and go to state 11
    Mut             shift and go to state 12


state 8

    (20) ASIGNACION -> Id . igual EXPRESION ptComa

    igual           shift and go to state 13


state 9

    (22) IMPRIMIR -> PrintLn . not ParA String ParC ptComa
    (23) IMPRIMIR -> PrintLn . not ParA String Coma COMASEX ParC ptComa

    not             shift and go to state 14


state 10

    (2) INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .

    Let             reduce using rule 2 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    Id              reduce using rule 2 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    PrintLn         reduce using rule 2 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)
    $end            reduce using rule 2 (INSTRUCCIONES -> INSTRUCCIONES INSTRUCCION .)


state 11

    (5) DECLARACION -> Let Id . igual EXPRESION ptComa
    (6) DECLARACION -> Let Id . dosPuntos I64 igual EXPRESION ptComa
    (7) DECLARACION -> Let Id . dosPuntos F64 igual EXPRESION ptComa
    (8) DECLARACION -> Let Id . dosPuntos StrA igual EXPRESION ptComa
    (9) DECLARACION -> Let Id . dosPuntos Str igual EXPRESION ptComa
    (10) DECLARACION -> Let Id . dosPuntos Bool igual EXPRESION ptComa
    (11) DECLARACION -> Let Id . dosPuntos CharAux igual EXPRESION ptComa

    igual           shift and go to state 15
    dosPuntos       shift and go to state 16


state 12

    (12) DECLARACION -> Let Mut . Id igual EXPRESION ptComa
    (13) DECLARACION -> Let Mut . Id dosPuntos I64 igual EXPRESION ptComa
    (14) DECLARACION -> Let Mut . Id dosPuntos F64 igual EXPRESION ptComa
    (15) DECLARACION -> Let Mut . Id dosPuntos StrA igual EXPRESION ptComa
    (16) DECLARACION -> Let Mut . Id dosPuntos Str igual EXPRESION ptComa
    (17) DECLARACION -> Let Mut . Id dosPuntos Bool igual EXPRESION ptComa
    (18) DECLARACION -> Let Mut . Id dosPuntos CharAux igual EXPRESION ptComa

    Id              shift and go to state 17


state 13

    (20) ASIGNACION -> Id igual . EXPRESION ptComa
    (26) EXPRESION -> . EXPRESION mas EXPRESION
    (27) EXPRESION -> . EXPRESION menos EXPRESION
    (28) EXPRESION -> . EXPRESION por EXPRESION
    (29) EXPRESION -> . EXPRESION dividido EXPRESION
    (30) EXPRESION -> . EXPRESION modulo EXPRESION
    (31) EXPRESION -> . menos EXPRESION
    (32) EXPRESION -> . ParA EXPRESION ParC
    (33) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (34) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (35) EXPRESION -> . EXPRESION menorQue EXPRESION
    (36) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (37) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (38) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (39) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (40) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (41) EXPRESION -> . Float
    (42) EXPRESION -> . Entero
    (43) EXPRESION -> . Booleano
    (44) EXPRESION -> . String
    (45) EXPRESION -> . Char
    (46) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    Float           shift and go to state 24
    Entero          shift and go to state 25
    Booleano        shift and go to state 26
    String          shift and go to state 27
    Char            shift and go to state 28
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 19

state 14

    (22) IMPRIMIR -> PrintLn not . ParA String ParC ptComa
    (23) IMPRIMIR -> PrintLn not . ParA String Coma COMASEX ParC ptComa

    ParA            shift and go to state 29


state 15

    (5) DECLARACION -> Let Id igual . EXPRESION ptComa
    (26) EXPRESION -> . EXPRESION mas EXPRESION
    (27) EXPRESION -> . EXPRESION menos EXPRESION
    (28) EXPRESION -> . EXPRESION por EXPRESION
    (29) EXPRESION -> . EXPRESION dividido EXPRESION
    (30) EXPRESION -> . EXPRESION modulo EXPRESION
    (31) EXPRESION -> . menos EXPRESION
    (32) EXPRESION -> . ParA EXPRESION ParC
    (33) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (34) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (35) EXPRESION -> . EXPRESION menorQue EXPRESION
    (36) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (37) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (38) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (39) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (40) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (41) EXPRESION -> . Float
    (42) EXPRESION -> . Entero
    (43) EXPRESION -> . Booleano
    (44) EXPRESION -> . String
    (45) EXPRESION -> . Char
    (46) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    Float           shift and go to state 24
    Entero          shift and go to state 25
    Booleano        shift and go to state 26
    String          shift and go to state 27
    Char            shift and go to state 28
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 30

state 16

    (6) DECLARACION -> Let Id dosPuntos . I64 igual EXPRESION ptComa
    (7) DECLARACION -> Let Id dosPuntos . F64 igual EXPRESION ptComa
    (8) DECLARACION -> Let Id dosPuntos . StrA igual EXPRESION ptComa
    (9) DECLARACION -> Let Id dosPuntos . Str igual EXPRESION ptComa
    (10) DECLARACION -> Let Id dosPuntos . Bool igual EXPRESION ptComa
    (11) DECLARACION -> Let Id dosPuntos . CharAux igual EXPRESION ptComa

    I64             shift and go to state 31
    F64             shift and go to state 32
    StrA            shift and go to state 33
    Str             shift and go to state 34
    Bool            shift and go to state 35
    CharAux         shift and go to state 36


state 17

    (12) DECLARACION -> Let Mut Id . igual EXPRESION ptComa
    (13) DECLARACION -> Let Mut Id . dosPuntos I64 igual EXPRESION ptComa
    (14) DECLARACION -> Let Mut Id . dosPuntos F64 igual EXPRESION ptComa
    (15) DECLARACION -> Let Mut Id . dosPuntos StrA igual EXPRESION ptComa
    (16) DECLARACION -> Let Mut Id . dosPuntos Str igual EXPRESION ptComa
    (17) DECLARACION -> Let Mut Id . dosPuntos Bool igual EXPRESION ptComa
    (18) DECLARACION -> Let Mut Id . dosPuntos CharAux igual EXPRESION ptComa

    igual           shift and go to state 37
    dosPuntos       shift and go to state 38


state 18

    (46) EXPRESION -> Id .

    ptComa          reduce using rule 46 (EXPRESION -> Id .)
    mas             reduce using rule 46 (EXPRESION -> Id .)
    menos           reduce using rule 46 (EXPRESION -> Id .)
    por             reduce using rule 46 (EXPRESION -> Id .)
    dividido        reduce using rule 46 (EXPRESION -> Id .)
    modulo          reduce using rule 46 (EXPRESION -> Id .)
    menorQue        reduce using rule 46 (EXPRESION -> Id .)
    mayorQue        reduce using rule 46 (EXPRESION -> Id .)
    menorIgual      reduce using rule 46 (EXPRESION -> Id .)
    mayorIgual      reduce using rule 46 (EXPRESION -> Id .)
    dobleIgual      reduce using rule 46 (EXPRESION -> Id .)
    diferenteQue    reduce using rule 46 (EXPRESION -> Id .)
    ParC            reduce using rule 46 (EXPRESION -> Id .)
    Coma            reduce using rule 46 (EXPRESION -> Id .)


state 19

    (20) ASIGNACION -> Id igual EXPRESION . ptComa
    (26) EXPRESION -> EXPRESION . mas EXPRESION
    (27) EXPRESION -> EXPRESION . menos EXPRESION
    (28) EXPRESION -> EXPRESION . por EXPRESION
    (29) EXPRESION -> EXPRESION . dividido EXPRESION
    (30) EXPRESION -> EXPRESION . modulo EXPRESION
    (35) EXPRESION -> EXPRESION . menorQue EXPRESION
    (36) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (37) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (38) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (39) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (40) EXPRESION -> EXPRESION . diferenteQue EXPRESION

    ptComa          shift and go to state 39
    mas             shift and go to state 40
    menos           shift and go to state 41
    por             shift and go to state 42
    dividido        shift and go to state 43
    modulo          shift and go to state 44
    menorQue        shift and go to state 45
    mayorQue        shift and go to state 46
    menorIgual      shift and go to state 47
    mayorIgual      shift and go to state 48
    dobleIgual      shift and go to state 49
    diferenteQue    shift and go to state 50


state 20

    (31) EXPRESION -> menos . EXPRESION
    (26) EXPRESION -> . EXPRESION mas EXPRESION
    (27) EXPRESION -> . EXPRESION menos EXPRESION
    (28) EXPRESION -> . EXPRESION por EXPRESION
    (29) EXPRESION -> . EXPRESION dividido EXPRESION
    (30) EXPRESION -> . EXPRESION modulo EXPRESION
    (31) EXPRESION -> . menos EXPRESION
    (32) EXPRESION -> . ParA EXPRESION ParC
    (33) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (34) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (35) EXPRESION -> . EXPRESION menorQue EXPRESION
    (36) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (37) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (38) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (39) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (40) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (41) EXPRESION -> . Float
    (42) EXPRESION -> . Entero
    (43) EXPRESION -> . Booleano
    (44) EXPRESION -> . String
    (45) EXPRESION -> . Char
    (46) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    Float           shift and go to state 24
    Entero          shift and go to state 25
    Booleano        shift and go to state 26
    String          shift and go to state 27
    Char            shift and go to state 28
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 51

state 21

    (32) EXPRESION -> ParA . EXPRESION ParC
    (26) EXPRESION -> . EXPRESION mas EXPRESION
    (27) EXPRESION -> . EXPRESION menos EXPRESION
    (28) EXPRESION -> . EXPRESION por EXPRESION
    (29) EXPRESION -> . EXPRESION dividido EXPRESION
    (30) EXPRESION -> . EXPRESION modulo EXPRESION
    (31) EXPRESION -> . menos EXPRESION
    (32) EXPRESION -> . ParA EXPRESION ParC
    (33) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (34) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (35) EXPRESION -> . EXPRESION menorQue EXPRESION
    (36) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (37) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (38) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (39) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (40) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (41) EXPRESION -> . Float
    (42) EXPRESION -> . Entero
    (43) EXPRESION -> . Booleano
    (44) EXPRESION -> . String
    (45) EXPRESION -> . Char
    (46) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    Float           shift and go to state 24
    Entero          shift and go to state 25
    Booleano        shift and go to state 26
    String          shift and go to state 27
    Char            shift and go to state 28
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 52

state 22

    (33) EXPRESION -> I64 . dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC

    dosPuntos       shift and go to state 53


state 23

    (34) EXPRESION -> F64 . dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC

    dosPuntos       shift and go to state 54


state 24

    (41) EXPRESION -> Float .

    ptComa          reduce using rule 41 (EXPRESION -> Float .)
    mas             reduce using rule 41 (EXPRESION -> Float .)
    menos           reduce using rule 41 (EXPRESION -> Float .)
    por             reduce using rule 41 (EXPRESION -> Float .)
    dividido        reduce using rule 41 (EXPRESION -> Float .)
    modulo          reduce using rule 41 (EXPRESION -> Float .)
    menorQue        reduce using rule 41 (EXPRESION -> Float .)
    mayorQue        reduce using rule 41 (EXPRESION -> Float .)
    menorIgual      reduce using rule 41 (EXPRESION -> Float .)
    mayorIgual      reduce using rule 41 (EXPRESION -> Float .)
    dobleIgual      reduce using rule 41 (EXPRESION -> Float .)
    diferenteQue    reduce using rule 41 (EXPRESION -> Float .)
    ParC            reduce using rule 41 (EXPRESION -> Float .)
    Coma            reduce using rule 41 (EXPRESION -> Float .)


state 25

    (42) EXPRESION -> Entero .

    ptComa          reduce using rule 42 (EXPRESION -> Entero .)
    mas             reduce using rule 42 (EXPRESION -> Entero .)
    menos           reduce using rule 42 (EXPRESION -> Entero .)
    por             reduce using rule 42 (EXPRESION -> Entero .)
    dividido        reduce using rule 42 (EXPRESION -> Entero .)
    modulo          reduce using rule 42 (EXPRESION -> Entero .)
    menorQue        reduce using rule 42 (EXPRESION -> Entero .)
    mayorQue        reduce using rule 42 (EXPRESION -> Entero .)
    menorIgual      reduce using rule 42 (EXPRESION -> Entero .)
    mayorIgual      reduce using rule 42 (EXPRESION -> Entero .)
    dobleIgual      reduce using rule 42 (EXPRESION -> Entero .)
    diferenteQue    reduce using rule 42 (EXPRESION -> Entero .)
    ParC            reduce using rule 42 (EXPRESION -> Entero .)
    Coma            reduce using rule 42 (EXPRESION -> Entero .)


state 26

    (43) EXPRESION -> Booleano .

    ptComa          reduce using rule 43 (EXPRESION -> Booleano .)
    mas             reduce using rule 43 (EXPRESION -> Booleano .)
    menos           reduce using rule 43 (EXPRESION -> Booleano .)
    por             reduce using rule 43 (EXPRESION -> Booleano .)
    dividido        reduce using rule 43 (EXPRESION -> Booleano .)
    modulo          reduce using rule 43 (EXPRESION -> Booleano .)
    menorQue        reduce using rule 43 (EXPRESION -> Booleano .)
    mayorQue        reduce using rule 43 (EXPRESION -> Booleano .)
    menorIgual      reduce using rule 43 (EXPRESION -> Booleano .)
    mayorIgual      reduce using rule 43 (EXPRESION -> Booleano .)
    dobleIgual      reduce using rule 43 (EXPRESION -> Booleano .)
    diferenteQue    reduce using rule 43 (EXPRESION -> Booleano .)
    ParC            reduce using rule 43 (EXPRESION -> Booleano .)
    Coma            reduce using rule 43 (EXPRESION -> Booleano .)


state 27

    (44) EXPRESION -> String .

    ptComa          reduce using rule 44 (EXPRESION -> String .)
    mas             reduce using rule 44 (EXPRESION -> String .)
    menos           reduce using rule 44 (EXPRESION -> String .)
    por             reduce using rule 44 (EXPRESION -> String .)
    dividido        reduce using rule 44 (EXPRESION -> String .)
    modulo          reduce using rule 44 (EXPRESION -> String .)
    menorQue        reduce using rule 44 (EXPRESION -> String .)
    mayorQue        reduce using rule 44 (EXPRESION -> String .)
    menorIgual      reduce using rule 44 (EXPRESION -> String .)
    mayorIgual      reduce using rule 44 (EXPRESION -> String .)
    dobleIgual      reduce using rule 44 (EXPRESION -> String .)
    diferenteQue    reduce using rule 44 (EXPRESION -> String .)
    ParC            reduce using rule 44 (EXPRESION -> String .)
    Coma            reduce using rule 44 (EXPRESION -> String .)


state 28

    (45) EXPRESION -> Char .

    ptComa          reduce using rule 45 (EXPRESION -> Char .)
    mas             reduce using rule 45 (EXPRESION -> Char .)
    menos           reduce using rule 45 (EXPRESION -> Char .)
    por             reduce using rule 45 (EXPRESION -> Char .)
    dividido        reduce using rule 45 (EXPRESION -> Char .)
    modulo          reduce using rule 45 (EXPRESION -> Char .)
    menorQue        reduce using rule 45 (EXPRESION -> Char .)
    mayorQue        reduce using rule 45 (EXPRESION -> Char .)
    menorIgual      reduce using rule 45 (EXPRESION -> Char .)
    mayorIgual      reduce using rule 45 (EXPRESION -> Char .)
    dobleIgual      reduce using rule 45 (EXPRESION -> Char .)
    diferenteQue    reduce using rule 45 (EXPRESION -> Char .)
    ParC            reduce using rule 45 (EXPRESION -> Char .)
    Coma            reduce using rule 45 (EXPRESION -> Char .)


state 29

    (22) IMPRIMIR -> PrintLn not ParA . String ParC ptComa
    (23) IMPRIMIR -> PrintLn not ParA . String Coma COMASEX ParC ptComa

    String          shift and go to state 55


state 30

    (5) DECLARACION -> Let Id igual EXPRESION . ptComa
    (26) EXPRESION -> EXPRESION . mas EXPRESION
    (27) EXPRESION -> EXPRESION . menos EXPRESION
    (28) EXPRESION -> EXPRESION . por EXPRESION
    (29) EXPRESION -> EXPRESION . dividido EXPRESION
    (30) EXPRESION -> EXPRESION . modulo EXPRESION
    (35) EXPRESION -> EXPRESION . menorQue EXPRESION
    (36) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (37) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (38) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (39) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (40) EXPRESION -> EXPRESION . diferenteQue EXPRESION

    ptComa          shift and go to state 56
    mas             shift and go to state 40
    menos           shift and go to state 41
    por             shift and go to state 42
    dividido        shift and go to state 43
    modulo          shift and go to state 44
    menorQue        shift and go to state 45
    mayorQue        shift and go to state 46
    menorIgual      shift and go to state 47
    mayorIgual      shift and go to state 48
    dobleIgual      shift and go to state 49
    diferenteQue    shift and go to state 50


state 31

    (6) DECLARACION -> Let Id dosPuntos I64 . igual EXPRESION ptComa

    igual           shift and go to state 57


state 32

    (7) DECLARACION -> Let Id dosPuntos F64 . igual EXPRESION ptComa

    igual           shift and go to state 58


state 33

    (8) DECLARACION -> Let Id dosPuntos StrA . igual EXPRESION ptComa

    igual           shift and go to state 59


state 34

    (9) DECLARACION -> Let Id dosPuntos Str . igual EXPRESION ptComa

    igual           shift and go to state 60


state 35

    (10) DECLARACION -> Let Id dosPuntos Bool . igual EXPRESION ptComa

    igual           shift and go to state 61


state 36

    (11) DECLARACION -> Let Id dosPuntos CharAux . igual EXPRESION ptComa

    igual           shift and go to state 62


state 37

    (12) DECLARACION -> Let Mut Id igual . EXPRESION ptComa
    (26) EXPRESION -> . EXPRESION mas EXPRESION
    (27) EXPRESION -> . EXPRESION menos EXPRESION
    (28) EXPRESION -> . EXPRESION por EXPRESION
    (29) EXPRESION -> . EXPRESION dividido EXPRESION
    (30) EXPRESION -> . EXPRESION modulo EXPRESION
    (31) EXPRESION -> . menos EXPRESION
    (32) EXPRESION -> . ParA EXPRESION ParC
    (33) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (34) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (35) EXPRESION -> . EXPRESION menorQue EXPRESION
    (36) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (37) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (38) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (39) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (40) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (41) EXPRESION -> . Float
    (42) EXPRESION -> . Entero
    (43) EXPRESION -> . Booleano
    (44) EXPRESION -> . String
    (45) EXPRESION -> . Char
    (46) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    Float           shift and go to state 24
    Entero          shift and go to state 25
    Booleano        shift and go to state 26
    String          shift and go to state 27
    Char            shift and go to state 28
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 63

state 38

    (13) DECLARACION -> Let Mut Id dosPuntos . I64 igual EXPRESION ptComa
    (14) DECLARACION -> Let Mut Id dosPuntos . F64 igual EXPRESION ptComa
    (15) DECLARACION -> Let Mut Id dosPuntos . StrA igual EXPRESION ptComa
    (16) DECLARACION -> Let Mut Id dosPuntos . Str igual EXPRESION ptComa
    (17) DECLARACION -> Let Mut Id dosPuntos . Bool igual EXPRESION ptComa
    (18) DECLARACION -> Let Mut Id dosPuntos . CharAux igual EXPRESION ptComa

    I64             shift and go to state 64
    F64             shift and go to state 65
    StrA            shift and go to state 66
    Str             shift and go to state 67
    Bool            shift and go to state 68
    CharAux         shift and go to state 69


state 39

    (20) ASIGNACION -> Id igual EXPRESION ptComa .

    Let             reduce using rule 20 (ASIGNACION -> Id igual EXPRESION ptComa .)
    Id              reduce using rule 20 (ASIGNACION -> Id igual EXPRESION ptComa .)
    PrintLn         reduce using rule 20 (ASIGNACION -> Id igual EXPRESION ptComa .)
    $end            reduce using rule 20 (ASIGNACION -> Id igual EXPRESION ptComa .)


state 40

    (26) EXPRESION -> EXPRESION mas . EXPRESION
    (26) EXPRESION -> . EXPRESION mas EXPRESION
    (27) EXPRESION -> . EXPRESION menos EXPRESION
    (28) EXPRESION -> . EXPRESION por EXPRESION
    (29) EXPRESION -> . EXPRESION dividido EXPRESION
    (30) EXPRESION -> . EXPRESION modulo EXPRESION
    (31) EXPRESION -> . menos EXPRESION
    (32) EXPRESION -> . ParA EXPRESION ParC
    (33) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (34) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (35) EXPRESION -> . EXPRESION menorQue EXPRESION
    (36) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (37) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (38) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (39) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (40) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (41) EXPRESION -> . Float
    (42) EXPRESION -> . Entero
    (43) EXPRESION -> . Booleano
    (44) EXPRESION -> . String
    (45) EXPRESION -> . Char
    (46) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    Float           shift and go to state 24
    Entero          shift and go to state 25
    Booleano        shift and go to state 26
    String          shift and go to state 27
    Char            shift and go to state 28
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 70

state 41

    (27) EXPRESION -> EXPRESION menos . EXPRESION
    (26) EXPRESION -> . EXPRESION mas EXPRESION
    (27) EXPRESION -> . EXPRESION menos EXPRESION
    (28) EXPRESION -> . EXPRESION por EXPRESION
    (29) EXPRESION -> . EXPRESION dividido EXPRESION
    (30) EXPRESION -> . EXPRESION modulo EXPRESION
    (31) EXPRESION -> . menos EXPRESION
    (32) EXPRESION -> . ParA EXPRESION ParC
    (33) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (34) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (35) EXPRESION -> . EXPRESION menorQue EXPRESION
    (36) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (37) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (38) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (39) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (40) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (41) EXPRESION -> . Float
    (42) EXPRESION -> . Entero
    (43) EXPRESION -> . Booleano
    (44) EXPRESION -> . String
    (45) EXPRESION -> . Char
    (46) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    Float           shift and go to state 24
    Entero          shift and go to state 25
    Booleano        shift and go to state 26
    String          shift and go to state 27
    Char            shift and go to state 28
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 71

state 42

    (28) EXPRESION -> EXPRESION por . EXPRESION
    (26) EXPRESION -> . EXPRESION mas EXPRESION
    (27) EXPRESION -> . EXPRESION menos EXPRESION
    (28) EXPRESION -> . EXPRESION por EXPRESION
    (29) EXPRESION -> . EXPRESION dividido EXPRESION
    (30) EXPRESION -> . EXPRESION modulo EXPRESION
    (31) EXPRESION -> . menos EXPRESION
    (32) EXPRESION -> . ParA EXPRESION ParC
    (33) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (34) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (35) EXPRESION -> . EXPRESION menorQue EXPRESION
    (36) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (37) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (38) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (39) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (40) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (41) EXPRESION -> . Float
    (42) EXPRESION -> . Entero
    (43) EXPRESION -> . Booleano
    (44) EXPRESION -> . String
    (45) EXPRESION -> . Char
    (46) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    Float           shift and go to state 24
    Entero          shift and go to state 25
    Booleano        shift and go to state 26
    String          shift and go to state 27
    Char            shift and go to state 28
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 72

state 43

    (29) EXPRESION -> EXPRESION dividido . EXPRESION
    (26) EXPRESION -> . EXPRESION mas EXPRESION
    (27) EXPRESION -> . EXPRESION menos EXPRESION
    (28) EXPRESION -> . EXPRESION por EXPRESION
    (29) EXPRESION -> . EXPRESION dividido EXPRESION
    (30) EXPRESION -> . EXPRESION modulo EXPRESION
    (31) EXPRESION -> . menos EXPRESION
    (32) EXPRESION -> . ParA EXPRESION ParC
    (33) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (34) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (35) EXPRESION -> . EXPRESION menorQue EXPRESION
    (36) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (37) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (38) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (39) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (40) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (41) EXPRESION -> . Float
    (42) EXPRESION -> . Entero
    (43) EXPRESION -> . Booleano
    (44) EXPRESION -> . String
    (45) EXPRESION -> . Char
    (46) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    Float           shift and go to state 24
    Entero          shift and go to state 25
    Booleano        shift and go to state 26
    String          shift and go to state 27
    Char            shift and go to state 28
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 73

state 44

    (30) EXPRESION -> EXPRESION modulo . EXPRESION
    (26) EXPRESION -> . EXPRESION mas EXPRESION
    (27) EXPRESION -> . EXPRESION menos EXPRESION
    (28) EXPRESION -> . EXPRESION por EXPRESION
    (29) EXPRESION -> . EXPRESION dividido EXPRESION
    (30) EXPRESION -> . EXPRESION modulo EXPRESION
    (31) EXPRESION -> . menos EXPRESION
    (32) EXPRESION -> . ParA EXPRESION ParC
    (33) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (34) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (35) EXPRESION -> . EXPRESION menorQue EXPRESION
    (36) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (37) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (38) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (39) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (40) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (41) EXPRESION -> . Float
    (42) EXPRESION -> . Entero
    (43) EXPRESION -> . Booleano
    (44) EXPRESION -> . String
    (45) EXPRESION -> . Char
    (46) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    Float           shift and go to state 24
    Entero          shift and go to state 25
    Booleano        shift and go to state 26
    String          shift and go to state 27
    Char            shift and go to state 28
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 74

state 45

    (35) EXPRESION -> EXPRESION menorQue . EXPRESION
    (26) EXPRESION -> . EXPRESION mas EXPRESION
    (27) EXPRESION -> . EXPRESION menos EXPRESION
    (28) EXPRESION -> . EXPRESION por EXPRESION
    (29) EXPRESION -> . EXPRESION dividido EXPRESION
    (30) EXPRESION -> . EXPRESION modulo EXPRESION
    (31) EXPRESION -> . menos EXPRESION
    (32) EXPRESION -> . ParA EXPRESION ParC
    (33) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (34) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (35) EXPRESION -> . EXPRESION menorQue EXPRESION
    (36) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (37) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (38) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (39) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (40) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (41) EXPRESION -> . Float
    (42) EXPRESION -> . Entero
    (43) EXPRESION -> . Booleano
    (44) EXPRESION -> . String
    (45) EXPRESION -> . Char
    (46) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    Float           shift and go to state 24
    Entero          shift and go to state 25
    Booleano        shift and go to state 26
    String          shift and go to state 27
    Char            shift and go to state 28
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 75

state 46

    (36) EXPRESION -> EXPRESION mayorQue . EXPRESION
    (26) EXPRESION -> . EXPRESION mas EXPRESION
    (27) EXPRESION -> . EXPRESION menos EXPRESION
    (28) EXPRESION -> . EXPRESION por EXPRESION
    (29) EXPRESION -> . EXPRESION dividido EXPRESION
    (30) EXPRESION -> . EXPRESION modulo EXPRESION
    (31) EXPRESION -> . menos EXPRESION
    (32) EXPRESION -> . ParA EXPRESION ParC
    (33) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (34) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (35) EXPRESION -> . EXPRESION menorQue EXPRESION
    (36) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (37) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (38) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (39) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (40) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (41) EXPRESION -> . Float
    (42) EXPRESION -> . Entero
    (43) EXPRESION -> . Booleano
    (44) EXPRESION -> . String
    (45) EXPRESION -> . Char
    (46) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    Float           shift and go to state 24
    Entero          shift and go to state 25
    Booleano        shift and go to state 26
    String          shift and go to state 27
    Char            shift and go to state 28
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 76

state 47

    (37) EXPRESION -> EXPRESION menorIgual . EXPRESION
    (26) EXPRESION -> . EXPRESION mas EXPRESION
    (27) EXPRESION -> . EXPRESION menos EXPRESION
    (28) EXPRESION -> . EXPRESION por EXPRESION
    (29) EXPRESION -> . EXPRESION dividido EXPRESION
    (30) EXPRESION -> . EXPRESION modulo EXPRESION
    (31) EXPRESION -> . menos EXPRESION
    (32) EXPRESION -> . ParA EXPRESION ParC
    (33) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (34) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (35) EXPRESION -> . EXPRESION menorQue EXPRESION
    (36) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (37) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (38) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (39) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (40) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (41) EXPRESION -> . Float
    (42) EXPRESION -> . Entero
    (43) EXPRESION -> . Booleano
    (44) EXPRESION -> . String
    (45) EXPRESION -> . Char
    (46) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    Float           shift and go to state 24
    Entero          shift and go to state 25
    Booleano        shift and go to state 26
    String          shift and go to state 27
    Char            shift and go to state 28
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 77

state 48

    (38) EXPRESION -> EXPRESION mayorIgual . EXPRESION
    (26) EXPRESION -> . EXPRESION mas EXPRESION
    (27) EXPRESION -> . EXPRESION menos EXPRESION
    (28) EXPRESION -> . EXPRESION por EXPRESION
    (29) EXPRESION -> . EXPRESION dividido EXPRESION
    (30) EXPRESION -> . EXPRESION modulo EXPRESION
    (31) EXPRESION -> . menos EXPRESION
    (32) EXPRESION -> . ParA EXPRESION ParC
    (33) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (34) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (35) EXPRESION -> . EXPRESION menorQue EXPRESION
    (36) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (37) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (38) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (39) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (40) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (41) EXPRESION -> . Float
    (42) EXPRESION -> . Entero
    (43) EXPRESION -> . Booleano
    (44) EXPRESION -> . String
    (45) EXPRESION -> . Char
    (46) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    Float           shift and go to state 24
    Entero          shift and go to state 25
    Booleano        shift and go to state 26
    String          shift and go to state 27
    Char            shift and go to state 28
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 78

state 49

    (39) EXPRESION -> EXPRESION dobleIgual . EXPRESION
    (26) EXPRESION -> . EXPRESION mas EXPRESION
    (27) EXPRESION -> . EXPRESION menos EXPRESION
    (28) EXPRESION -> . EXPRESION por EXPRESION
    (29) EXPRESION -> . EXPRESION dividido EXPRESION
    (30) EXPRESION -> . EXPRESION modulo EXPRESION
    (31) EXPRESION -> . menos EXPRESION
    (32) EXPRESION -> . ParA EXPRESION ParC
    (33) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (34) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (35) EXPRESION -> . EXPRESION menorQue EXPRESION
    (36) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (37) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (38) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (39) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (40) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (41) EXPRESION -> . Float
    (42) EXPRESION -> . Entero
    (43) EXPRESION -> . Booleano
    (44) EXPRESION -> . String
    (45) EXPRESION -> . Char
    (46) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    Float           shift and go to state 24
    Entero          shift and go to state 25
    Booleano        shift and go to state 26
    String          shift and go to state 27
    Char            shift and go to state 28
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 79

state 50

    (40) EXPRESION -> EXPRESION diferenteQue . EXPRESION
    (26) EXPRESION -> . EXPRESION mas EXPRESION
    (27) EXPRESION -> . EXPRESION menos EXPRESION
    (28) EXPRESION -> . EXPRESION por EXPRESION
    (29) EXPRESION -> . EXPRESION dividido EXPRESION
    (30) EXPRESION -> . EXPRESION modulo EXPRESION
    (31) EXPRESION -> . menos EXPRESION
    (32) EXPRESION -> . ParA EXPRESION ParC
    (33) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (34) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (35) EXPRESION -> . EXPRESION menorQue EXPRESION
    (36) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (37) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (38) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (39) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (40) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (41) EXPRESION -> . Float
    (42) EXPRESION -> . Entero
    (43) EXPRESION -> . Booleano
    (44) EXPRESION -> . String
    (45) EXPRESION -> . Char
    (46) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    Float           shift and go to state 24
    Entero          shift and go to state 25
    Booleano        shift and go to state 26
    String          shift and go to state 27
    Char            shift and go to state 28
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 80

state 51

    (31) EXPRESION -> menos EXPRESION .
    (26) EXPRESION -> EXPRESION . mas EXPRESION
    (27) EXPRESION -> EXPRESION . menos EXPRESION
    (28) EXPRESION -> EXPRESION . por EXPRESION
    (29) EXPRESION -> EXPRESION . dividido EXPRESION
    (30) EXPRESION -> EXPRESION . modulo EXPRESION
    (35) EXPRESION -> EXPRESION . menorQue EXPRESION
    (36) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (37) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (38) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (39) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (40) EXPRESION -> EXPRESION . diferenteQue EXPRESION

    ptComa          reduce using rule 31 (EXPRESION -> menos EXPRESION .)
    mas             reduce using rule 31 (EXPRESION -> menos EXPRESION .)
    menos           reduce using rule 31 (EXPRESION -> menos EXPRESION .)
    por             reduce using rule 31 (EXPRESION -> menos EXPRESION .)
    dividido        reduce using rule 31 (EXPRESION -> menos EXPRESION .)
    modulo          reduce using rule 31 (EXPRESION -> menos EXPRESION .)
    menorQue        reduce using rule 31 (EXPRESION -> menos EXPRESION .)
    mayorQue        reduce using rule 31 (EXPRESION -> menos EXPRESION .)
    menorIgual      reduce using rule 31 (EXPRESION -> menos EXPRESION .)
    mayorIgual      reduce using rule 31 (EXPRESION -> menos EXPRESION .)
    dobleIgual      reduce using rule 31 (EXPRESION -> menos EXPRESION .)
    diferenteQue    reduce using rule 31 (EXPRESION -> menos EXPRESION .)
    ParC            reduce using rule 31 (EXPRESION -> menos EXPRESION .)
    Coma            reduce using rule 31 (EXPRESION -> menos EXPRESION .)

  ! mas             [ shift and go to state 40 ]
  ! menos           [ shift and go to state 41 ]
  ! por             [ shift and go to state 42 ]
  ! dividido        [ shift and go to state 43 ]
  ! modulo          [ shift and go to state 44 ]
  ! menorQue        [ shift and go to state 45 ]
  ! mayorQue        [ shift and go to state 46 ]
  ! menorIgual      [ shift and go to state 47 ]
  ! mayorIgual      [ shift and go to state 48 ]
  ! dobleIgual      [ shift and go to state 49 ]
  ! diferenteQue    [ shift and go to state 50 ]


state 52

    (32) EXPRESION -> ParA EXPRESION . ParC
    (26) EXPRESION -> EXPRESION . mas EXPRESION
    (27) EXPRESION -> EXPRESION . menos EXPRESION
    (28) EXPRESION -> EXPRESION . por EXPRESION
    (29) EXPRESION -> EXPRESION . dividido EXPRESION
    (30) EXPRESION -> EXPRESION . modulo EXPRESION
    (35) EXPRESION -> EXPRESION . menorQue EXPRESION
    (36) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (37) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (38) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (39) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (40) EXPRESION -> EXPRESION . diferenteQue EXPRESION

    ParC            shift and go to state 81
    mas             shift and go to state 40
    menos           shift and go to state 41
    por             shift and go to state 42
    dividido        shift and go to state 43
    modulo          shift and go to state 44
    menorQue        shift and go to state 45
    mayorQue        shift and go to state 46
    menorIgual      shift and go to state 47
    mayorIgual      shift and go to state 48
    dobleIgual      shift and go to state 49
    diferenteQue    shift and go to state 50


state 53

    (33) EXPRESION -> I64 dosPuntos . dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC

    dosPuntos       shift and go to state 82


state 54

    (34) EXPRESION -> F64 dosPuntos . dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC

    dosPuntos       shift and go to state 83


state 55

    (22) IMPRIMIR -> PrintLn not ParA String . ParC ptComa
    (23) IMPRIMIR -> PrintLn not ParA String . Coma COMASEX ParC ptComa

    ParC            shift and go to state 84
    Coma            shift and go to state 85


state 56

    (5) DECLARACION -> Let Id igual EXPRESION ptComa .

    Let             reduce using rule 5 (DECLARACION -> Let Id igual EXPRESION ptComa .)
    Id              reduce using rule 5 (DECLARACION -> Let Id igual EXPRESION ptComa .)
    PrintLn         reduce using rule 5 (DECLARACION -> Let Id igual EXPRESION ptComa .)
    $end            reduce using rule 5 (DECLARACION -> Let Id igual EXPRESION ptComa .)


state 57

    (6) DECLARACION -> Let Id dosPuntos I64 igual . EXPRESION ptComa
    (26) EXPRESION -> . EXPRESION mas EXPRESION
    (27) EXPRESION -> . EXPRESION menos EXPRESION
    (28) EXPRESION -> . EXPRESION por EXPRESION
    (29) EXPRESION -> . EXPRESION dividido EXPRESION
    (30) EXPRESION -> . EXPRESION modulo EXPRESION
    (31) EXPRESION -> . menos EXPRESION
    (32) EXPRESION -> . ParA EXPRESION ParC
    (33) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (34) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (35) EXPRESION -> . EXPRESION menorQue EXPRESION
    (36) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (37) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (38) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (39) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (40) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (41) EXPRESION -> . Float
    (42) EXPRESION -> . Entero
    (43) EXPRESION -> . Booleano
    (44) EXPRESION -> . String
    (45) EXPRESION -> . Char
    (46) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    Float           shift and go to state 24
    Entero          shift and go to state 25
    Booleano        shift and go to state 26
    String          shift and go to state 27
    Char            shift and go to state 28
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 86

state 58

    (7) DECLARACION -> Let Id dosPuntos F64 igual . EXPRESION ptComa
    (26) EXPRESION -> . EXPRESION mas EXPRESION
    (27) EXPRESION -> . EXPRESION menos EXPRESION
    (28) EXPRESION -> . EXPRESION por EXPRESION
    (29) EXPRESION -> . EXPRESION dividido EXPRESION
    (30) EXPRESION -> . EXPRESION modulo EXPRESION
    (31) EXPRESION -> . menos EXPRESION
    (32) EXPRESION -> . ParA EXPRESION ParC
    (33) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (34) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (35) EXPRESION -> . EXPRESION menorQue EXPRESION
    (36) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (37) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (38) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (39) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (40) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (41) EXPRESION -> . Float
    (42) EXPRESION -> . Entero
    (43) EXPRESION -> . Booleano
    (44) EXPRESION -> . String
    (45) EXPRESION -> . Char
    (46) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    Float           shift and go to state 24
    Entero          shift and go to state 25
    Booleano        shift and go to state 26
    String          shift and go to state 27
    Char            shift and go to state 28
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 87

state 59

    (8) DECLARACION -> Let Id dosPuntos StrA igual . EXPRESION ptComa
    (26) EXPRESION -> . EXPRESION mas EXPRESION
    (27) EXPRESION -> . EXPRESION menos EXPRESION
    (28) EXPRESION -> . EXPRESION por EXPRESION
    (29) EXPRESION -> . EXPRESION dividido EXPRESION
    (30) EXPRESION -> . EXPRESION modulo EXPRESION
    (31) EXPRESION -> . menos EXPRESION
    (32) EXPRESION -> . ParA EXPRESION ParC
    (33) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (34) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (35) EXPRESION -> . EXPRESION menorQue EXPRESION
    (36) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (37) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (38) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (39) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (40) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (41) EXPRESION -> . Float
    (42) EXPRESION -> . Entero
    (43) EXPRESION -> . Booleano
    (44) EXPRESION -> . String
    (45) EXPRESION -> . Char
    (46) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    Float           shift and go to state 24
    Entero          shift and go to state 25
    Booleano        shift and go to state 26
    String          shift and go to state 27
    Char            shift and go to state 28
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 88

state 60

    (9) DECLARACION -> Let Id dosPuntos Str igual . EXPRESION ptComa
    (26) EXPRESION -> . EXPRESION mas EXPRESION
    (27) EXPRESION -> . EXPRESION menos EXPRESION
    (28) EXPRESION -> . EXPRESION por EXPRESION
    (29) EXPRESION -> . EXPRESION dividido EXPRESION
    (30) EXPRESION -> . EXPRESION modulo EXPRESION
    (31) EXPRESION -> . menos EXPRESION
    (32) EXPRESION -> . ParA EXPRESION ParC
    (33) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (34) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (35) EXPRESION -> . EXPRESION menorQue EXPRESION
    (36) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (37) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (38) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (39) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (40) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (41) EXPRESION -> . Float
    (42) EXPRESION -> . Entero
    (43) EXPRESION -> . Booleano
    (44) EXPRESION -> . String
    (45) EXPRESION -> . Char
    (46) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    Float           shift and go to state 24
    Entero          shift and go to state 25
    Booleano        shift and go to state 26
    String          shift and go to state 27
    Char            shift and go to state 28
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 89

state 61

    (10) DECLARACION -> Let Id dosPuntos Bool igual . EXPRESION ptComa
    (26) EXPRESION -> . EXPRESION mas EXPRESION
    (27) EXPRESION -> . EXPRESION menos EXPRESION
    (28) EXPRESION -> . EXPRESION por EXPRESION
    (29) EXPRESION -> . EXPRESION dividido EXPRESION
    (30) EXPRESION -> . EXPRESION modulo EXPRESION
    (31) EXPRESION -> . menos EXPRESION
    (32) EXPRESION -> . ParA EXPRESION ParC
    (33) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (34) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (35) EXPRESION -> . EXPRESION menorQue EXPRESION
    (36) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (37) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (38) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (39) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (40) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (41) EXPRESION -> . Float
    (42) EXPRESION -> . Entero
    (43) EXPRESION -> . Booleano
    (44) EXPRESION -> . String
    (45) EXPRESION -> . Char
    (46) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    Float           shift and go to state 24
    Entero          shift and go to state 25
    Booleano        shift and go to state 26
    String          shift and go to state 27
    Char            shift and go to state 28
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 90

state 62

    (11) DECLARACION -> Let Id dosPuntos CharAux igual . EXPRESION ptComa
    (26) EXPRESION -> . EXPRESION mas EXPRESION
    (27) EXPRESION -> . EXPRESION menos EXPRESION
    (28) EXPRESION -> . EXPRESION por EXPRESION
    (29) EXPRESION -> . EXPRESION dividido EXPRESION
    (30) EXPRESION -> . EXPRESION modulo EXPRESION
    (31) EXPRESION -> . menos EXPRESION
    (32) EXPRESION -> . ParA EXPRESION ParC
    (33) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (34) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (35) EXPRESION -> . EXPRESION menorQue EXPRESION
    (36) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (37) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (38) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (39) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (40) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (41) EXPRESION -> . Float
    (42) EXPRESION -> . Entero
    (43) EXPRESION -> . Booleano
    (44) EXPRESION -> . String
    (45) EXPRESION -> . Char
    (46) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    Float           shift and go to state 24
    Entero          shift and go to state 25
    Booleano        shift and go to state 26
    String          shift and go to state 27
    Char            shift and go to state 28
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 91

state 63

    (12) DECLARACION -> Let Mut Id igual EXPRESION . ptComa
    (26) EXPRESION -> EXPRESION . mas EXPRESION
    (27) EXPRESION -> EXPRESION . menos EXPRESION
    (28) EXPRESION -> EXPRESION . por EXPRESION
    (29) EXPRESION -> EXPRESION . dividido EXPRESION
    (30) EXPRESION -> EXPRESION . modulo EXPRESION
    (35) EXPRESION -> EXPRESION . menorQue EXPRESION
    (36) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (37) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (38) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (39) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (40) EXPRESION -> EXPRESION . diferenteQue EXPRESION

    ptComa          shift and go to state 92
    mas             shift and go to state 40
    menos           shift and go to state 41
    por             shift and go to state 42
    dividido        shift and go to state 43
    modulo          shift and go to state 44
    menorQue        shift and go to state 45
    mayorQue        shift and go to state 46
    menorIgual      shift and go to state 47
    mayorIgual      shift and go to state 48
    dobleIgual      shift and go to state 49
    diferenteQue    shift and go to state 50


state 64

    (13) DECLARACION -> Let Mut Id dosPuntos I64 . igual EXPRESION ptComa

    igual           shift and go to state 93


state 65

    (14) DECLARACION -> Let Mut Id dosPuntos F64 . igual EXPRESION ptComa

    igual           shift and go to state 94


state 66

    (15) DECLARACION -> Let Mut Id dosPuntos StrA . igual EXPRESION ptComa

    igual           shift and go to state 95


state 67

    (16) DECLARACION -> Let Mut Id dosPuntos Str . igual EXPRESION ptComa

    igual           shift and go to state 96


state 68

    (17) DECLARACION -> Let Mut Id dosPuntos Bool . igual EXPRESION ptComa

    igual           shift and go to state 97


state 69

    (18) DECLARACION -> Let Mut Id dosPuntos CharAux . igual EXPRESION ptComa

    igual           shift and go to state 98


state 70

    (26) EXPRESION -> EXPRESION mas EXPRESION .
    (26) EXPRESION -> EXPRESION . mas EXPRESION
    (27) EXPRESION -> EXPRESION . menos EXPRESION
    (28) EXPRESION -> EXPRESION . por EXPRESION
    (29) EXPRESION -> EXPRESION . dividido EXPRESION
    (30) EXPRESION -> EXPRESION . modulo EXPRESION
    (35) EXPRESION -> EXPRESION . menorQue EXPRESION
    (36) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (37) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (38) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (39) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (40) EXPRESION -> EXPRESION . diferenteQue EXPRESION

    ptComa          reduce using rule 26 (EXPRESION -> EXPRESION mas EXPRESION .)
    mas             reduce using rule 26 (EXPRESION -> EXPRESION mas EXPRESION .)
    menos           reduce using rule 26 (EXPRESION -> EXPRESION mas EXPRESION .)
    ParC            reduce using rule 26 (EXPRESION -> EXPRESION mas EXPRESION .)
    Coma            reduce using rule 26 (EXPRESION -> EXPRESION mas EXPRESION .)
    por             shift and go to state 42
    dividido        shift and go to state 43
    modulo          shift and go to state 44
    menorQue        shift and go to state 45
    mayorQue        shift and go to state 46
    menorIgual      shift and go to state 47
    mayorIgual      shift and go to state 48
    dobleIgual      shift and go to state 49
    diferenteQue    shift and go to state 50

  ! por             [ reduce using rule 26 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! dividido        [ reduce using rule 26 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! modulo          [ reduce using rule 26 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! menorQue        [ reduce using rule 26 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! mayorQue        [ reduce using rule 26 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! menorIgual      [ reduce using rule 26 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! mayorIgual      [ reduce using rule 26 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! dobleIgual      [ reduce using rule 26 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! diferenteQue    [ reduce using rule 26 (EXPRESION -> EXPRESION mas EXPRESION .) ]
  ! mas             [ shift and go to state 40 ]
  ! menos           [ shift and go to state 41 ]


state 71

    (27) EXPRESION -> EXPRESION menos EXPRESION .
    (26) EXPRESION -> EXPRESION . mas EXPRESION
    (27) EXPRESION -> EXPRESION . menos EXPRESION
    (28) EXPRESION -> EXPRESION . por EXPRESION
    (29) EXPRESION -> EXPRESION . dividido EXPRESION
    (30) EXPRESION -> EXPRESION . modulo EXPRESION
    (35) EXPRESION -> EXPRESION . menorQue EXPRESION
    (36) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (37) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (38) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (39) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (40) EXPRESION -> EXPRESION . diferenteQue EXPRESION

    ptComa          reduce using rule 27 (EXPRESION -> EXPRESION menos EXPRESION .)
    mas             reduce using rule 27 (EXPRESION -> EXPRESION menos EXPRESION .)
    menos           reduce using rule 27 (EXPRESION -> EXPRESION menos EXPRESION .)
    ParC            reduce using rule 27 (EXPRESION -> EXPRESION menos EXPRESION .)
    Coma            reduce using rule 27 (EXPRESION -> EXPRESION menos EXPRESION .)
    por             shift and go to state 42
    dividido        shift and go to state 43
    modulo          shift and go to state 44
    menorQue        shift and go to state 45
    mayorQue        shift and go to state 46
    menorIgual      shift and go to state 47
    mayorIgual      shift and go to state 48
    dobleIgual      shift and go to state 49
    diferenteQue    shift and go to state 50

  ! por             [ reduce using rule 27 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! dividido        [ reduce using rule 27 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! modulo          [ reduce using rule 27 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! menorQue        [ reduce using rule 27 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! mayorQue        [ reduce using rule 27 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! menorIgual      [ reduce using rule 27 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! mayorIgual      [ reduce using rule 27 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! dobleIgual      [ reduce using rule 27 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! diferenteQue    [ reduce using rule 27 (EXPRESION -> EXPRESION menos EXPRESION .) ]
  ! mas             [ shift and go to state 40 ]
  ! menos           [ shift and go to state 41 ]


state 72

    (28) EXPRESION -> EXPRESION por EXPRESION .
    (26) EXPRESION -> EXPRESION . mas EXPRESION
    (27) EXPRESION -> EXPRESION . menos EXPRESION
    (28) EXPRESION -> EXPRESION . por EXPRESION
    (29) EXPRESION -> EXPRESION . dividido EXPRESION
    (30) EXPRESION -> EXPRESION . modulo EXPRESION
    (35) EXPRESION -> EXPRESION . menorQue EXPRESION
    (36) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (37) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (38) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (39) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (40) EXPRESION -> EXPRESION . diferenteQue EXPRESION

    ptComa          reduce using rule 28 (EXPRESION -> EXPRESION por EXPRESION .)
    mas             reduce using rule 28 (EXPRESION -> EXPRESION por EXPRESION .)
    menos           reduce using rule 28 (EXPRESION -> EXPRESION por EXPRESION .)
    por             reduce using rule 28 (EXPRESION -> EXPRESION por EXPRESION .)
    dividido        reduce using rule 28 (EXPRESION -> EXPRESION por EXPRESION .)
    modulo          reduce using rule 28 (EXPRESION -> EXPRESION por EXPRESION .)
    menorQue        reduce using rule 28 (EXPRESION -> EXPRESION por EXPRESION .)
    mayorQue        reduce using rule 28 (EXPRESION -> EXPRESION por EXPRESION .)
    menorIgual      reduce using rule 28 (EXPRESION -> EXPRESION por EXPRESION .)
    mayorIgual      reduce using rule 28 (EXPRESION -> EXPRESION por EXPRESION .)
    dobleIgual      reduce using rule 28 (EXPRESION -> EXPRESION por EXPRESION .)
    diferenteQue    reduce using rule 28 (EXPRESION -> EXPRESION por EXPRESION .)
    ParC            reduce using rule 28 (EXPRESION -> EXPRESION por EXPRESION .)
    Coma            reduce using rule 28 (EXPRESION -> EXPRESION por EXPRESION .)

  ! mas             [ shift and go to state 40 ]
  ! menos           [ shift and go to state 41 ]
  ! por             [ shift and go to state 42 ]
  ! dividido        [ shift and go to state 43 ]
  ! modulo          [ shift and go to state 44 ]
  ! menorQue        [ shift and go to state 45 ]
  ! mayorQue        [ shift and go to state 46 ]
  ! menorIgual      [ shift and go to state 47 ]
  ! mayorIgual      [ shift and go to state 48 ]
  ! dobleIgual      [ shift and go to state 49 ]
  ! diferenteQue    [ shift and go to state 50 ]


state 73

    (29) EXPRESION -> EXPRESION dividido EXPRESION .
    (26) EXPRESION -> EXPRESION . mas EXPRESION
    (27) EXPRESION -> EXPRESION . menos EXPRESION
    (28) EXPRESION -> EXPRESION . por EXPRESION
    (29) EXPRESION -> EXPRESION . dividido EXPRESION
    (30) EXPRESION -> EXPRESION . modulo EXPRESION
    (35) EXPRESION -> EXPRESION . menorQue EXPRESION
    (36) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (37) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (38) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (39) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (40) EXPRESION -> EXPRESION . diferenteQue EXPRESION

    ptComa          reduce using rule 29 (EXPRESION -> EXPRESION dividido EXPRESION .)
    mas             reduce using rule 29 (EXPRESION -> EXPRESION dividido EXPRESION .)
    menos           reduce using rule 29 (EXPRESION -> EXPRESION dividido EXPRESION .)
    por             reduce using rule 29 (EXPRESION -> EXPRESION dividido EXPRESION .)
    dividido        reduce using rule 29 (EXPRESION -> EXPRESION dividido EXPRESION .)
    modulo          reduce using rule 29 (EXPRESION -> EXPRESION dividido EXPRESION .)
    menorQue        reduce using rule 29 (EXPRESION -> EXPRESION dividido EXPRESION .)
    mayorQue        reduce using rule 29 (EXPRESION -> EXPRESION dividido EXPRESION .)
    menorIgual      reduce using rule 29 (EXPRESION -> EXPRESION dividido EXPRESION .)
    mayorIgual      reduce using rule 29 (EXPRESION -> EXPRESION dividido EXPRESION .)
    dobleIgual      reduce using rule 29 (EXPRESION -> EXPRESION dividido EXPRESION .)
    diferenteQue    reduce using rule 29 (EXPRESION -> EXPRESION dividido EXPRESION .)
    ParC            reduce using rule 29 (EXPRESION -> EXPRESION dividido EXPRESION .)
    Coma            reduce using rule 29 (EXPRESION -> EXPRESION dividido EXPRESION .)

  ! mas             [ shift and go to state 40 ]
  ! menos           [ shift and go to state 41 ]
  ! por             [ shift and go to state 42 ]
  ! dividido        [ shift and go to state 43 ]
  ! modulo          [ shift and go to state 44 ]
  ! menorQue        [ shift and go to state 45 ]
  ! mayorQue        [ shift and go to state 46 ]
  ! menorIgual      [ shift and go to state 47 ]
  ! mayorIgual      [ shift and go to state 48 ]
  ! dobleIgual      [ shift and go to state 49 ]
  ! diferenteQue    [ shift and go to state 50 ]


state 74

    (30) EXPRESION -> EXPRESION modulo EXPRESION .
    (26) EXPRESION -> EXPRESION . mas EXPRESION
    (27) EXPRESION -> EXPRESION . menos EXPRESION
    (28) EXPRESION -> EXPRESION . por EXPRESION
    (29) EXPRESION -> EXPRESION . dividido EXPRESION
    (30) EXPRESION -> EXPRESION . modulo EXPRESION
    (35) EXPRESION -> EXPRESION . menorQue EXPRESION
    (36) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (37) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (38) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (39) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (40) EXPRESION -> EXPRESION . diferenteQue EXPRESION

    ptComa          reduce using rule 30 (EXPRESION -> EXPRESION modulo EXPRESION .)
    mas             reduce using rule 30 (EXPRESION -> EXPRESION modulo EXPRESION .)
    menos           reduce using rule 30 (EXPRESION -> EXPRESION modulo EXPRESION .)
    por             reduce using rule 30 (EXPRESION -> EXPRESION modulo EXPRESION .)
    dividido        reduce using rule 30 (EXPRESION -> EXPRESION modulo EXPRESION .)
    modulo          reduce using rule 30 (EXPRESION -> EXPRESION modulo EXPRESION .)
    menorQue        reduce using rule 30 (EXPRESION -> EXPRESION modulo EXPRESION .)
    mayorQue        reduce using rule 30 (EXPRESION -> EXPRESION modulo EXPRESION .)
    menorIgual      reduce using rule 30 (EXPRESION -> EXPRESION modulo EXPRESION .)
    mayorIgual      reduce using rule 30 (EXPRESION -> EXPRESION modulo EXPRESION .)
    dobleIgual      reduce using rule 30 (EXPRESION -> EXPRESION modulo EXPRESION .)
    diferenteQue    reduce using rule 30 (EXPRESION -> EXPRESION modulo EXPRESION .)
    ParC            reduce using rule 30 (EXPRESION -> EXPRESION modulo EXPRESION .)
    Coma            reduce using rule 30 (EXPRESION -> EXPRESION modulo EXPRESION .)

  ! mas             [ shift and go to state 40 ]
  ! menos           [ shift and go to state 41 ]
  ! por             [ shift and go to state 42 ]
  ! dividido        [ shift and go to state 43 ]
  ! modulo          [ shift and go to state 44 ]
  ! menorQue        [ shift and go to state 45 ]
  ! mayorQue        [ shift and go to state 46 ]
  ! menorIgual      [ shift and go to state 47 ]
  ! mayorIgual      [ shift and go to state 48 ]
  ! dobleIgual      [ shift and go to state 49 ]
  ! diferenteQue    [ shift and go to state 50 ]


state 75

    (35) EXPRESION -> EXPRESION menorQue EXPRESION .
    (26) EXPRESION -> EXPRESION . mas EXPRESION
    (27) EXPRESION -> EXPRESION . menos EXPRESION
    (28) EXPRESION -> EXPRESION . por EXPRESION
    (29) EXPRESION -> EXPRESION . dividido EXPRESION
    (30) EXPRESION -> EXPRESION . modulo EXPRESION
    (35) EXPRESION -> EXPRESION . menorQue EXPRESION
    (36) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (37) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (38) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (39) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (40) EXPRESION -> EXPRESION . diferenteQue EXPRESION

    ptComa          reduce using rule 35 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    mas             reduce using rule 35 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    menos           reduce using rule 35 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    menorQue        reduce using rule 35 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    mayorQue        reduce using rule 35 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    menorIgual      reduce using rule 35 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    mayorIgual      reduce using rule 35 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    dobleIgual      reduce using rule 35 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    diferenteQue    reduce using rule 35 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    ParC            reduce using rule 35 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    Coma            reduce using rule 35 (EXPRESION -> EXPRESION menorQue EXPRESION .)
    por             shift and go to state 42
    dividido        shift and go to state 43
    modulo          shift and go to state 44

  ! por             [ reduce using rule 35 (EXPRESION -> EXPRESION menorQue EXPRESION .) ]
  ! dividido        [ reduce using rule 35 (EXPRESION -> EXPRESION menorQue EXPRESION .) ]
  ! modulo          [ reduce using rule 35 (EXPRESION -> EXPRESION menorQue EXPRESION .) ]
  ! mas             [ shift and go to state 40 ]
  ! menos           [ shift and go to state 41 ]
  ! menorQue        [ shift and go to state 45 ]
  ! mayorQue        [ shift and go to state 46 ]
  ! menorIgual      [ shift and go to state 47 ]
  ! mayorIgual      [ shift and go to state 48 ]
  ! dobleIgual      [ shift and go to state 49 ]
  ! diferenteQue    [ shift and go to state 50 ]


state 76

    (36) EXPRESION -> EXPRESION mayorQue EXPRESION .
    (26) EXPRESION -> EXPRESION . mas EXPRESION
    (27) EXPRESION -> EXPRESION . menos EXPRESION
    (28) EXPRESION -> EXPRESION . por EXPRESION
    (29) EXPRESION -> EXPRESION . dividido EXPRESION
    (30) EXPRESION -> EXPRESION . modulo EXPRESION
    (35) EXPRESION -> EXPRESION . menorQue EXPRESION
    (36) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (37) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (38) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (39) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (40) EXPRESION -> EXPRESION . diferenteQue EXPRESION

    ptComa          reduce using rule 36 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    mas             reduce using rule 36 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    menos           reduce using rule 36 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    menorQue        reduce using rule 36 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    mayorQue        reduce using rule 36 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    menorIgual      reduce using rule 36 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    mayorIgual      reduce using rule 36 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    dobleIgual      reduce using rule 36 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    diferenteQue    reduce using rule 36 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    ParC            reduce using rule 36 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    Coma            reduce using rule 36 (EXPRESION -> EXPRESION mayorQue EXPRESION .)
    por             shift and go to state 42
    dividido        shift and go to state 43
    modulo          shift and go to state 44

  ! por             [ reduce using rule 36 (EXPRESION -> EXPRESION mayorQue EXPRESION .) ]
  ! dividido        [ reduce using rule 36 (EXPRESION -> EXPRESION mayorQue EXPRESION .) ]
  ! modulo          [ reduce using rule 36 (EXPRESION -> EXPRESION mayorQue EXPRESION .) ]
  ! mas             [ shift and go to state 40 ]
  ! menos           [ shift and go to state 41 ]
  ! menorQue        [ shift and go to state 45 ]
  ! mayorQue        [ shift and go to state 46 ]
  ! menorIgual      [ shift and go to state 47 ]
  ! mayorIgual      [ shift and go to state 48 ]
  ! dobleIgual      [ shift and go to state 49 ]
  ! diferenteQue    [ shift and go to state 50 ]


state 77

    (37) EXPRESION -> EXPRESION menorIgual EXPRESION .
    (26) EXPRESION -> EXPRESION . mas EXPRESION
    (27) EXPRESION -> EXPRESION . menos EXPRESION
    (28) EXPRESION -> EXPRESION . por EXPRESION
    (29) EXPRESION -> EXPRESION . dividido EXPRESION
    (30) EXPRESION -> EXPRESION . modulo EXPRESION
    (35) EXPRESION -> EXPRESION . menorQue EXPRESION
    (36) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (37) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (38) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (39) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (40) EXPRESION -> EXPRESION . diferenteQue EXPRESION

    ptComa          reduce using rule 37 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    mas             reduce using rule 37 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    menos           reduce using rule 37 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    menorQue        reduce using rule 37 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    mayorQue        reduce using rule 37 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    menorIgual      reduce using rule 37 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    mayorIgual      reduce using rule 37 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    dobleIgual      reduce using rule 37 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    diferenteQue    reduce using rule 37 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    ParC            reduce using rule 37 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    Coma            reduce using rule 37 (EXPRESION -> EXPRESION menorIgual EXPRESION .)
    por             shift and go to state 42
    dividido        shift and go to state 43
    modulo          shift and go to state 44

  ! por             [ reduce using rule 37 (EXPRESION -> EXPRESION menorIgual EXPRESION .) ]
  ! dividido        [ reduce using rule 37 (EXPRESION -> EXPRESION menorIgual EXPRESION .) ]
  ! modulo          [ reduce using rule 37 (EXPRESION -> EXPRESION menorIgual EXPRESION .) ]
  ! mas             [ shift and go to state 40 ]
  ! menos           [ shift and go to state 41 ]
  ! menorQue        [ shift and go to state 45 ]
  ! mayorQue        [ shift and go to state 46 ]
  ! menorIgual      [ shift and go to state 47 ]
  ! mayorIgual      [ shift and go to state 48 ]
  ! dobleIgual      [ shift and go to state 49 ]
  ! diferenteQue    [ shift and go to state 50 ]


state 78

    (38) EXPRESION -> EXPRESION mayorIgual EXPRESION .
    (26) EXPRESION -> EXPRESION . mas EXPRESION
    (27) EXPRESION -> EXPRESION . menos EXPRESION
    (28) EXPRESION -> EXPRESION . por EXPRESION
    (29) EXPRESION -> EXPRESION . dividido EXPRESION
    (30) EXPRESION -> EXPRESION . modulo EXPRESION
    (35) EXPRESION -> EXPRESION . menorQue EXPRESION
    (36) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (37) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (38) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (39) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (40) EXPRESION -> EXPRESION . diferenteQue EXPRESION

    ptComa          reduce using rule 38 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    mas             reduce using rule 38 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    menos           reduce using rule 38 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    menorQue        reduce using rule 38 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    mayorQue        reduce using rule 38 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    menorIgual      reduce using rule 38 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    mayorIgual      reduce using rule 38 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    dobleIgual      reduce using rule 38 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    diferenteQue    reduce using rule 38 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    ParC            reduce using rule 38 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    Coma            reduce using rule 38 (EXPRESION -> EXPRESION mayorIgual EXPRESION .)
    por             shift and go to state 42
    dividido        shift and go to state 43
    modulo          shift and go to state 44

  ! por             [ reduce using rule 38 (EXPRESION -> EXPRESION mayorIgual EXPRESION .) ]
  ! dividido        [ reduce using rule 38 (EXPRESION -> EXPRESION mayorIgual EXPRESION .) ]
  ! modulo          [ reduce using rule 38 (EXPRESION -> EXPRESION mayorIgual EXPRESION .) ]
  ! mas             [ shift and go to state 40 ]
  ! menos           [ shift and go to state 41 ]
  ! menorQue        [ shift and go to state 45 ]
  ! mayorQue        [ shift and go to state 46 ]
  ! menorIgual      [ shift and go to state 47 ]
  ! mayorIgual      [ shift and go to state 48 ]
  ! dobleIgual      [ shift and go to state 49 ]
  ! diferenteQue    [ shift and go to state 50 ]


state 79

    (39) EXPRESION -> EXPRESION dobleIgual EXPRESION .
    (26) EXPRESION -> EXPRESION . mas EXPRESION
    (27) EXPRESION -> EXPRESION . menos EXPRESION
    (28) EXPRESION -> EXPRESION . por EXPRESION
    (29) EXPRESION -> EXPRESION . dividido EXPRESION
    (30) EXPRESION -> EXPRESION . modulo EXPRESION
    (35) EXPRESION -> EXPRESION . menorQue EXPRESION
    (36) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (37) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (38) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (39) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (40) EXPRESION -> EXPRESION . diferenteQue EXPRESION

    ptComa          reduce using rule 39 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    mas             reduce using rule 39 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    menos           reduce using rule 39 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    menorQue        reduce using rule 39 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    mayorQue        reduce using rule 39 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    menorIgual      reduce using rule 39 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    mayorIgual      reduce using rule 39 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    dobleIgual      reduce using rule 39 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    diferenteQue    reduce using rule 39 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    ParC            reduce using rule 39 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    Coma            reduce using rule 39 (EXPRESION -> EXPRESION dobleIgual EXPRESION .)
    por             shift and go to state 42
    dividido        shift and go to state 43
    modulo          shift and go to state 44

  ! por             [ reduce using rule 39 (EXPRESION -> EXPRESION dobleIgual EXPRESION .) ]
  ! dividido        [ reduce using rule 39 (EXPRESION -> EXPRESION dobleIgual EXPRESION .) ]
  ! modulo          [ reduce using rule 39 (EXPRESION -> EXPRESION dobleIgual EXPRESION .) ]
  ! mas             [ shift and go to state 40 ]
  ! menos           [ shift and go to state 41 ]
  ! menorQue        [ shift and go to state 45 ]
  ! mayorQue        [ shift and go to state 46 ]
  ! menorIgual      [ shift and go to state 47 ]
  ! mayorIgual      [ shift and go to state 48 ]
  ! dobleIgual      [ shift and go to state 49 ]
  ! diferenteQue    [ shift and go to state 50 ]


state 80

    (40) EXPRESION -> EXPRESION diferenteQue EXPRESION .
    (26) EXPRESION -> EXPRESION . mas EXPRESION
    (27) EXPRESION -> EXPRESION . menos EXPRESION
    (28) EXPRESION -> EXPRESION . por EXPRESION
    (29) EXPRESION -> EXPRESION . dividido EXPRESION
    (30) EXPRESION -> EXPRESION . modulo EXPRESION
    (35) EXPRESION -> EXPRESION . menorQue EXPRESION
    (36) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (37) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (38) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (39) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (40) EXPRESION -> EXPRESION . diferenteQue EXPRESION

    ptComa          reduce using rule 40 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    mas             reduce using rule 40 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    menos           reduce using rule 40 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    menorQue        reduce using rule 40 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    mayorQue        reduce using rule 40 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    menorIgual      reduce using rule 40 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    mayorIgual      reduce using rule 40 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    dobleIgual      reduce using rule 40 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    diferenteQue    reduce using rule 40 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    ParC            reduce using rule 40 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    Coma            reduce using rule 40 (EXPRESION -> EXPRESION diferenteQue EXPRESION .)
    por             shift and go to state 42
    dividido        shift and go to state 43
    modulo          shift and go to state 44

  ! por             [ reduce using rule 40 (EXPRESION -> EXPRESION diferenteQue EXPRESION .) ]
  ! dividido        [ reduce using rule 40 (EXPRESION -> EXPRESION diferenteQue EXPRESION .) ]
  ! modulo          [ reduce using rule 40 (EXPRESION -> EXPRESION diferenteQue EXPRESION .) ]
  ! mas             [ shift and go to state 40 ]
  ! menos           [ shift and go to state 41 ]
  ! menorQue        [ shift and go to state 45 ]
  ! mayorQue        [ shift and go to state 46 ]
  ! menorIgual      [ shift and go to state 47 ]
  ! mayorIgual      [ shift and go to state 48 ]
  ! dobleIgual      [ shift and go to state 49 ]
  ! diferenteQue    [ shift and go to state 50 ]


state 81

    (32) EXPRESION -> ParA EXPRESION ParC .

    ptComa          reduce using rule 32 (EXPRESION -> ParA EXPRESION ParC .)
    mas             reduce using rule 32 (EXPRESION -> ParA EXPRESION ParC .)
    menos           reduce using rule 32 (EXPRESION -> ParA EXPRESION ParC .)
    por             reduce using rule 32 (EXPRESION -> ParA EXPRESION ParC .)
    dividido        reduce using rule 32 (EXPRESION -> ParA EXPRESION ParC .)
    modulo          reduce using rule 32 (EXPRESION -> ParA EXPRESION ParC .)
    menorQue        reduce using rule 32 (EXPRESION -> ParA EXPRESION ParC .)
    mayorQue        reduce using rule 32 (EXPRESION -> ParA EXPRESION ParC .)
    menorIgual      reduce using rule 32 (EXPRESION -> ParA EXPRESION ParC .)
    mayorIgual      reduce using rule 32 (EXPRESION -> ParA EXPRESION ParC .)
    dobleIgual      reduce using rule 32 (EXPRESION -> ParA EXPRESION ParC .)
    diferenteQue    reduce using rule 32 (EXPRESION -> ParA EXPRESION ParC .)
    ParC            reduce using rule 32 (EXPRESION -> ParA EXPRESION ParC .)
    Coma            reduce using rule 32 (EXPRESION -> ParA EXPRESION ParC .)


state 82

    (33) EXPRESION -> I64 dosPuntos dosPuntos . Powi ParA EXPRESION Coma EXPRESION ParC

    Powi            shift and go to state 99


state 83

    (34) EXPRESION -> F64 dosPuntos dosPuntos . Powf ParA EXPRESION Coma EXPRESION ParC

    Powf            shift and go to state 100


state 84

    (22) IMPRIMIR -> PrintLn not ParA String ParC . ptComa

    ptComa          shift and go to state 101


state 85

    (23) IMPRIMIR -> PrintLn not ParA String Coma . COMASEX ParC ptComa
    (24) COMASEX -> . COMASEX Coma EXPRESION
    (25) COMASEX -> . EXPRESION
    (26) EXPRESION -> . EXPRESION mas EXPRESION
    (27) EXPRESION -> . EXPRESION menos EXPRESION
    (28) EXPRESION -> . EXPRESION por EXPRESION
    (29) EXPRESION -> . EXPRESION dividido EXPRESION
    (30) EXPRESION -> . EXPRESION modulo EXPRESION
    (31) EXPRESION -> . menos EXPRESION
    (32) EXPRESION -> . ParA EXPRESION ParC
    (33) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (34) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (35) EXPRESION -> . EXPRESION menorQue EXPRESION
    (36) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (37) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (38) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (39) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (40) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (41) EXPRESION -> . Float
    (42) EXPRESION -> . Entero
    (43) EXPRESION -> . Booleano
    (44) EXPRESION -> . String
    (45) EXPRESION -> . Char
    (46) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    Float           shift and go to state 24
    Entero          shift and go to state 25
    Booleano        shift and go to state 26
    String          shift and go to state 27
    Char            shift and go to state 28
    Id              shift and go to state 18

    COMASEX                        shift and go to state 102
    EXPRESION                      shift and go to state 103

state 86

    (6) DECLARACION -> Let Id dosPuntos I64 igual EXPRESION . ptComa
    (26) EXPRESION -> EXPRESION . mas EXPRESION
    (27) EXPRESION -> EXPRESION . menos EXPRESION
    (28) EXPRESION -> EXPRESION . por EXPRESION
    (29) EXPRESION -> EXPRESION . dividido EXPRESION
    (30) EXPRESION -> EXPRESION . modulo EXPRESION
    (35) EXPRESION -> EXPRESION . menorQue EXPRESION
    (36) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (37) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (38) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (39) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (40) EXPRESION -> EXPRESION . diferenteQue EXPRESION

    ptComa          shift and go to state 104
    mas             shift and go to state 40
    menos           shift and go to state 41
    por             shift and go to state 42
    dividido        shift and go to state 43
    modulo          shift and go to state 44
    menorQue        shift and go to state 45
    mayorQue        shift and go to state 46
    menorIgual      shift and go to state 47
    mayorIgual      shift and go to state 48
    dobleIgual      shift and go to state 49
    diferenteQue    shift and go to state 50


state 87

    (7) DECLARACION -> Let Id dosPuntos F64 igual EXPRESION . ptComa
    (26) EXPRESION -> EXPRESION . mas EXPRESION
    (27) EXPRESION -> EXPRESION . menos EXPRESION
    (28) EXPRESION -> EXPRESION . por EXPRESION
    (29) EXPRESION -> EXPRESION . dividido EXPRESION
    (30) EXPRESION -> EXPRESION . modulo EXPRESION
    (35) EXPRESION -> EXPRESION . menorQue EXPRESION
    (36) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (37) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (38) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (39) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (40) EXPRESION -> EXPRESION . diferenteQue EXPRESION

    ptComa          shift and go to state 105
    mas             shift and go to state 40
    menos           shift and go to state 41
    por             shift and go to state 42
    dividido        shift and go to state 43
    modulo          shift and go to state 44
    menorQue        shift and go to state 45
    mayorQue        shift and go to state 46
    menorIgual      shift and go to state 47
    mayorIgual      shift and go to state 48
    dobleIgual      shift and go to state 49
    diferenteQue    shift and go to state 50


state 88

    (8) DECLARACION -> Let Id dosPuntos StrA igual EXPRESION . ptComa
    (26) EXPRESION -> EXPRESION . mas EXPRESION
    (27) EXPRESION -> EXPRESION . menos EXPRESION
    (28) EXPRESION -> EXPRESION . por EXPRESION
    (29) EXPRESION -> EXPRESION . dividido EXPRESION
    (30) EXPRESION -> EXPRESION . modulo EXPRESION
    (35) EXPRESION -> EXPRESION . menorQue EXPRESION
    (36) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (37) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (38) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (39) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (40) EXPRESION -> EXPRESION . diferenteQue EXPRESION

    ptComa          shift and go to state 106
    mas             shift and go to state 40
    menos           shift and go to state 41
    por             shift and go to state 42
    dividido        shift and go to state 43
    modulo          shift and go to state 44
    menorQue        shift and go to state 45
    mayorQue        shift and go to state 46
    menorIgual      shift and go to state 47
    mayorIgual      shift and go to state 48
    dobleIgual      shift and go to state 49
    diferenteQue    shift and go to state 50


state 89

    (9) DECLARACION -> Let Id dosPuntos Str igual EXPRESION . ptComa
    (26) EXPRESION -> EXPRESION . mas EXPRESION
    (27) EXPRESION -> EXPRESION . menos EXPRESION
    (28) EXPRESION -> EXPRESION . por EXPRESION
    (29) EXPRESION -> EXPRESION . dividido EXPRESION
    (30) EXPRESION -> EXPRESION . modulo EXPRESION
    (35) EXPRESION -> EXPRESION . menorQue EXPRESION
    (36) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (37) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (38) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (39) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (40) EXPRESION -> EXPRESION . diferenteQue EXPRESION

    ptComa          shift and go to state 107
    mas             shift and go to state 40
    menos           shift and go to state 41
    por             shift and go to state 42
    dividido        shift and go to state 43
    modulo          shift and go to state 44
    menorQue        shift and go to state 45
    mayorQue        shift and go to state 46
    menorIgual      shift and go to state 47
    mayorIgual      shift and go to state 48
    dobleIgual      shift and go to state 49
    diferenteQue    shift and go to state 50


state 90

    (10) DECLARACION -> Let Id dosPuntos Bool igual EXPRESION . ptComa
    (26) EXPRESION -> EXPRESION . mas EXPRESION
    (27) EXPRESION -> EXPRESION . menos EXPRESION
    (28) EXPRESION -> EXPRESION . por EXPRESION
    (29) EXPRESION -> EXPRESION . dividido EXPRESION
    (30) EXPRESION -> EXPRESION . modulo EXPRESION
    (35) EXPRESION -> EXPRESION . menorQue EXPRESION
    (36) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (37) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (38) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (39) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (40) EXPRESION -> EXPRESION . diferenteQue EXPRESION

    ptComa          shift and go to state 108
    mas             shift and go to state 40
    menos           shift and go to state 41
    por             shift and go to state 42
    dividido        shift and go to state 43
    modulo          shift and go to state 44
    menorQue        shift and go to state 45
    mayorQue        shift and go to state 46
    menorIgual      shift and go to state 47
    mayorIgual      shift and go to state 48
    dobleIgual      shift and go to state 49
    diferenteQue    shift and go to state 50


state 91

    (11) DECLARACION -> Let Id dosPuntos CharAux igual EXPRESION . ptComa
    (26) EXPRESION -> EXPRESION . mas EXPRESION
    (27) EXPRESION -> EXPRESION . menos EXPRESION
    (28) EXPRESION -> EXPRESION . por EXPRESION
    (29) EXPRESION -> EXPRESION . dividido EXPRESION
    (30) EXPRESION -> EXPRESION . modulo EXPRESION
    (35) EXPRESION -> EXPRESION . menorQue EXPRESION
    (36) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (37) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (38) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (39) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (40) EXPRESION -> EXPRESION . diferenteQue EXPRESION

    ptComa          shift and go to state 109
    mas             shift and go to state 40
    menos           shift and go to state 41
    por             shift and go to state 42
    dividido        shift and go to state 43
    modulo          shift and go to state 44
    menorQue        shift and go to state 45
    mayorQue        shift and go to state 46
    menorIgual      shift and go to state 47
    mayorIgual      shift and go to state 48
    dobleIgual      shift and go to state 49
    diferenteQue    shift and go to state 50


state 92

    (12) DECLARACION -> Let Mut Id igual EXPRESION ptComa .

    Let             reduce using rule 12 (DECLARACION -> Let Mut Id igual EXPRESION ptComa .)
    Id              reduce using rule 12 (DECLARACION -> Let Mut Id igual EXPRESION ptComa .)
    PrintLn         reduce using rule 12 (DECLARACION -> Let Mut Id igual EXPRESION ptComa .)
    $end            reduce using rule 12 (DECLARACION -> Let Mut Id igual EXPRESION ptComa .)


state 93

    (13) DECLARACION -> Let Mut Id dosPuntos I64 igual . EXPRESION ptComa
    (26) EXPRESION -> . EXPRESION mas EXPRESION
    (27) EXPRESION -> . EXPRESION menos EXPRESION
    (28) EXPRESION -> . EXPRESION por EXPRESION
    (29) EXPRESION -> . EXPRESION dividido EXPRESION
    (30) EXPRESION -> . EXPRESION modulo EXPRESION
    (31) EXPRESION -> . menos EXPRESION
    (32) EXPRESION -> . ParA EXPRESION ParC
    (33) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (34) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (35) EXPRESION -> . EXPRESION menorQue EXPRESION
    (36) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (37) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (38) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (39) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (40) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (41) EXPRESION -> . Float
    (42) EXPRESION -> . Entero
    (43) EXPRESION -> . Booleano
    (44) EXPRESION -> . String
    (45) EXPRESION -> . Char
    (46) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    Float           shift and go to state 24
    Entero          shift and go to state 25
    Booleano        shift and go to state 26
    String          shift and go to state 27
    Char            shift and go to state 28
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 110

state 94

    (14) DECLARACION -> Let Mut Id dosPuntos F64 igual . EXPRESION ptComa
    (26) EXPRESION -> . EXPRESION mas EXPRESION
    (27) EXPRESION -> . EXPRESION menos EXPRESION
    (28) EXPRESION -> . EXPRESION por EXPRESION
    (29) EXPRESION -> . EXPRESION dividido EXPRESION
    (30) EXPRESION -> . EXPRESION modulo EXPRESION
    (31) EXPRESION -> . menos EXPRESION
    (32) EXPRESION -> . ParA EXPRESION ParC
    (33) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (34) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (35) EXPRESION -> . EXPRESION menorQue EXPRESION
    (36) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (37) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (38) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (39) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (40) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (41) EXPRESION -> . Float
    (42) EXPRESION -> . Entero
    (43) EXPRESION -> . Booleano
    (44) EXPRESION -> . String
    (45) EXPRESION -> . Char
    (46) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    Float           shift and go to state 24
    Entero          shift and go to state 25
    Booleano        shift and go to state 26
    String          shift and go to state 27
    Char            shift and go to state 28
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 111

state 95

    (15) DECLARACION -> Let Mut Id dosPuntos StrA igual . EXPRESION ptComa
    (26) EXPRESION -> . EXPRESION mas EXPRESION
    (27) EXPRESION -> . EXPRESION menos EXPRESION
    (28) EXPRESION -> . EXPRESION por EXPRESION
    (29) EXPRESION -> . EXPRESION dividido EXPRESION
    (30) EXPRESION -> . EXPRESION modulo EXPRESION
    (31) EXPRESION -> . menos EXPRESION
    (32) EXPRESION -> . ParA EXPRESION ParC
    (33) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (34) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (35) EXPRESION -> . EXPRESION menorQue EXPRESION
    (36) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (37) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (38) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (39) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (40) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (41) EXPRESION -> . Float
    (42) EXPRESION -> . Entero
    (43) EXPRESION -> . Booleano
    (44) EXPRESION -> . String
    (45) EXPRESION -> . Char
    (46) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    Float           shift and go to state 24
    Entero          shift and go to state 25
    Booleano        shift and go to state 26
    String          shift and go to state 27
    Char            shift and go to state 28
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 112

state 96

    (16) DECLARACION -> Let Mut Id dosPuntos Str igual . EXPRESION ptComa
    (26) EXPRESION -> . EXPRESION mas EXPRESION
    (27) EXPRESION -> . EXPRESION menos EXPRESION
    (28) EXPRESION -> . EXPRESION por EXPRESION
    (29) EXPRESION -> . EXPRESION dividido EXPRESION
    (30) EXPRESION -> . EXPRESION modulo EXPRESION
    (31) EXPRESION -> . menos EXPRESION
    (32) EXPRESION -> . ParA EXPRESION ParC
    (33) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (34) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (35) EXPRESION -> . EXPRESION menorQue EXPRESION
    (36) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (37) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (38) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (39) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (40) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (41) EXPRESION -> . Float
    (42) EXPRESION -> . Entero
    (43) EXPRESION -> . Booleano
    (44) EXPRESION -> . String
    (45) EXPRESION -> . Char
    (46) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    Float           shift and go to state 24
    Entero          shift and go to state 25
    Booleano        shift and go to state 26
    String          shift and go to state 27
    Char            shift and go to state 28
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 113

state 97

    (17) DECLARACION -> Let Mut Id dosPuntos Bool igual . EXPRESION ptComa
    (26) EXPRESION -> . EXPRESION mas EXPRESION
    (27) EXPRESION -> . EXPRESION menos EXPRESION
    (28) EXPRESION -> . EXPRESION por EXPRESION
    (29) EXPRESION -> . EXPRESION dividido EXPRESION
    (30) EXPRESION -> . EXPRESION modulo EXPRESION
    (31) EXPRESION -> . menos EXPRESION
    (32) EXPRESION -> . ParA EXPRESION ParC
    (33) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (34) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (35) EXPRESION -> . EXPRESION menorQue EXPRESION
    (36) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (37) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (38) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (39) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (40) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (41) EXPRESION -> . Float
    (42) EXPRESION -> . Entero
    (43) EXPRESION -> . Booleano
    (44) EXPRESION -> . String
    (45) EXPRESION -> . Char
    (46) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    Float           shift and go to state 24
    Entero          shift and go to state 25
    Booleano        shift and go to state 26
    String          shift and go to state 27
    Char            shift and go to state 28
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 114

state 98

    (18) DECLARACION -> Let Mut Id dosPuntos CharAux igual . EXPRESION ptComa
    (26) EXPRESION -> . EXPRESION mas EXPRESION
    (27) EXPRESION -> . EXPRESION menos EXPRESION
    (28) EXPRESION -> . EXPRESION por EXPRESION
    (29) EXPRESION -> . EXPRESION dividido EXPRESION
    (30) EXPRESION -> . EXPRESION modulo EXPRESION
    (31) EXPRESION -> . menos EXPRESION
    (32) EXPRESION -> . ParA EXPRESION ParC
    (33) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (34) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (35) EXPRESION -> . EXPRESION menorQue EXPRESION
    (36) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (37) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (38) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (39) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (40) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (41) EXPRESION -> . Float
    (42) EXPRESION -> . Entero
    (43) EXPRESION -> . Booleano
    (44) EXPRESION -> . String
    (45) EXPRESION -> . Char
    (46) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    Float           shift and go to state 24
    Entero          shift and go to state 25
    Booleano        shift and go to state 26
    String          shift and go to state 27
    Char            shift and go to state 28
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 115

state 99

    (33) EXPRESION -> I64 dosPuntos dosPuntos Powi . ParA EXPRESION Coma EXPRESION ParC

    ParA            shift and go to state 116


state 100

    (34) EXPRESION -> F64 dosPuntos dosPuntos Powf . ParA EXPRESION Coma EXPRESION ParC

    ParA            shift and go to state 117


state 101

    (22) IMPRIMIR -> PrintLn not ParA String ParC ptComa .

    Let             reduce using rule 22 (IMPRIMIR -> PrintLn not ParA String ParC ptComa .)
    Id              reduce using rule 22 (IMPRIMIR -> PrintLn not ParA String ParC ptComa .)
    PrintLn         reduce using rule 22 (IMPRIMIR -> PrintLn not ParA String ParC ptComa .)
    $end            reduce using rule 22 (IMPRIMIR -> PrintLn not ParA String ParC ptComa .)


state 102

    (23) IMPRIMIR -> PrintLn not ParA String Coma COMASEX . ParC ptComa
    (24) COMASEX -> COMASEX . Coma EXPRESION

    ParC            shift and go to state 119
    Coma            shift and go to state 118


state 103

    (25) COMASEX -> EXPRESION .
    (26) EXPRESION -> EXPRESION . mas EXPRESION
    (27) EXPRESION -> EXPRESION . menos EXPRESION
    (28) EXPRESION -> EXPRESION . por EXPRESION
    (29) EXPRESION -> EXPRESION . dividido EXPRESION
    (30) EXPRESION -> EXPRESION . modulo EXPRESION
    (35) EXPRESION -> EXPRESION . menorQue EXPRESION
    (36) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (37) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (38) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (39) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (40) EXPRESION -> EXPRESION . diferenteQue EXPRESION

    ParC            reduce using rule 25 (COMASEX -> EXPRESION .)
    Coma            reduce using rule 25 (COMASEX -> EXPRESION .)
    mas             shift and go to state 40
    menos           shift and go to state 41
    por             shift and go to state 42
    dividido        shift and go to state 43
    modulo          shift and go to state 44
    menorQue        shift and go to state 45
    mayorQue        shift and go to state 46
    menorIgual      shift and go to state 47
    mayorIgual      shift and go to state 48
    dobleIgual      shift and go to state 49
    diferenteQue    shift and go to state 50


state 104

    (6) DECLARACION -> Let Id dosPuntos I64 igual EXPRESION ptComa .

    Let             reduce using rule 6 (DECLARACION -> Let Id dosPuntos I64 igual EXPRESION ptComa .)
    Id              reduce using rule 6 (DECLARACION -> Let Id dosPuntos I64 igual EXPRESION ptComa .)
    PrintLn         reduce using rule 6 (DECLARACION -> Let Id dosPuntos I64 igual EXPRESION ptComa .)
    $end            reduce using rule 6 (DECLARACION -> Let Id dosPuntos I64 igual EXPRESION ptComa .)


state 105

    (7) DECLARACION -> Let Id dosPuntos F64 igual EXPRESION ptComa .

    Let             reduce using rule 7 (DECLARACION -> Let Id dosPuntos F64 igual EXPRESION ptComa .)
    Id              reduce using rule 7 (DECLARACION -> Let Id dosPuntos F64 igual EXPRESION ptComa .)
    PrintLn         reduce using rule 7 (DECLARACION -> Let Id dosPuntos F64 igual EXPRESION ptComa .)
    $end            reduce using rule 7 (DECLARACION -> Let Id dosPuntos F64 igual EXPRESION ptComa .)


state 106

    (8) DECLARACION -> Let Id dosPuntos StrA igual EXPRESION ptComa .

    Let             reduce using rule 8 (DECLARACION -> Let Id dosPuntos StrA igual EXPRESION ptComa .)
    Id              reduce using rule 8 (DECLARACION -> Let Id dosPuntos StrA igual EXPRESION ptComa .)
    PrintLn         reduce using rule 8 (DECLARACION -> Let Id dosPuntos StrA igual EXPRESION ptComa .)
    $end            reduce using rule 8 (DECLARACION -> Let Id dosPuntos StrA igual EXPRESION ptComa .)


state 107

    (9) DECLARACION -> Let Id dosPuntos Str igual EXPRESION ptComa .

    Let             reduce using rule 9 (DECLARACION -> Let Id dosPuntos Str igual EXPRESION ptComa .)
    Id              reduce using rule 9 (DECLARACION -> Let Id dosPuntos Str igual EXPRESION ptComa .)
    PrintLn         reduce using rule 9 (DECLARACION -> Let Id dosPuntos Str igual EXPRESION ptComa .)
    $end            reduce using rule 9 (DECLARACION -> Let Id dosPuntos Str igual EXPRESION ptComa .)


state 108

    (10) DECLARACION -> Let Id dosPuntos Bool igual EXPRESION ptComa .

    Let             reduce using rule 10 (DECLARACION -> Let Id dosPuntos Bool igual EXPRESION ptComa .)
    Id              reduce using rule 10 (DECLARACION -> Let Id dosPuntos Bool igual EXPRESION ptComa .)
    PrintLn         reduce using rule 10 (DECLARACION -> Let Id dosPuntos Bool igual EXPRESION ptComa .)
    $end            reduce using rule 10 (DECLARACION -> Let Id dosPuntos Bool igual EXPRESION ptComa .)


state 109

    (11) DECLARACION -> Let Id dosPuntos CharAux igual EXPRESION ptComa .

    Let             reduce using rule 11 (DECLARACION -> Let Id dosPuntos CharAux igual EXPRESION ptComa .)
    Id              reduce using rule 11 (DECLARACION -> Let Id dosPuntos CharAux igual EXPRESION ptComa .)
    PrintLn         reduce using rule 11 (DECLARACION -> Let Id dosPuntos CharAux igual EXPRESION ptComa .)
    $end            reduce using rule 11 (DECLARACION -> Let Id dosPuntos CharAux igual EXPRESION ptComa .)


state 110

    (13) DECLARACION -> Let Mut Id dosPuntos I64 igual EXPRESION . ptComa
    (26) EXPRESION -> EXPRESION . mas EXPRESION
    (27) EXPRESION -> EXPRESION . menos EXPRESION
    (28) EXPRESION -> EXPRESION . por EXPRESION
    (29) EXPRESION -> EXPRESION . dividido EXPRESION
    (30) EXPRESION -> EXPRESION . modulo EXPRESION
    (35) EXPRESION -> EXPRESION . menorQue EXPRESION
    (36) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (37) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (38) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (39) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (40) EXPRESION -> EXPRESION . diferenteQue EXPRESION

    ptComa          shift and go to state 120
    mas             shift and go to state 40
    menos           shift and go to state 41
    por             shift and go to state 42
    dividido        shift and go to state 43
    modulo          shift and go to state 44
    menorQue        shift and go to state 45
    mayorQue        shift and go to state 46
    menorIgual      shift and go to state 47
    mayorIgual      shift and go to state 48
    dobleIgual      shift and go to state 49
    diferenteQue    shift and go to state 50


state 111

    (14) DECLARACION -> Let Mut Id dosPuntos F64 igual EXPRESION . ptComa
    (26) EXPRESION -> EXPRESION . mas EXPRESION
    (27) EXPRESION -> EXPRESION . menos EXPRESION
    (28) EXPRESION -> EXPRESION . por EXPRESION
    (29) EXPRESION -> EXPRESION . dividido EXPRESION
    (30) EXPRESION -> EXPRESION . modulo EXPRESION
    (35) EXPRESION -> EXPRESION . menorQue EXPRESION
    (36) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (37) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (38) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (39) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (40) EXPRESION -> EXPRESION . diferenteQue EXPRESION

    ptComa          shift and go to state 121
    mas             shift and go to state 40
    menos           shift and go to state 41
    por             shift and go to state 42
    dividido        shift and go to state 43
    modulo          shift and go to state 44
    menorQue        shift and go to state 45
    mayorQue        shift and go to state 46
    menorIgual      shift and go to state 47
    mayorIgual      shift and go to state 48
    dobleIgual      shift and go to state 49
    diferenteQue    shift and go to state 50


state 112

    (15) DECLARACION -> Let Mut Id dosPuntos StrA igual EXPRESION . ptComa
    (26) EXPRESION -> EXPRESION . mas EXPRESION
    (27) EXPRESION -> EXPRESION . menos EXPRESION
    (28) EXPRESION -> EXPRESION . por EXPRESION
    (29) EXPRESION -> EXPRESION . dividido EXPRESION
    (30) EXPRESION -> EXPRESION . modulo EXPRESION
    (35) EXPRESION -> EXPRESION . menorQue EXPRESION
    (36) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (37) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (38) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (39) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (40) EXPRESION -> EXPRESION . diferenteQue EXPRESION

    ptComa          shift and go to state 122
    mas             shift and go to state 40
    menos           shift and go to state 41
    por             shift and go to state 42
    dividido        shift and go to state 43
    modulo          shift and go to state 44
    menorQue        shift and go to state 45
    mayorQue        shift and go to state 46
    menorIgual      shift and go to state 47
    mayorIgual      shift and go to state 48
    dobleIgual      shift and go to state 49
    diferenteQue    shift and go to state 50


state 113

    (16) DECLARACION -> Let Mut Id dosPuntos Str igual EXPRESION . ptComa
    (26) EXPRESION -> EXPRESION . mas EXPRESION
    (27) EXPRESION -> EXPRESION . menos EXPRESION
    (28) EXPRESION -> EXPRESION . por EXPRESION
    (29) EXPRESION -> EXPRESION . dividido EXPRESION
    (30) EXPRESION -> EXPRESION . modulo EXPRESION
    (35) EXPRESION -> EXPRESION . menorQue EXPRESION
    (36) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (37) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (38) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (39) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (40) EXPRESION -> EXPRESION . diferenteQue EXPRESION

    ptComa          shift and go to state 123
    mas             shift and go to state 40
    menos           shift and go to state 41
    por             shift and go to state 42
    dividido        shift and go to state 43
    modulo          shift and go to state 44
    menorQue        shift and go to state 45
    mayorQue        shift and go to state 46
    menorIgual      shift and go to state 47
    mayorIgual      shift and go to state 48
    dobleIgual      shift and go to state 49
    diferenteQue    shift and go to state 50


state 114

    (17) DECLARACION -> Let Mut Id dosPuntos Bool igual EXPRESION . ptComa
    (26) EXPRESION -> EXPRESION . mas EXPRESION
    (27) EXPRESION -> EXPRESION . menos EXPRESION
    (28) EXPRESION -> EXPRESION . por EXPRESION
    (29) EXPRESION -> EXPRESION . dividido EXPRESION
    (30) EXPRESION -> EXPRESION . modulo EXPRESION
    (35) EXPRESION -> EXPRESION . menorQue EXPRESION
    (36) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (37) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (38) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (39) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (40) EXPRESION -> EXPRESION . diferenteQue EXPRESION

    ptComa          shift and go to state 124
    mas             shift and go to state 40
    menos           shift and go to state 41
    por             shift and go to state 42
    dividido        shift and go to state 43
    modulo          shift and go to state 44
    menorQue        shift and go to state 45
    mayorQue        shift and go to state 46
    menorIgual      shift and go to state 47
    mayorIgual      shift and go to state 48
    dobleIgual      shift and go to state 49
    diferenteQue    shift and go to state 50


state 115

    (18) DECLARACION -> Let Mut Id dosPuntos CharAux igual EXPRESION . ptComa
    (26) EXPRESION -> EXPRESION . mas EXPRESION
    (27) EXPRESION -> EXPRESION . menos EXPRESION
    (28) EXPRESION -> EXPRESION . por EXPRESION
    (29) EXPRESION -> EXPRESION . dividido EXPRESION
    (30) EXPRESION -> EXPRESION . modulo EXPRESION
    (35) EXPRESION -> EXPRESION . menorQue EXPRESION
    (36) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (37) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (38) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (39) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (40) EXPRESION -> EXPRESION . diferenteQue EXPRESION

    ptComa          shift and go to state 125
    mas             shift and go to state 40
    menos           shift and go to state 41
    por             shift and go to state 42
    dividido        shift and go to state 43
    modulo          shift and go to state 44
    menorQue        shift and go to state 45
    mayorQue        shift and go to state 46
    menorIgual      shift and go to state 47
    mayorIgual      shift and go to state 48
    dobleIgual      shift and go to state 49
    diferenteQue    shift and go to state 50


state 116

    (33) EXPRESION -> I64 dosPuntos dosPuntos Powi ParA . EXPRESION Coma EXPRESION ParC
    (26) EXPRESION -> . EXPRESION mas EXPRESION
    (27) EXPRESION -> . EXPRESION menos EXPRESION
    (28) EXPRESION -> . EXPRESION por EXPRESION
    (29) EXPRESION -> . EXPRESION dividido EXPRESION
    (30) EXPRESION -> . EXPRESION modulo EXPRESION
    (31) EXPRESION -> . menos EXPRESION
    (32) EXPRESION -> . ParA EXPRESION ParC
    (33) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (34) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (35) EXPRESION -> . EXPRESION menorQue EXPRESION
    (36) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (37) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (38) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (39) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (40) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (41) EXPRESION -> . Float
    (42) EXPRESION -> . Entero
    (43) EXPRESION -> . Booleano
    (44) EXPRESION -> . String
    (45) EXPRESION -> . Char
    (46) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    Float           shift and go to state 24
    Entero          shift and go to state 25
    Booleano        shift and go to state 26
    String          shift and go to state 27
    Char            shift and go to state 28
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 126

state 117

    (34) EXPRESION -> F64 dosPuntos dosPuntos Powf ParA . EXPRESION Coma EXPRESION ParC
    (26) EXPRESION -> . EXPRESION mas EXPRESION
    (27) EXPRESION -> . EXPRESION menos EXPRESION
    (28) EXPRESION -> . EXPRESION por EXPRESION
    (29) EXPRESION -> . EXPRESION dividido EXPRESION
    (30) EXPRESION -> . EXPRESION modulo EXPRESION
    (31) EXPRESION -> . menos EXPRESION
    (32) EXPRESION -> . ParA EXPRESION ParC
    (33) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (34) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (35) EXPRESION -> . EXPRESION menorQue EXPRESION
    (36) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (37) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (38) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (39) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (40) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (41) EXPRESION -> . Float
    (42) EXPRESION -> . Entero
    (43) EXPRESION -> . Booleano
    (44) EXPRESION -> . String
    (45) EXPRESION -> . Char
    (46) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    Float           shift and go to state 24
    Entero          shift and go to state 25
    Booleano        shift and go to state 26
    String          shift and go to state 27
    Char            shift and go to state 28
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 127

state 118

    (24) COMASEX -> COMASEX Coma . EXPRESION
    (26) EXPRESION -> . EXPRESION mas EXPRESION
    (27) EXPRESION -> . EXPRESION menos EXPRESION
    (28) EXPRESION -> . EXPRESION por EXPRESION
    (29) EXPRESION -> . EXPRESION dividido EXPRESION
    (30) EXPRESION -> . EXPRESION modulo EXPRESION
    (31) EXPRESION -> . menos EXPRESION
    (32) EXPRESION -> . ParA EXPRESION ParC
    (33) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (34) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (35) EXPRESION -> . EXPRESION menorQue EXPRESION
    (36) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (37) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (38) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (39) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (40) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (41) EXPRESION -> . Float
    (42) EXPRESION -> . Entero
    (43) EXPRESION -> . Booleano
    (44) EXPRESION -> . String
    (45) EXPRESION -> . Char
    (46) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    Float           shift and go to state 24
    Entero          shift and go to state 25
    Booleano        shift and go to state 26
    String          shift and go to state 27
    Char            shift and go to state 28
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 128

state 119

    (23) IMPRIMIR -> PrintLn not ParA String Coma COMASEX ParC . ptComa

    ptComa          shift and go to state 129


state 120

    (13) DECLARACION -> Let Mut Id dosPuntos I64 igual EXPRESION ptComa .

    Let             reduce using rule 13 (DECLARACION -> Let Mut Id dosPuntos I64 igual EXPRESION ptComa .)
    Id              reduce using rule 13 (DECLARACION -> Let Mut Id dosPuntos I64 igual EXPRESION ptComa .)
    PrintLn         reduce using rule 13 (DECLARACION -> Let Mut Id dosPuntos I64 igual EXPRESION ptComa .)
    $end            reduce using rule 13 (DECLARACION -> Let Mut Id dosPuntos I64 igual EXPRESION ptComa .)


state 121

    (14) DECLARACION -> Let Mut Id dosPuntos F64 igual EXPRESION ptComa .

    Let             reduce using rule 14 (DECLARACION -> Let Mut Id dosPuntos F64 igual EXPRESION ptComa .)
    Id              reduce using rule 14 (DECLARACION -> Let Mut Id dosPuntos F64 igual EXPRESION ptComa .)
    PrintLn         reduce using rule 14 (DECLARACION -> Let Mut Id dosPuntos F64 igual EXPRESION ptComa .)
    $end            reduce using rule 14 (DECLARACION -> Let Mut Id dosPuntos F64 igual EXPRESION ptComa .)


state 122

    (15) DECLARACION -> Let Mut Id dosPuntos StrA igual EXPRESION ptComa .

    Let             reduce using rule 15 (DECLARACION -> Let Mut Id dosPuntos StrA igual EXPRESION ptComa .)
    Id              reduce using rule 15 (DECLARACION -> Let Mut Id dosPuntos StrA igual EXPRESION ptComa .)
    PrintLn         reduce using rule 15 (DECLARACION -> Let Mut Id dosPuntos StrA igual EXPRESION ptComa .)
    $end            reduce using rule 15 (DECLARACION -> Let Mut Id dosPuntos StrA igual EXPRESION ptComa .)


state 123

    (16) DECLARACION -> Let Mut Id dosPuntos Str igual EXPRESION ptComa .

    Let             reduce using rule 16 (DECLARACION -> Let Mut Id dosPuntos Str igual EXPRESION ptComa .)
    Id              reduce using rule 16 (DECLARACION -> Let Mut Id dosPuntos Str igual EXPRESION ptComa .)
    PrintLn         reduce using rule 16 (DECLARACION -> Let Mut Id dosPuntos Str igual EXPRESION ptComa .)
    $end            reduce using rule 16 (DECLARACION -> Let Mut Id dosPuntos Str igual EXPRESION ptComa .)


state 124

    (17) DECLARACION -> Let Mut Id dosPuntos Bool igual EXPRESION ptComa .

    Let             reduce using rule 17 (DECLARACION -> Let Mut Id dosPuntos Bool igual EXPRESION ptComa .)
    Id              reduce using rule 17 (DECLARACION -> Let Mut Id dosPuntos Bool igual EXPRESION ptComa .)
    PrintLn         reduce using rule 17 (DECLARACION -> Let Mut Id dosPuntos Bool igual EXPRESION ptComa .)
    $end            reduce using rule 17 (DECLARACION -> Let Mut Id dosPuntos Bool igual EXPRESION ptComa .)


state 125

    (18) DECLARACION -> Let Mut Id dosPuntos CharAux igual EXPRESION ptComa .

    Let             reduce using rule 18 (DECLARACION -> Let Mut Id dosPuntos CharAux igual EXPRESION ptComa .)
    Id              reduce using rule 18 (DECLARACION -> Let Mut Id dosPuntos CharAux igual EXPRESION ptComa .)
    PrintLn         reduce using rule 18 (DECLARACION -> Let Mut Id dosPuntos CharAux igual EXPRESION ptComa .)
    $end            reduce using rule 18 (DECLARACION -> Let Mut Id dosPuntos CharAux igual EXPRESION ptComa .)


state 126

    (33) EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION . Coma EXPRESION ParC
    (26) EXPRESION -> EXPRESION . mas EXPRESION
    (27) EXPRESION -> EXPRESION . menos EXPRESION
    (28) EXPRESION -> EXPRESION . por EXPRESION
    (29) EXPRESION -> EXPRESION . dividido EXPRESION
    (30) EXPRESION -> EXPRESION . modulo EXPRESION
    (35) EXPRESION -> EXPRESION . menorQue EXPRESION
    (36) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (37) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (38) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (39) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (40) EXPRESION -> EXPRESION . diferenteQue EXPRESION

    Coma            shift and go to state 130
    mas             shift and go to state 40
    menos           shift and go to state 41
    por             shift and go to state 42
    dividido        shift and go to state 43
    modulo          shift and go to state 44
    menorQue        shift and go to state 45
    mayorQue        shift and go to state 46
    menorIgual      shift and go to state 47
    mayorIgual      shift and go to state 48
    dobleIgual      shift and go to state 49
    diferenteQue    shift and go to state 50


state 127

    (34) EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION . Coma EXPRESION ParC
    (26) EXPRESION -> EXPRESION . mas EXPRESION
    (27) EXPRESION -> EXPRESION . menos EXPRESION
    (28) EXPRESION -> EXPRESION . por EXPRESION
    (29) EXPRESION -> EXPRESION . dividido EXPRESION
    (30) EXPRESION -> EXPRESION . modulo EXPRESION
    (35) EXPRESION -> EXPRESION . menorQue EXPRESION
    (36) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (37) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (38) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (39) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (40) EXPRESION -> EXPRESION . diferenteQue EXPRESION

    Coma            shift and go to state 131
    mas             shift and go to state 40
    menos           shift and go to state 41
    por             shift and go to state 42
    dividido        shift and go to state 43
    modulo          shift and go to state 44
    menorQue        shift and go to state 45
    mayorQue        shift and go to state 46
    menorIgual      shift and go to state 47
    mayorIgual      shift and go to state 48
    dobleIgual      shift and go to state 49
    diferenteQue    shift and go to state 50


state 128

    (24) COMASEX -> COMASEX Coma EXPRESION .
    (26) EXPRESION -> EXPRESION . mas EXPRESION
    (27) EXPRESION -> EXPRESION . menos EXPRESION
    (28) EXPRESION -> EXPRESION . por EXPRESION
    (29) EXPRESION -> EXPRESION . dividido EXPRESION
    (30) EXPRESION -> EXPRESION . modulo EXPRESION
    (35) EXPRESION -> EXPRESION . menorQue EXPRESION
    (36) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (37) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (38) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (39) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (40) EXPRESION -> EXPRESION . diferenteQue EXPRESION

    ParC            reduce using rule 24 (COMASEX -> COMASEX Coma EXPRESION .)
    Coma            reduce using rule 24 (COMASEX -> COMASEX Coma EXPRESION .)
    mas             shift and go to state 40
    menos           shift and go to state 41
    por             shift and go to state 42
    dividido        shift and go to state 43
    modulo          shift and go to state 44
    menorQue        shift and go to state 45
    mayorQue        shift and go to state 46
    menorIgual      shift and go to state 47
    mayorIgual      shift and go to state 48
    dobleIgual      shift and go to state 49
    diferenteQue    shift and go to state 50


state 129

    (23) IMPRIMIR -> PrintLn not ParA String Coma COMASEX ParC ptComa .

    Let             reduce using rule 23 (IMPRIMIR -> PrintLn not ParA String Coma COMASEX ParC ptComa .)
    Id              reduce using rule 23 (IMPRIMIR -> PrintLn not ParA String Coma COMASEX ParC ptComa .)
    PrintLn         reduce using rule 23 (IMPRIMIR -> PrintLn not ParA String Coma COMASEX ParC ptComa .)
    $end            reduce using rule 23 (IMPRIMIR -> PrintLn not ParA String Coma COMASEX ParC ptComa .)


state 130

    (33) EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma . EXPRESION ParC
    (26) EXPRESION -> . EXPRESION mas EXPRESION
    (27) EXPRESION -> . EXPRESION menos EXPRESION
    (28) EXPRESION -> . EXPRESION por EXPRESION
    (29) EXPRESION -> . EXPRESION dividido EXPRESION
    (30) EXPRESION -> . EXPRESION modulo EXPRESION
    (31) EXPRESION -> . menos EXPRESION
    (32) EXPRESION -> . ParA EXPRESION ParC
    (33) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (34) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (35) EXPRESION -> . EXPRESION menorQue EXPRESION
    (36) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (37) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (38) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (39) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (40) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (41) EXPRESION -> . Float
    (42) EXPRESION -> . Entero
    (43) EXPRESION -> . Booleano
    (44) EXPRESION -> . String
    (45) EXPRESION -> . Char
    (46) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    Float           shift and go to state 24
    Entero          shift and go to state 25
    Booleano        shift and go to state 26
    String          shift and go to state 27
    Char            shift and go to state 28
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 132

state 131

    (34) EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma . EXPRESION ParC
    (26) EXPRESION -> . EXPRESION mas EXPRESION
    (27) EXPRESION -> . EXPRESION menos EXPRESION
    (28) EXPRESION -> . EXPRESION por EXPRESION
    (29) EXPRESION -> . EXPRESION dividido EXPRESION
    (30) EXPRESION -> . EXPRESION modulo EXPRESION
    (31) EXPRESION -> . menos EXPRESION
    (32) EXPRESION -> . ParA EXPRESION ParC
    (33) EXPRESION -> . I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC
    (34) EXPRESION -> . F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC
    (35) EXPRESION -> . EXPRESION menorQue EXPRESION
    (36) EXPRESION -> . EXPRESION mayorQue EXPRESION
    (37) EXPRESION -> . EXPRESION menorIgual EXPRESION
    (38) EXPRESION -> . EXPRESION mayorIgual EXPRESION
    (39) EXPRESION -> . EXPRESION dobleIgual EXPRESION
    (40) EXPRESION -> . EXPRESION diferenteQue EXPRESION
    (41) EXPRESION -> . Float
    (42) EXPRESION -> . Entero
    (43) EXPRESION -> . Booleano
    (44) EXPRESION -> . String
    (45) EXPRESION -> . Char
    (46) EXPRESION -> . Id

    menos           shift and go to state 20
    ParA            shift and go to state 21
    I64             shift and go to state 22
    F64             shift and go to state 23
    Float           shift and go to state 24
    Entero          shift and go to state 25
    Booleano        shift and go to state 26
    String          shift and go to state 27
    Char            shift and go to state 28
    Id              shift and go to state 18

    EXPRESION                      shift and go to state 133

state 132

    (33) EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION . ParC
    (26) EXPRESION -> EXPRESION . mas EXPRESION
    (27) EXPRESION -> EXPRESION . menos EXPRESION
    (28) EXPRESION -> EXPRESION . por EXPRESION
    (29) EXPRESION -> EXPRESION . dividido EXPRESION
    (30) EXPRESION -> EXPRESION . modulo EXPRESION
    (35) EXPRESION -> EXPRESION . menorQue EXPRESION
    (36) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (37) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (38) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (39) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (40) EXPRESION -> EXPRESION . diferenteQue EXPRESION

    ParC            shift and go to state 134
    mas             shift and go to state 40
    menos           shift and go to state 41
    por             shift and go to state 42
    dividido        shift and go to state 43
    modulo          shift and go to state 44
    menorQue        shift and go to state 45
    mayorQue        shift and go to state 46
    menorIgual      shift and go to state 47
    mayorIgual      shift and go to state 48
    dobleIgual      shift and go to state 49
    diferenteQue    shift and go to state 50


state 133

    (34) EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION . ParC
    (26) EXPRESION -> EXPRESION . mas EXPRESION
    (27) EXPRESION -> EXPRESION . menos EXPRESION
    (28) EXPRESION -> EXPRESION . por EXPRESION
    (29) EXPRESION -> EXPRESION . dividido EXPRESION
    (30) EXPRESION -> EXPRESION . modulo EXPRESION
    (35) EXPRESION -> EXPRESION . menorQue EXPRESION
    (36) EXPRESION -> EXPRESION . mayorQue EXPRESION
    (37) EXPRESION -> EXPRESION . menorIgual EXPRESION
    (38) EXPRESION -> EXPRESION . mayorIgual EXPRESION
    (39) EXPRESION -> EXPRESION . dobleIgual EXPRESION
    (40) EXPRESION -> EXPRESION . diferenteQue EXPRESION

    ParC            shift and go to state 135
    mas             shift and go to state 40
    menos           shift and go to state 41
    por             shift and go to state 42
    dividido        shift and go to state 43
    modulo          shift and go to state 44
    menorQue        shift and go to state 45
    mayorQue        shift and go to state 46
    menorIgual      shift and go to state 47
    mayorIgual      shift and go to state 48
    dobleIgual      shift and go to state 49
    diferenteQue    shift and go to state 50


state 134

    (33) EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .

    ptComa          reduce using rule 33 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    mas             reduce using rule 33 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    menos           reduce using rule 33 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    por             reduce using rule 33 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    dividido        reduce using rule 33 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    modulo          reduce using rule 33 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    menorQue        reduce using rule 33 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    mayorQue        reduce using rule 33 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    menorIgual      reduce using rule 33 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    mayorIgual      reduce using rule 33 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    dobleIgual      reduce using rule 33 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    diferenteQue    reduce using rule 33 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    ParC            reduce using rule 33 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)
    Coma            reduce using rule 33 (EXPRESION -> I64 dosPuntos dosPuntos Powi ParA EXPRESION Coma EXPRESION ParC .)


state 135

    (34) EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .

    ptComa          reduce using rule 34 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    mas             reduce using rule 34 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    menos           reduce using rule 34 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    por             reduce using rule 34 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    dividido        reduce using rule 34 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    modulo          reduce using rule 34 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    menorQue        reduce using rule 34 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    mayorQue        reduce using rule 34 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    menorIgual      reduce using rule 34 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    mayorIgual      reduce using rule 34 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    dobleIgual      reduce using rule 34 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    diferenteQue    reduce using rule 34 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    ParC            reduce using rule 34 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)
    Coma            reduce using rule 34 (EXPRESION -> F64 dosPuntos dosPuntos Powf ParA EXPRESION Coma EXPRESION ParC .)

